<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" tests="186" skipped="1" failures="0" errors="0" timestamp="2023-02-02T16:37:26" hostname="fv-az478-8" time="754.52">
  <properties/>
  <testcase name="testAllNodeTypesTest_JavaProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.174"/>
  <testcase name="testAllNodeTypesTest_JavaProfile_NoOneStepSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.258"/>
  <testcase name="testAllNodeTypesTest_SymbolicExecutionProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.114"/>
  <testcase name="testAnotherInstanceContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.19"/>
  <testcase name="testAnotherStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.113"/>
  <testcase name="testArraySumWhileWithBreak()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.599"/>
  <testcase name="testArraySumWhileWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.092"/>
  <testcase name="testArraySumWhileWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.841"/>
  <testcase name="testArraySumWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.577"/>
  <testcase name="testAssumesUserInputTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.224"/>
  <testcase name="testBlockContractAssignableEverything()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.981"/>
  <testcase name="testBlockContractAssignableLocationNotRequested()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.881"/>
  <testcase name="testBlockContractAssignableRequestedLocation()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.92"/>
  <testcase name="testBlockContractParamRemaned()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.933"/>
  <testcase name="testBlockContractPreconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.924"/>
  <testcase name="testBlockContractThisTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.002"/>
  <testcase name="testBlockContractVarRenamedLater()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.88"/>
  <testcase name="testBlockContractWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.223"/>
  <testcase name="testBlockContractWithExceptionPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.248"/>
  <testcase name="testBlockContractWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.904"/>
  <testcase name="testBlockContractWithReturnPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.92"/>
  <testcase name="testBranchPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.07"/>
  <testcase name="testBranchStatementBlockTest_ifNoBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.052"/>
  <testcase name="testBranchStatementBlockTest_min()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.081"/>
  <testcase name="testBranchStatementBlockTest_nestedIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.259"/>
  <testcase name="testBranchStatementBlockTest_onlyElse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.919"/>
  <testcase name="testBranchStatementBlockTest_onlyEmptyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.885"/>
  <testcase name="testBranchStatementBlockTest_onlyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.934"/>
  <testcase name="testBranchStatementBlockTest_recursive()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.177"/>
  <testcase name="testBranchStatementBlockTest_simpleBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.91"/>
  <testcase name="testBranchStatementBlockTest_switchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.693"/>
  <testcase name="testComplexConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="0.0">
    <skipped/>
  </testcase>
  <testcase name="testComplexFlatSteps()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.915"/>
  <testcase name="testComplexIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.154"/>
  <testcase name="testComplexPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.135"/>
  <testcase name="testConstraintsAfterUsedLoopInvariant()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.498"/>
  <testcase name="testConstraintsOfAppliedMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.154"/>
  <testcase name="testDoWhileFlaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.939"/>
  <testcase name="testDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.951"/>
  <testcase name="testElseIfDifferentVariables()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.197"/>
  <testcase name="testElseIfTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.955"/>
  <testcase name="testElseIfTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.026"/>
  <testcase name="testElseIfTest_variablesParameterAttributesChange()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.555"/>
  <testcase name="testEmptyBlockTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.892"/>
  <testcase name="testExceptionalMethodReturnTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.344"/>
  <testcase name="testExceptionalMethodReturnTestWithLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.759"/>
  <testcase name="testFixedRecursiveMethodCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.204"/>
  <testcase name="testForEachTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.224"/>
  <testcase name="testForFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.906"/>
  <testcase name="testForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.08"/>
  <testcase name="testFunctionalDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.184"/>
  <testcase name="testFunctionalForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.16"/>
  <testcase name="testFunctionalIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.087"/>
  <testcase name="testFunctionalWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.192"/>
  <testcase name="testIdenticalTermsDuringProof()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.308"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.962"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.961"/>
  <testcase name="testInstanceContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.984"/>
  <testcase name="testInstanceContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.941"/>
  <testcase name="testInstanceContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.935"/>
  <testcase name="testInstanceContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.939"/>
  <testcase name="testInstanceContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.931"/>
  <testcase name="testInstanceContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.979"/>
  <testcase name="testInstanceContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.008"/>
  <testcase name="testInstanceContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.009"/>
  <testcase name="testInstanceContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.993"/>
  <testcase name="testInstanceContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.947"/>
  <testcase name="testInstanceOfNotInEndlessLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.274"/>
  <testcase name="testJoinTestAfterAssignment()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.862"/>
  <testcase name="testJoinTestAfterBranchCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.885"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.852"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalAndSubgoals()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.886"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.854"/>
  <testcase name="testLabelTest_doubled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.898"/>
  <testcase name="testLabelTest_lost()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.883"/>
  <testcase name="testLoopBodyBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.876"/>
  <testcase name="testLoopInvariantAndOperationContractStrictlyPure()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.925"/>
  <testcase name="testLoopInvariantMethodReturnInDifferentModalities()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.96"/>
  <testcase name="testLoopIteration_LoopStatementCopied()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.003"/>
  <testcase name="testLoopIteration_LoopStatementReused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.964"/>
  <testcase name="testLoopIteration_LoopWithMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.462"/>
  <testcase name="testLoopStatementBlockTest_nestedLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.883"/>
  <testcase name="testLoopStatementBlockTest_simpleLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.96"/>
  <testcase name="testLoopUsageBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.878"/>
  <testcase name="testMethodCallOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.977"/>
  <testcase name="testMethodCallOnObjectWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.252"/>
  <testcase name="testMethodCallParallelTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.25"/>
  <testcase name="testMethodCallReturnTests()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="13.002"/>
  <testcase name="testMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.74"/>
  <testcase name="testMethodFormatTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.213"/>
  <testcase name="testMethodHierarchyCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.023"/>
  <testcase name="testMethodHierarchyCallWithExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.055"/>
  <testcase name="testNestedDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.058"/>
  <testcase name="testNestedForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.075"/>
  <testcase name="testNestedLoopsWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.705"/>
  <testcase name="testNestedWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.135"/>
  <testcase name="testPrettyPrinting_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.833"/>
  <testcase name="testPrettyPrinting_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.871"/>
  <testcase name="testRecursiveFibonacci_LONG_RUNNING_TEST()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="33.917"/>
  <testcase name="testSimpleConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.914"/>
  <testcase name="testSimpleIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.021"/>
  <testcase name="testSimpleIfNoConditionSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.866"/>
  <testcase name="testSimpleMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.938"/>
  <testcase name="testSimpleNullPointerSplitTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.099"/>
  <testcase name="testSimplePruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.075"/>
  <testcase name="testSimpleStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.924"/>
  <testcase name="testStatementKindTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.027"/>
  <testcase name="testStatements()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.881"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.942"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.92"/>
  <testcase name="testStaticContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.95"/>
  <testcase name="testStaticContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.952"/>
  <testcase name="testStaticContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.937"/>
  <testcase name="testStaticContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.915"/>
  <testcase name="testStaticContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.942"/>
  <testcase name="testStaticContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.949"/>
  <testcase name="testStaticContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.997"/>
  <testcase name="testStaticContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.009"/>
  <testcase name="testStaticContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.99"/>
  <testcase name="testStaticContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.936"/>
  <testcase name="testStaticDefaultContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.008"/>
  <testcase name="testStaticInstanceFieldChanged()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.803"/>
  <testcase name="testStaticMethodCall()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.045"/>
  <testcase name="testSwitchCaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.672"/>
  <testcase name="testSwitchCaseTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.867"/>
  <testcase name="testSymbolicExecutionCompletionsTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.506"/>
  <testcase name="testThrowTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.917"/>
  <testcase name="testThrowVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.875"/>
  <testcase name="testTryCatchFinally()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.108"/>
  <testcase name="testUnicode_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.628"/>
  <testcase name="testUnicode_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.692"/>
  <testcase name="testUseLoopInvariantArrayAverage()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.416"/>
  <testcase name="testUseLoopInvariantArraySizeDoWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.278"/>
  <testcase name="testUseLoopInvariantArraySizeWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.146"/>
  <testcase name="testUseLoopInvariantArraySumFor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.252"/>
  <testcase name="testUseLoopInvariantArraySumForEach()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.281"/>
  <testcase name="testUseLoopInvariantArraySumWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.295"/>
  <testcase name="testUseLoopInvariantArraySumWhileInitiallyInvalid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.266"/>
  <testcase name="testUseLoopInvariantLoopSplittingCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.758"/>
  <testcase name="testUseLoopInvariantTwoLoops()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.464"/>
  <testcase name="testUseLoopInvariantWithoutDecreasing()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.204"/>
  <testcase name="testUseOperationContractAllBranchesOpenTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.365"/>
  <testcase name="testUseOperationContractApplyContractTwice()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.89"/>
  <testcase name="testUseOperationContractExceptionalNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.94"/>
  <testcase name="testUseOperationContractFalsePreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.911"/>
  <testcase name="testUseOperationContractFixedNormalPostTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.896"/>
  <testcase name="testUseOperationContractInvalidPreconditionOnObjectTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.928"/>
  <testcase name="testUseOperationContractInvalidPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.954"/>
  <testcase name="testUseOperationContractLightweightOperationContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.004"/>
  <testcase name="testUseOperationContractNoExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.889"/>
  <testcase name="testUseOperationContractNoPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.89"/>
  <testcase name="testUseOperationContractNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.91"/>
  <testcase name="testUseOperationContractNormalAndExceptionalBranchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.149"/>
  <testcase name="testUseOperationContractNormalAndExceptionalTogetherTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.896"/>
  <testcase name="testUseOperationContractQueryTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.867"/>
  <testcase name="testUseOperationContractStatementsInImpliciteConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="13.574"/>
  <testcase name="testUseOperationContractVariableNestedOperationContractUse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.902"/>
  <testcase name="testVariablesArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.507"/>
  <testcase name="testVariablesArrayCreationInstanceTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.882"/>
  <testcase name="testVariablesArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.955"/>
  <testcase name="testVariablesArrayTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.959"/>
  <testcase name="testVariablesEmptyArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.728"/>
  <testcase name="testVariablesInstanceVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="20.574"/>
  <testcase name="testVariablesLocalTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.736"/>
  <testcase name="testVariablesNonSimpleArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="21.918"/>
  <testcase name="testVariablesNonSimpleArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.332"/>
  <testcase name="testVariablesStaticTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.454"/>
  <testcase name="testVariablesUnknownTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.232"/>
  <testcase name="testVerifiedTest_loop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.364"/>
  <testcase name="testVerifiedTest_magic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.898"/>
  <testcase name="testVerifiedTest_magicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.933"/>
  <testcase name="testVerifiedTest_notLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.475"/>
  <testcase name="testVerifiedTest_notMagic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.964"/>
  <testcase name="testVerifiedTest_notMagicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.907"/>
  <testcase name="testVerifyMin()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.347"/>
  <testcase name="testVerifyMinTrueBranch()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.776"/>
  <testcase name="testVerifyNumberNormal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.91"/>
  <testcase name="testVoidWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.443"/>
  <testcase name="testWhileFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.875"/>
  <testcase name="testWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.05"/>
  <testcase name="testWhileWithLoopInvariantInCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.64"/>
  <testcase name="testWhileWithMethodCallAsConditionOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.393"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.349"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.827"/>
  <testcase name="testWhileWithMethodCallAsCondition_preExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.356"/>
  <testcase name="testWhileWithMethodCallAsCondition_preMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.258"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
