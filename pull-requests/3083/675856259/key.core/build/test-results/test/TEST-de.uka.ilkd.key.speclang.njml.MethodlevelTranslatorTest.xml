<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" tests="13" skipped="0" failures="0" errors="0" timestamp="2023-05-02T15:22:09" hostname="fv-az553-779" time="0.078">
  <properties/>
  <testcase name="/* @ maintaining -1 &lt;= i &amp;&amp; i &lt;= a.length;&#10;  @ maintaining sum&#10;  @            == (\sum int j;&#10;  @                   i &lt;= j &amp;&amp; 0 &lt;= j &amp;&amp; j &lt; a.length;&#10;  @                   (\bigint)a[j]);&#10;  @ decreasing i; @*/&#10;// @ assert i &lt; 0 &amp;&amp; -1 &lt;= i &amp;&amp; i &lt;= a.length;&#10;// @ hence_by (i &lt; 0 &amp;&amp; -1 &lt;= i) ==&gt; i == -1;&#10;// @ assert i == -1 &amp;&amp; i &lt;= a.length;&#10;// @ assert sum == (\sum int j; 0 &lt;= j &amp;&amp; j &lt; a.length; (\bigint)a[j]);&#10;// @ set i = 0;&#10;// @ set collection.elementType = \type(int);&#10;// @ unreachable;&#10;// @ debug x = x + 1;&#10;// @ debug aList.add(y);" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.001"/>
  <testcase name="//@ ghost int oldx = x;&#10;        //@ ghost \bigint p = 0;&#10;        /*@ maintaining 0 &lt;= x &amp;&amp; x &lt;= oldx;&#10;          @ maintaining z == y * (oldx - x);&#10;&#9;  @ maintaining (\bigint)z == p;&#10;          @ decreasing  x;&#10;&#9;  @*/" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.008"/>
  <testcase name="//@ ghost \locset oldPcDep = UpdateAbstraction.pcDep;         //entering conditional&#10;//@ set UpdateAbstraction.pcDep = \set_union(UpdateAbstraction.pcDep, UpdateAbstraction.hDep); //entering conditional" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.003"/>
  <testcase name="loop_invariant&#10;     (\forall short j; true; true)&#10;     ;" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.0"/>
  <testcase name="/*@ loop_contract normal_behavior&#10;  @ requires i &lt;= 42;&#10;  @ ensures i == 42;&#10;  @*/" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.002"/>
  <testcase name="/*@&#10;   loop_invariant i &gt;= 0 &amp;&amp; i &lt;= length &amp;&amp;&#10;      srcOffset + i &gt;= 0 &amp;&amp; srcOffset + i &lt;= src.length &amp;&amp;&#10;      destOffset + i &gt;= 0 &amp;&amp; destOffset + i &lt;= dest.length &amp;&amp;&#10;     (\forall short j; j &gt;= 0 &amp;&amp; j&lt; length;&#10;         dest[destOffset + j] == (j&lt;i ? \old(src[srcOffset + j]) : \old(dest[destOffset + j]))&#10;     )&#10;   ;&#10;   loop_invariant&lt;savedHeap&gt;&#10;     (\forall short j; j &gt;= 0 &amp;&amp; j &lt; length;&#10;        \backup(dest[destOffset + j]) ==&#10;          ((j &gt;= i || \backup(\transactionUpdated(dest))) ?&#10;              \old(\backup(dest[destOffset + j])) :&#10;              \old(src[srcOffset + j]))&#10;     );&#10;   decreases length - i;&#10;   assignable&lt;heap&gt;&lt;savedHeap&gt; dest[destOffset..destOffset+length-1];&#10;@*/" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.046"/>
  <testcase name="//@ set cause = arg0;" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.0"/>
  <testcase name="//@ set message = arg0;&#10;//@ set cause = arg1;" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.001"/>
  <testcase name="//@ assert true;" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.001"/>
  <testcase name="//@ assume true;" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ loop_invariant&#10;          @   0 &lt;= k &amp;&amp; k &lt;= a.length&#10;          @   &amp;&amp; (\forall int i; 0 &lt;= i &amp;&amp; i &lt; k; a[i] &lt;= max)&#10;          @   &amp;&amp; (k == 0 ==&gt; max == 0)&#10;          @   &amp;&amp; (k &gt; 0 ==&gt; (\exists int i; 0 &lt;= i &amp;&amp; i &lt; k; max == a[i]))&#10;          @   &amp;&amp; sum == (\sum int i; 0 &lt;= i &amp;&amp; i&lt; k; a[i])&#10;          @   &amp;&amp; sum &lt;= k * max;&#10;          @&#10;          @  assignable sum, max;&#10;          @  decreases a.length - k;&#10;          @*/" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.007"/>
  <testcase name="merge_point;" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.0"/>
  <testcase name="merge_point&#10;merge_proc &quot;MergeByPredicateAbstraction&quot;&#10;merge_params {conjunctive: (int x) -&gt; {x &gt;= 0, (x == \old(b) || x == -\old(b))}};" classname="de.uka.ilkd.key.speclang.njml.MethodlevelTranslatorTest" time="0.002"/>
  <system-out><![CDATA[757016     DEBUG Test worker     d.u.i.k.s.n.ClasslevelTranslatorTest cases: 13 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
