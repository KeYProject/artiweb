<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" tests="186" skipped="1" failures="0" errors="0" timestamp="2023-02-04T10:17:16" hostname="fv-az851-363" time="720.312">
  <properties/>
  <testcase name="testAllNodeTypesTest_JavaProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.818"/>
  <testcase name="testAllNodeTypesTest_JavaProfile_NoOneStepSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.46"/>
  <testcase name="testAllNodeTypesTest_SymbolicExecutionProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.979"/>
  <testcase name="testAnotherInstanceContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.112"/>
  <testcase name="testAnotherStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.959"/>
  <testcase name="testArraySumWhileWithBreak()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.48"/>
  <testcase name="testArraySumWhileWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.866"/>
  <testcase name="testArraySumWhileWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.637"/>
  <testcase name="testArraySumWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.445"/>
  <testcase name="testAssumesUserInputTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.201"/>
  <testcase name="testBlockContractAssignableEverything()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.792"/>
  <testcase name="testBlockContractAssignableLocationNotRequested()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.7"/>
  <testcase name="testBlockContractAssignableRequestedLocation()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.738"/>
  <testcase name="testBlockContractParamRemaned()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.778"/>
  <testcase name="testBlockContractPreconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.739"/>
  <testcase name="testBlockContractThisTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.802"/>
  <testcase name="testBlockContractVarRenamedLater()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.699"/>
  <testcase name="testBlockContractWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.076"/>
  <testcase name="testBlockContractWithExceptionPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.047"/>
  <testcase name="testBlockContractWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.748"/>
  <testcase name="testBlockContractWithReturnPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.757"/>
  <testcase name="testBranchPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.893"/>
  <testcase name="testBranchStatementBlockTest_ifNoBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.923"/>
  <testcase name="testBranchStatementBlockTest_min()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.887"/>
  <testcase name="testBranchStatementBlockTest_nestedIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.1"/>
  <testcase name="testBranchStatementBlockTest_onlyElse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.782"/>
  <testcase name="testBranchStatementBlockTest_onlyEmptyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.73"/>
  <testcase name="testBranchStatementBlockTest_onlyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.784"/>
  <testcase name="testBranchStatementBlockTest_recursive()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.99"/>
  <testcase name="testBranchStatementBlockTest_simpleBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.747"/>
  <testcase name="testBranchStatementBlockTest_switchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.55"/>
  <testcase name="testComplexConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="0.0">
    <skipped/>
  </testcase>
  <testcase name="testComplexFlatSteps()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.744"/>
  <testcase name="testComplexIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.89"/>
  <testcase name="testComplexPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.907"/>
  <testcase name="testConstraintsAfterUsedLoopInvariant()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.097"/>
  <testcase name="testConstraintsOfAppliedMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.911"/>
  <testcase name="testDoWhileFlaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.747"/>
  <testcase name="testDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.789"/>
  <testcase name="testElseIfDifferentVariables()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.045"/>
  <testcase name="testElseIfTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.777"/>
  <testcase name="testElseIfTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.888"/>
  <testcase name="testElseIfTest_variablesParameterAttributesChange()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.32"/>
  <testcase name="testEmptyBlockTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.736"/>
  <testcase name="testExceptionalMethodReturnTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.142"/>
  <testcase name="testExceptionalMethodReturnTestWithLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.758"/>
  <testcase name="testFixedRecursiveMethodCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.108"/>
  <testcase name="testForEachTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.052"/>
  <testcase name="testForFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.742"/>
  <testcase name="testForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.918"/>
  <testcase name="testFunctionalDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.969"/>
  <testcase name="testFunctionalForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.013"/>
  <testcase name="testFunctionalIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.939"/>
  <testcase name="testFunctionalWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.014"/>
  <testcase name="testIdenticalTermsDuringProof()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.079"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.809"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.795"/>
  <testcase name="testInstanceContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.817"/>
  <testcase name="testInstanceContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.773"/>
  <testcase name="testInstanceContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.784"/>
  <testcase name="testInstanceContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.774"/>
  <testcase name="testInstanceContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.805"/>
  <testcase name="testInstanceContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.814"/>
  <testcase name="testInstanceContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.844"/>
  <testcase name="testInstanceContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.851"/>
  <testcase name="testInstanceContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.834"/>
  <testcase name="testInstanceContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.809"/>
  <testcase name="testInstanceOfNotInEndlessLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.133"/>
  <testcase name="testJoinTestAfterAssignment()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.703"/>
  <testcase name="testJoinTestAfterBranchCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.725"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.724"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalAndSubgoals()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.693"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.706"/>
  <testcase name="testLabelTest_doubled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.718"/>
  <testcase name="testLabelTest_lost()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.735"/>
  <testcase name="testLoopBodyBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.716"/>
  <testcase name="testLoopInvariantAndOperationContractStrictlyPure()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.768"/>
  <testcase name="testLoopInvariantMethodReturnInDifferentModalities()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.912"/>
  <testcase name="testLoopIteration_LoopStatementCopied()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.824"/>
  <testcase name="testLoopIteration_LoopStatementReused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.8"/>
  <testcase name="testLoopIteration_LoopWithMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.265"/>
  <testcase name="testLoopStatementBlockTest_nestedLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.744"/>
  <testcase name="testLoopStatementBlockTest_simpleLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.823"/>
  <testcase name="testLoopUsageBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.701"/>
  <testcase name="testMethodCallOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.828"/>
  <testcase name="testMethodCallOnObjectWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.062"/>
  <testcase name="testMethodCallParallelTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.078"/>
  <testcase name="testMethodCallReturnTests()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.478"/>
  <testcase name="testMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.57"/>
  <testcase name="testMethodFormatTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.036"/>
  <testcase name="testMethodHierarchyCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.865"/>
  <testcase name="testMethodHierarchyCallWithExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.897"/>
  <testcase name="testNestedDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.904"/>
  <testcase name="testNestedForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.929"/>
  <testcase name="testNestedLoopsWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.486"/>
  <testcase name="testNestedWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.976"/>
  <testcase name="testPrettyPrinting_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.599"/>
  <testcase name="testPrettyPrinting_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.635"/>
  <testcase name="testRecursiveFibonacci_LONG_RUNNING_TEST()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="33.992"/>
  <testcase name="testSimpleConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.804"/>
  <testcase name="testSimpleIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.883"/>
  <testcase name="testSimpleIfNoConditionSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.708"/>
  <testcase name="testSimpleMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.786"/>
  <testcase name="testSimpleNullPointerSplitTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.954"/>
  <testcase name="testSimplePruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.895"/>
  <testcase name="testSimpleStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.778"/>
  <testcase name="testStatementKindTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.882"/>
  <testcase name="testStatements()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.739"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.781"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.767"/>
  <testcase name="testStaticContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.798"/>
  <testcase name="testStaticContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.785"/>
  <testcase name="testStaticContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.771"/>
  <testcase name="testStaticContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.775"/>
  <testcase name="testStaticContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.77"/>
  <testcase name="testStaticContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.791"/>
  <testcase name="testStaticContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.836"/>
  <testcase name="testStaticContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.827"/>
  <testcase name="testStaticContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.831"/>
  <testcase name="testStaticContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.805"/>
  <testcase name="testStaticDefaultContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.83"/>
  <testcase name="testStaticInstanceFieldChanged()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.271"/>
  <testcase name="testStaticMethodCall()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.789"/>
  <testcase name="testSwitchCaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.453"/>
  <testcase name="testSwitchCaseTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.663"/>
  <testcase name="testSymbolicExecutionCompletionsTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.272"/>
  <testcase name="testThrowTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.706"/>
  <testcase name="testThrowVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.726"/>
  <testcase name="testTryCatchFinally()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.927"/>
  <testcase name="testUnicode_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.323"/>
  <testcase name="testUnicode_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.388"/>
  <testcase name="testUseLoopInvariantArrayAverage()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.265"/>
  <testcase name="testUseLoopInvariantArraySizeDoWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.108"/>
  <testcase name="testUseLoopInvariantArraySizeWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.953"/>
  <testcase name="testUseLoopInvariantArraySumFor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.102"/>
  <testcase name="testUseLoopInvariantArraySumForEach()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.115"/>
  <testcase name="testUseLoopInvariantArraySumWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.118"/>
  <testcase name="testUseLoopInvariantArraySumWhileInitiallyInvalid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.095"/>
  <testcase name="testUseLoopInvariantLoopSplittingCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.568"/>
  <testcase name="testUseLoopInvariantTwoLoops()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.414"/>
  <testcase name="testUseLoopInvariantWithoutDecreasing()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.032"/>
  <testcase name="testUseOperationContractAllBranchesOpenTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.22"/>
  <testcase name="testUseOperationContractApplyContractTwice()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.75"/>
  <testcase name="testUseOperationContractExceptionalNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.762"/>
  <testcase name="testUseOperationContractFalsePreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.769"/>
  <testcase name="testUseOperationContractFixedNormalPostTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.715"/>
  <testcase name="testUseOperationContractInvalidPreconditionOnObjectTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.77"/>
  <testcase name="testUseOperationContractInvalidPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.777"/>
  <testcase name="testUseOperationContractLightweightOperationContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.822"/>
  <testcase name="testUseOperationContractNoExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.739"/>
  <testcase name="testUseOperationContractNoPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.713"/>
  <testcase name="testUseOperationContractNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.784"/>
  <testcase name="testUseOperationContractNormalAndExceptionalBranchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.989"/>
  <testcase name="testUseOperationContractNormalAndExceptionalTogetherTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.738"/>
  <testcase name="testUseOperationContractQueryTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.712"/>
  <testcase name="testUseOperationContractStatementsInImpliciteConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="13.324"/>
  <testcase name="testUseOperationContractVariableNestedOperationContractUse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.718"/>
  <testcase name="testVariablesArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.305"/>
  <testcase name="testVariablesArrayCreationInstanceTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.685"/>
  <testcase name="testVariablesArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.728"/>
  <testcase name="testVariablesArrayTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.564"/>
  <testcase name="testVariablesEmptyArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.534"/>
  <testcase name="testVariablesInstanceVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="19.895"/>
  <testcase name="testVariablesLocalTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.522"/>
  <testcase name="testVariablesNonSimpleArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="21.278"/>
  <testcase name="testVariablesNonSimpleArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.093"/>
  <testcase name="testVariablesStaticTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.218"/>
  <testcase name="testVariablesUnknownTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.666"/>
  <testcase name="testVerifiedTest_loop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.231"/>
  <testcase name="testVerifiedTest_magic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.767"/>
  <testcase name="testVerifiedTest_magicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.759"/>
  <testcase name="testVerifiedTest_notLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.33"/>
  <testcase name="testVerifiedTest_notMagic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.78"/>
  <testcase name="testVerifiedTest_notMagicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.766"/>
  <testcase name="testVerifyMin()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.123"/>
  <testcase name="testVerifyMinTrueBranch()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.605"/>
  <testcase name="testVerifyNumberNormal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.753"/>
  <testcase name="testVoidWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.275"/>
  <testcase name="testWhileFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.729"/>
  <testcase name="testWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.893"/>
  <testcase name="testWhileWithLoopInvariantInCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.457"/>
  <testcase name="testWhileWithMethodCallAsConditionOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.299"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.172"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.654"/>
  <testcase name="testWhileWithMethodCallAsCondition_preExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.18"/>
  <testcase name="testWhileWithMethodCallAsCondition_preMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.081"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
