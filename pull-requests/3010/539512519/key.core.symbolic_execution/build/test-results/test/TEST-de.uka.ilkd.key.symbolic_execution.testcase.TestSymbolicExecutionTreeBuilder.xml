<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" tests="186" skipped="1" failures="0" errors="0" timestamp="2023-02-02T21:41:33" hostname="fv-az365-916" time="734.479">
  <properties/>
  <testcase name="testAllNodeTypesTest_JavaProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.265"/>
  <testcase name="testAllNodeTypesTest_JavaProfile_NoOneStepSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.018"/>
  <testcase name="testAllNodeTypesTest_SymbolicExecutionProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.045"/>
  <testcase name="testAnotherInstanceContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.141"/>
  <testcase name="testAnotherStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.007"/>
  <testcase name="testArraySumWhileWithBreak()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.246"/>
  <testcase name="testArraySumWhileWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.137"/>
  <testcase name="testArraySumWhileWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.76"/>
  <testcase name="testArraySumWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.53"/>
  <testcase name="testAssumesUserInputTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.983"/>
  <testcase name="testBlockContractAssignableEverything()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.677"/>
  <testcase name="testBlockContractAssignableLocationNotRequested()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.854"/>
  <testcase name="testBlockContractAssignableRequestedLocation()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.894"/>
  <testcase name="testBlockContractParamRemaned()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.909"/>
  <testcase name="testBlockContractPreconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.852"/>
  <testcase name="testBlockContractThisTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.867"/>
  <testcase name="testBlockContractVarRenamedLater()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.839"/>
  <testcase name="testBlockContractWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.202"/>
  <testcase name="testBlockContractWithExceptionPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.132"/>
  <testcase name="testBlockContractWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.833"/>
  <testcase name="testBlockContractWithReturnPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.823"/>
  <testcase name="testBranchPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.99"/>
  <testcase name="testBranchStatementBlockTest_ifNoBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.997"/>
  <testcase name="testBranchStatementBlockTest_min()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.976"/>
  <testcase name="testBranchStatementBlockTest_nestedIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.213"/>
  <testcase name="testBranchStatementBlockTest_onlyElse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.839"/>
  <testcase name="testBranchStatementBlockTest_onlyEmptyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.831"/>
  <testcase name="testBranchStatementBlockTest_onlyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.845"/>
  <testcase name="testBranchStatementBlockTest_recursive()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.097"/>
  <testcase name="testBranchStatementBlockTest_simpleBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.808"/>
  <testcase name="testBranchStatementBlockTest_switchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.751"/>
  <testcase name="testComplexConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="0.0">
    <skipped/>
  </testcase>
  <testcase name="testComplexFlatSteps()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.838"/>
  <testcase name="testComplexIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.073"/>
  <testcase name="testComplexPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.998"/>
  <testcase name="testConstraintsAfterUsedLoopInvariant()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.71"/>
  <testcase name="testConstraintsOfAppliedMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.305"/>
  <testcase name="testDoWhileFlaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.827"/>
  <testcase name="testDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.978"/>
  <testcase name="testElseIfDifferentVariables()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.168"/>
  <testcase name="testElseIfTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.035"/>
  <testcase name="testElseIfTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.983"/>
  <testcase name="testElseIfTest_variablesParameterAttributesChange()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.487"/>
  <testcase name="testEmptyBlockTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.825"/>
  <testcase name="testExceptionalMethodReturnTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.264"/>
  <testcase name="testExceptionalMethodReturnTestWithLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.701"/>
  <testcase name="testFixedRecursiveMethodCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.083"/>
  <testcase name="testForEachTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.158"/>
  <testcase name="testForFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.828"/>
  <testcase name="testForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.006"/>
  <testcase name="testFunctionalDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.117"/>
  <testcase name="testFunctionalForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.145"/>
  <testcase name="testFunctionalIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.063"/>
  <testcase name="testFunctionalWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.142"/>
  <testcase name="testIdenticalTermsDuringProof()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.063"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.896"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.881"/>
  <testcase name="testInstanceContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.908"/>
  <testcase name="testInstanceContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.887"/>
  <testcase name="testInstanceContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.904"/>
  <testcase name="testInstanceContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.903"/>
  <testcase name="testInstanceContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.889"/>
  <testcase name="testInstanceContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.892"/>
  <testcase name="testInstanceContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.963"/>
  <testcase name="testInstanceContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.843"/>
  <testcase name="testInstanceContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.94"/>
  <testcase name="testInstanceContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.909"/>
  <testcase name="testInstanceOfNotInEndlessLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.174"/>
  <testcase name="testJoinTestAfterAssignment()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.834"/>
  <testcase name="testJoinTestAfterBranchCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.736"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.786"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalAndSubgoals()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.803"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.817"/>
  <testcase name="testLabelTest_doubled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.842"/>
  <testcase name="testLabelTest_lost()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.838"/>
  <testcase name="testLoopBodyBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.819"/>
  <testcase name="testLoopInvariantAndOperationContractStrictlyPure()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.015"/>
  <testcase name="testLoopInvariantMethodReturnInDifferentModalities()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.121"/>
  <testcase name="testLoopIteration_LoopStatementCopied()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.934"/>
  <testcase name="testLoopIteration_LoopStatementReused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.958"/>
  <testcase name="testLoopIteration_LoopWithMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.364"/>
  <testcase name="testLoopStatementBlockTest_nestedLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.591"/>
  <testcase name="testLoopStatementBlockTest_simpleLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.946"/>
  <testcase name="testLoopUsageBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.831"/>
  <testcase name="testMethodCallOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.921"/>
  <testcase name="testMethodCallOnObjectWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.16"/>
  <testcase name="testMethodCallParallelTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.045"/>
  <testcase name="testMethodCallReturnTests()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="13.602"/>
  <testcase name="testMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.741"/>
  <testcase name="testMethodFormatTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.171"/>
  <testcase name="testMethodHierarchyCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.684"/>
  <testcase name="testMethodHierarchyCallWithExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.955"/>
  <testcase name="testNestedDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.985"/>
  <testcase name="testNestedForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.745"/>
  <testcase name="testNestedLoopsWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.165"/>
  <testcase name="testNestedWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.096"/>
  <testcase name="testPrettyPrinting_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.124"/>
  <testcase name="testPrettyPrinting_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.065"/>
  <testcase name="testRecursiveFibonacci_LONG_RUNNING_TEST()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="34.59"/>
  <testcase name="testSimpleConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.635"/>
  <testcase name="testSimpleIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.844"/>
  <testcase name="testSimpleIfNoConditionSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.552"/>
  <testcase name="testSimpleMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.851"/>
  <testcase name="testSimpleNullPointerSplitTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.961"/>
  <testcase name="testSimplePruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.97"/>
  <testcase name="testSimpleStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.86"/>
  <testcase name="testStatementKindTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.765"/>
  <testcase name="testStatements()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.818"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.862"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.789"/>
  <testcase name="testStaticContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.592"/>
  <testcase name="testStaticContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.567"/>
  <testcase name="testStaticContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.57"/>
  <testcase name="testStaticContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.706"/>
  <testcase name="testStaticContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.709"/>
  <testcase name="testStaticContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.853"/>
  <testcase name="testStaticContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.936"/>
  <testcase name="testStaticContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.623"/>
  <testcase name="testStaticContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.769"/>
  <testcase name="testStaticContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.73"/>
  <testcase name="testStaticDefaultContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.878"/>
  <testcase name="testStaticInstanceFieldChanged()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.188"/>
  <testcase name="testStaticMethodCall()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.812"/>
  <testcase name="testSwitchCaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.508"/>
  <testcase name="testSwitchCaseTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.511"/>
  <testcase name="testSymbolicExecutionCompletionsTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.06"/>
  <testcase name="testThrowTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.802"/>
  <testcase name="testThrowVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.801"/>
  <testcase name="testTryCatchFinally()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.038"/>
  <testcase name="testUnicode_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.735"/>
  <testcase name="testUnicode_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.716"/>
  <testcase name="testUseLoopInvariantArrayAverage()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.576"/>
  <testcase name="testUseLoopInvariantArraySizeDoWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.219"/>
  <testcase name="testUseLoopInvariantArraySizeWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.193"/>
  <testcase name="testUseLoopInvariantArraySumFor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.245"/>
  <testcase name="testUseLoopInvariantArraySumForEach()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.423"/>
  <testcase name="testUseLoopInvariantArraySumWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.25"/>
  <testcase name="testUseLoopInvariantArraySumWhileInitiallyInvalid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.316"/>
  <testcase name="testUseLoopInvariantLoopSplittingCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.734"/>
  <testcase name="testUseLoopInvariantTwoLoops()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.393"/>
  <testcase name="testUseLoopInvariantWithoutDecreasing()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.155"/>
  <testcase name="testUseOperationContractAllBranchesOpenTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.306"/>
  <testcase name="testUseOperationContractApplyContractTwice()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.58"/>
  <testcase name="testUseOperationContractExceptionalNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.737"/>
  <testcase name="testUseOperationContractFalsePreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.627"/>
  <testcase name="testUseOperationContractFixedNormalPostTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.82"/>
  <testcase name="testUseOperationContractInvalidPreconditionOnObjectTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.863"/>
  <testcase name="testUseOperationContractInvalidPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.865"/>
  <testcase name="testUseOperationContractLightweightOperationContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.671"/>
  <testcase name="testUseOperationContractNoExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.645"/>
  <testcase name="testUseOperationContractNoPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.802"/>
  <testcase name="testUseOperationContractNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.863"/>
  <testcase name="testUseOperationContractNormalAndExceptionalBranchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.008"/>
  <testcase name="testUseOperationContractNormalAndExceptionalTogetherTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.815"/>
  <testcase name="testUseOperationContractQueryTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.769"/>
  <testcase name="testUseOperationContractStatementsInImpliciteConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.956"/>
  <testcase name="testUseOperationContractVariableNestedOperationContractUse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.609"/>
  <testcase name="testVariablesArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.078"/>
  <testcase name="testVariablesArrayCreationInstanceTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.584"/>
  <testcase name="testVariablesArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.857"/>
  <testcase name="testVariablesArrayTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.233"/>
  <testcase name="testVariablesEmptyArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.487"/>
  <testcase name="testVariablesInstanceVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="20.73"/>
  <testcase name="testVariablesLocalTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.803"/>
  <testcase name="testVariablesNonSimpleArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="21.66"/>
  <testcase name="testVariablesNonSimpleArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.34"/>
  <testcase name="testVariablesStaticTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.484"/>
  <testcase name="testVariablesUnknownTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.905"/>
  <testcase name="testVerifiedTest_loop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.257"/>
  <testcase name="testVerifiedTest_magic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.72"/>
  <testcase name="testVerifiedTest_magicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.649"/>
  <testcase name="testVerifiedTest_notLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.429"/>
  <testcase name="testVerifiedTest_notMagic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.844"/>
  <testcase name="testVerifiedTest_notMagicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.847"/>
  <testcase name="testVerifyMin()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.974"/>
  <testcase name="testVerifyMinTrueBranch()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.51"/>
  <testcase name="testVerifyNumberNormal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.558"/>
  <testcase name="testVoidWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.112"/>
  <testcase name="testWhileFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.543"/>
  <testcase name="testWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.724"/>
  <testcase name="testWhileWithLoopInvariantInCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.53"/>
  <testcase name="testWhileWithMethodCallAsConditionOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.298"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.4"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.808"/>
  <testcase name="testWhileWithMethodCallAsCondition_preExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.296"/>
  <testcase name="testWhileWithMethodCallAsCondition_preMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.87"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
