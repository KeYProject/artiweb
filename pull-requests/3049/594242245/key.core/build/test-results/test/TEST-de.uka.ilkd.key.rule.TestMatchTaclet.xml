<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.rule.TestMatchTaclet" tests="16" skipped="0" failures="0" errors="0" timestamp="2023-03-11T17:31:23" hostname="fv-az210-951" time="1.385">
  <properties/>
  <testcase name="testProgramMatch4()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="1.364"/>
  <testcase name="testWithSubSortsTermSV()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.001"/>
  <testcase name="testWithSubSortsVariableSV()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.0"/>
  <testcase name="testUpdateMatch()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.002"/>
  <testcase name="testBugsThathaveBeenRemoved()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.004"/>
  <testcase name="testCloseWithBoundRenaming()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.001"/>
  <testcase name="testInsequentStateRestriction()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.0"/>
  <testcase name="testPrefixMatching()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.005"/>
  <testcase name="testNoContextMatching()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.001"/>
  <testcase name="testRWVarOccursInAddAndIf()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.001"/>
  <testcase name="testConflict()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.0"/>
  <testcase name="testProgramMatchEmptyBlock()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.001"/>
  <testcase name="testRWVarOccursFindAndIf()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.0"/>
  <testcase name="testXNotFreeInYConflict()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.0"/>
  <testcase name="testVarOccursInIfAndAddRule()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.0"/>
  <testcase name="testVarOccursInFindAndAddRule()" classname="de.uka.ilkd.key.rule.TestMatchTaclet" time="0.002"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
