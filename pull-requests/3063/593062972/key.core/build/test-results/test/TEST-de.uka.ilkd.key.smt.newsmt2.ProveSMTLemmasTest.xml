<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" tests="25" skipped="0" failures="0" errors="0" timestamp="2023-03-10T14:50:03" hostname="fv-az448-189" time="71.804">
  <properties/>
  <testcase name="[1] jmod.dl, &#10;\forall int divNum; \forall int divDenom;&#10;  jmod(divNum,divDenom) =&#10;    divNum + jdiv(divNum,divDenom)*(-1)*divDenom&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.992"/>
  <testcase name="[2] seqSub.dl, &#10;    \forall Seq seq;&#10;    \forall int from;&#10;    \forall int to;&#10;    \forall int idx;&#10;        any::seqGet(seqSub(seq, from, to)&lt;&lt;Trigger&gt;&gt;, idx)&#10;      = \if(0 &lt;= idx &amp; idx &lt; (to - from))&#10;        \then(any::seqGet(seq, idx + from))&#10;        \else(seqGetOutside)&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.901"/>
  <testcase name="[3] seqGetOutside.dl, &#10;    \forall int i; \forall Seq s; ( i &lt; 0 | i &gt;= seqLen(s) -&gt; any::seqGet(s, i)&lt;&lt;Trigger&gt;&gt; = seqGetOutside )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.927"/>
  <testcase name="[4] singleton.dl, &#10;  \forall Object o; \forall Field f; \forall Object o2; \forall Field f2;&#10;    ( elementOf(o,f, singleton(o2,f2))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;&#10;      o = o2 &amp; f = f2 )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.874"/>
  <testcase name="[5] create.dl, &#10;  \forall Heap h; \forall Object o; \forall Object o2; \forall Field f;&#10;      any::select(create(h, o), o2, f)&lt;&lt;Trigger&gt;&gt; =&#10;         \if(o = o2 &amp; o != null &amp; f = java.lang.Object::&lt;created&gt;)&#10;         \then(TRUE)&#10;         \else(any::select(h, o2, f))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.861"/>
  <testcase name="[6] allFields.dl, &#10;  \forall Object o; \forall Field f; \forall Object o2;&#10;    ( elementOf(o,f, allFields(o2))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;&#10;       o = o2 )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.867"/>
  <testcase name="[7] seqEmpty.dl, &#10;    seqLen(seqEmpty) = 0&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.844"/>
  <testcase name="[8] union.dl, &#10;  \forall Object o; \forall Field f; \forall LocSet l1; \forall LocSet l2;&#10;     ( elementOf(o, f, union(l1, l2))&lt;&lt;Trigger&gt;&gt; &lt;-&gt; elementOf(o,f,l1) | elementOf(o,f,l2) )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.882"/>
  <testcase name="[9] seqConcat.dl.2, &#10;    \forall Seq s1; \forall Seq s2; seqLen(seqConcat(s1,s2)&lt;&lt;Trigger&gt;&gt;) = seqLen(s1) + seqLen(s2)&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.862"/>
  <testcase name="[10] wellFormed.dl, &#10;  \forall Heap h; \forall Object o; \forall Field f; (wellFormed(h) -&gt;&#10;      boolean::select(h, (java.lang.Object::select(h, o, f))&lt;&lt;Trigger&gt;&gt;, java.lang.Object::&lt;created&gt;) = TRUE&#10;    | (java.lang.Object::select(h, o, f)) = null)&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.859"/>
  <testcase name="[11] jdiv.dl, &#10;\forall int divNum; \forall int divDenom;&#10;  jdiv(divNum,divDenom) =&#10;         \if (divNum &gt;= 0)&#10;         \then (div(divNum,divDenom))&#10;         \else (div(divNum*(-1),divDenom)*(-1))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.877"/>
  <testcase name="[12] empty.dl, &#10;  \forall Object o; \forall Field f; ( elementOf(o,f,empty)&lt;&lt;Trigger&gt;&gt; &lt;-&gt; false )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.872"/>
  <testcase name="[13] allLocs.dl, &#10;  \forall Object o; \forall Field f; ( elementOf(o,f,allLocs)&lt;&lt;Trigger&gt;&gt; &lt;-&gt; true )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.839"/>
  <testcase name="[14] arrayRange.dl, &#10;  \forall Object o; \forall Object o2; \forall Field f; \forall int lo; \forall int hi;&#10;    (elementOf(o,f, arrayRange(o2, lo, hi))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;&#10;      o = o2 &amp; \exists int iv; (f = arr(iv) &amp; lo &lt;= iv &amp; iv &lt;= hi))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.87"/>
  <testcase name="[15] seqConcat.dl, &#10;    \forall int i; \forall Seq s1; \forall Seq s2; ( 0 &lt;= i &amp; i &lt; seqLen(s1) + seqLen(s2) -&gt;&#10;        any::seqGet(seqConcat(s1, s2), i) =&#10;            \if (i &lt; seqLen(s1)) \then (any::seqGet(s1, i)) \else (any::seqGet(s2, i-seqLen(s1))))&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.857"/>
  <testcase name="[16] seqLen.dl, &#10;    \forall Seq s; seqLen(s)&lt;&lt;Trigger&gt;&gt; &gt;= 0&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.895"/>
  <testcase name="[17] length.dl, &#10;    \forall Object o; length(o) &gt;= 0&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.851"/>
  <testcase name="[18] freshLocs.dl, &#10;  \forall Heap h; \forall Object o; \forall Field f;&#10;     ( elementOf(o,f,freshLocs(h))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;&#10;        o != null &amp; !boolean::select(h,o,java.lang.Object::&lt;created&gt;)=TRUE )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.852"/>
  <testcase name="[19] anon.dl, &#10;    \forall Heap h; \forall Object o; \forall Field f; \forall Heap h2; \forall LocSet ls;&#10;      any::select(anon(h, ls, h2), o, f)&lt;&lt;Trigger&gt;&gt; =&#10;         \if(elementOf(o, f, ls) &amp; f != java.lang.Object::&lt;created&gt;&#10;           | elementOf(o, f, freshLocs(h)))&#10;         \then(any::select(h2, o, f))&#10;         \else(any::select(h, o, f))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.857"/>
  <testcase name="[20] memset.dl, &#10;    \forall Heap h; \forall LocSet s; \forall any x; \forall Object o; \forall Field f;&#10;      any::select(memset(h, s, x), o, f)&lt;&lt;Trigger&gt;&gt; =&#10;         \if(elementOf(o, f, s) &amp; f != java.lang.Object::&lt;created&gt;)&#10;         \then(x)&#10;         \else(any::select(h, o, f))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.866"/>
  <testcase name="[21] store.dl, &#10;    \forall Heap h; \forall Object o; \forall Field f; \forall Object o2; \forall Field f2; \forall any v;&#10;      any::select(store(h,o,f,v), o2, f2)&lt;&lt;Trigger&gt;&gt; =&#10;         \if(o = o2 &amp; f = f2 &amp; f != java.lang.Object::&lt;created&gt;)&#10;         \then(v)&#10;         \else(any::select(h, o2, f2))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.852"/>
  <testcase name="[22] seqSub.dl.2, &#10;    \forall Seq seq;&#10;    \forall int from;&#10;    \forall int to;&#10;        seqLen(seqSub(seq, from, to)&lt;&lt;Trigger&gt;&gt;)&#10;      = \if(from &lt; to)\then(to - from)\else(0)&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.86"/>
  <testcase name="[23] seqSingleton.dl, &#10;    \forall any x; any::seqGet(seqSingleton(x)&lt;&lt;Trigger&gt;&gt;, 0) = x&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.859"/>
  <testcase name="[24] seqSingleton.dl.2, &#10;    \forall any x; seqLen(seqSingleton(x)&lt;&lt;Trigger&gt;&gt;) = 1&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.852"/>
  <testcase name="[25] null.dl, &#10;     \forall any x; ((Null::instance(x))&lt;&lt;Trigger&gt;&gt; = TRUE -&gt; x = null) &#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="2.868"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
