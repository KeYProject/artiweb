<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" tests="20" skipped="2" failures="0" errors="0" timestamp="2023-02-01T20:21:00" hostname="fv-az359-62" time="0.048">
  <properties/>
  <testcase name="testSimpleSpec()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.0"/>
  <testcase name="testFailure()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.002"/>
  <testcase name="testEnabledKeysLexer()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.0"/>
  <testcase name="testLexer10()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.001"/>
  <testcase name="testComplexSpec()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.013"/>
  <testcase name="testMultipleSpecs()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.005"/>
  <testcase name="testFailure2()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.002"/>
  <testcase name="testAtInModelmethod()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.002"/>
  <testcase name="testLexer1()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.003"/>
  <testcase name="testLexer2()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.002"/>
  <testcase name="testLexer3()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.0"/>
  <testcase name="testLexer4()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.001"/>
  <testcase name="testLexer5()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.001"/>
  <testcase name="testLexer6()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.002"/>
  <testcase name="testLexer7()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.001"/>
  <testcase name="testLexer8()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.001"/>
  <testcase name="testLexer9()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.0"/>
  <testcase name="testMarkerDecision()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.0"/>
  <testcase name="disabled_testMLCommentEndInSLComment1()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.0">
    <skipped/>
  </testcase>
  <testcase name="disabled_testMLCommentEndInSLComment2()" classname="de.uka.ilkd.key.speclang.jml.TestJMLPreTranslator" time="0.0">
    <skipped/>
  </testcase>
  <system-out><![CDATA[721849     WARN  Test worker     d.u.i.k.s.n.JmlParser     [syntax-error] <unknown>:2:11: missing LPAREN at 'ohoh' [@6,33:36='ohoh',<266>,2:11] (signals_clause, clause, spec_body, spec_case, method_specification, classlevel_element, classlevel_comment, classlevel_comments) 
721850     WARN  Test worker     d.u.i.k.s.n.JmlParser     [syntax-error] <unknown>:2:15: mismatched input ';' expecting {RPAREN, IDENT} [@7,37:37=';',<257>,2:15] (signals_clause, clause, spec_body, spec_case, method_specification, classlevel_element, classlevel_comment, classlevel_comments) 
[@-1,0:28='/*-key@ invariant x == 54; */',<2>,channel=1,1:0]
[@-1,29:28='<EOF>',<-1>,1:29]
[@-1,0:13='//-@ behaviour',<100>,channel=1,1:0]
[@-1,14:13='<EOF>',<-1>,1:14]
[@-1,0:17='//+key+@ behaviour',<100>,channel=1,1:0]
[@-1,18:17='<EOF>',<-1>,1:18]
TextualJMLSpecCase{behavior=behavior , clauses=[de.uka.ilkd.key.speclang.jml.pretranslation.TextualJMLSpecCase$Entry@39518107, de.uka.ilkd.key.speclang.jml.pretranslation.TextualJMLSpecCase$Entry@1cec39cc, de.uka.ilkd.key.speclang.jml.pretranslation.TextualJMLSpecCase$Entry@28190259, de.uka.ilkd.key.speclang.jml.pretranslation.TextualJMLSpecCase$Entry@37c3d783, de.uka.ilkd.key.speclang.jml.pretranslation.TextualJMLSpecCase$Entry@22f31c5, de.uka.ilkd.key.speclang.jml.pretranslation.TextualJMLSpecCase$Entry@7ff05a15], mods=[], name='null'}
721872     WARN  Test worker     d.u.i.k.s.n.JmlParser     [syntax-error] <unknown>:2:15: no viable alternative at input '(;' [@7,29:29=';',<258>,2:15] (relationalexpr, equalityexpr, andexpr, exclusiveorexpr, inclusiveorexpr, logicalandexpr, logicalorexpr, impliesexpr, equivalenceexpr, conditionalexpr, expression, predicate, predornot, requires_clause, clause, spec_body, spec_case, method_specification, classlevel_element, classlevel_comment, classlevel_comments) 
[@-1,0:2='/*@',<102>,channel=1,1:0]
[@-1,3:3=' ',<97>,channel=1,1:3]
[@-1,4:18='normal_behavior',<17>,1:4]
[@-1,19:24='\n     ',<97>,channel=1,1:19]
[@-1,25:32='requires',<85>,2:5]
[@-1,33:33=' ',<97>,channel=1,2:13]
[@-1,34:37='true',<115>,2:14]
[@-1,38:38=';',<257>,2:18]
[@-1,39:41='\n  ',<97>,channel=1,2:19]
[@-1,42:43='*/',<96>,channel=1,3:2]
[@-1,44:43='<EOF>',<-1>,3:4]
[@-1,0:6='ensures',<62>,1:0]
[@-1,7:7=' ',<97>,channel=1,1:7]
[@-1,8:37='//-key@ this should be ignored',<2>,channel=1,1:8]
[@-1,38:38='\n',<97>,channel=1,1:38]
[@-1,39:42='true',<115>,2:0]
[@-1,43:43=';',<257>,2:4]
[@-1,44:43='<EOF>',<-1>,2:5]
[@-1,0:6='ensures',<62>,1:0]
[@-1,7:12='      ',<97>,channel=1,1:7]
[@-1,13:45='/*-key@ this should be ignored */',<2>,channel=1,1:13]
[@-1,46:46=' ',<97>,channel=1,1:46]
[@-1,47:50='true',<115>,1:47]
[@-1,51:51=';',<257>,1:51]
[@-1,52:51='<EOF>',<-1>,1:52]
[@-1,0:10='/*-openjml@',<102>,channel=1,1:0]
[@-1,11:11=' ',<97>,channel=1,1:11]
[@-1,12:18='ensures',<62>,1:12]
[@-1,19:19=' ',<97>,channel=1,1:19]
[@-1,20:23='true',<115>,1:20]
[@-1,24:24=';',<257>,1:24]
[@-1,25:25=' ',<97>,channel=1,1:25]
[@-1,26:27='*/',<96>,channel=1,1:26]
[@-1,28:27='<EOF>',<-1>,1:28]
[@-1,0:2='/*@',<102>,channel=1,1:0]
[@-1,3:3=' ',<97>,channel=1,1:3]
[@-1,4:7='pure',<43>,1:4]
[@-1,8:8=' ',<97>,channel=1,1:8]
[@-1,9:10='*/',<96>,channel=1,1:9]
[@-1,11:11=' ',<97>,channel=1,1:11]
[@-1,12:14='/*@',<102>,channel=1,1:12]
[@-1,15:15=' ',<97>,channel=1,1:15]
[@-1,16:22='ensures',<62>,1:16]
[@-1,23:23=' ',<97>,channel=1,1:23]
[@-1,24:27='true',<115>,1:24]
[@-1,28:28=';',<257>,1:28]
[@-1,29:28='<EOF>',<-1>,1:29]
[@-1,0:2='//@',<101>,channel=1,1:0]
[@-1,3:3=' ',<97>,channel=1,1:3]
[@-1,4:19='normal_behaviour',<17>,1:4]
[@-1,20:20='\n',<97>,channel=1,1:20]
[@-1,21:23='//@',<101>,channel=1,2:0]
[@-1,24:25='  ',<97>,channel=1,2:3]
[@-1,26:32='ensures',<62>,2:5]
[@-1,33:33=' ',<97>,channel=1,2:12]
[@-1,34:38='false',<106>,2:13]
[@-1,39:39='\n',<97>,channel=1,2:18]
[@-1,40:42='//@',<101>,channel=1,3:0]
[@-1,43:52='          ',<97>,channel=1,3:3]
[@-1,53:54='||',<236>,3:13]
[@-1,55:55=' ',<97>,channel=1,3:15]
[@-1,56:59='true',<115>,3:16]
[@-1,60:60=';',<257>,3:20]
[@-1,61:61='\n',<97>,channel=1,3:21]
[@-1,62:64='//@',<101>,channel=1,4:0]
[@-1,65:66='  ',<97>,channel=1,4:3]
[@-1,67:76='assignable',<50>,4:5]
[@-1,77:77=' ',<97>,channel=1,4:15]
[@-1,78:85='\nothing',<175>,4:16]
[@-1,86:86=';',<257>,4:24]
[@-1,87:87='\n',<97>,channel=1,4:25]
[@-1,88:90='//@',<101>,channel=1,5:0]
[@-1,91:91=' ',<97>,channel=1,5:3]
[@-1,92:95='also',<10>,5:4]
[@-1,96:96=' ',<97>,channel=1,5:8]
[@-1,97:117='exceptional_behaviour',<7>,5:9]
[@-1,118:118='\n',<97>,channel=1,5:30]
[@-1,119:121='//@',<101>,channel=1,6:0]
[@-1,122:123='  ',<97>,channel=1,6:3]
[@-1,124:131='requires',<85>,6:5]
[@-1,132:132=' ',<97>,channel=1,6:13]
[@-1,133:133='o',<266>,6:14]
[@-1,134:134=' ',<97>,channel=1,6:15]
[@-1,135:136='==',<226>,6:16]
[@-1,137:137=' ',<97>,channel=1,6:18]
[@-1,138:141='null',<111>,6:19]
[@-1,142:142=';',<257>,6:23]
[@-1,143:143='\n',<97>,channel=1,6:24]
[@-1,144:146='//@',<101>,channel=1,7:0]
[@-1,147:148='  ',<97>,channel=1,7:3]
[@-1,149:155='signals',<91>,7:5]
[@-1,156:156=' ',<97>,channel=1,7:12]
[@-1,157:165='Exception',<266>,7:13]
[@-1,166:166=';',<257>,7:22]
[@-1,167:167='\n',<97>,channel=1,7:23]
[@-1,168:167='<EOF>',<-1>,8:0]
[@-1,0:30='//+ESC@ special comment for ESC',<100>,channel=1,1:0]
[@-1,31:30='<EOF>',<-1>,1:31]
[@-1,0:10='//+ESC+key@',<101>,channel=1,1:0]
[@-1,11:11=' ',<97>,channel=1,1:11]
[@-1,12:20='behaviour',<6>,1:12]
[@-1,21:20='<EOF>',<-1>,1:21]
[@-1,0:24='//+ESC+key-key@ behaviour',<100>,channel=1,1:0]
[@-1,25:24='<EOF>',<-1>,1:25]
]]></system-out>
  <system-err><![CDATA[line 2:11 missing LPAREN at 'ohoh'
line 2:15 mismatched input ';' expecting {RPAREN, IDENT}
line 2:15 no viable alternative at input '(;'
]]></system-err>
</testsuite>
