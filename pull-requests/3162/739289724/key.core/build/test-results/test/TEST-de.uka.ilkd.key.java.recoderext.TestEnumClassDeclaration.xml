<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.java.recoderext.TestEnumClassDeclaration" tests="3" skipped="0" failures="0" errors="0" timestamp="2023-06-08T14:59:36" hostname="fv-az319-839" time="0.041">
  <properties/>
  <testcase name="testTwo()" classname="de.uka.ilkd.key.java.recoderext.TestEnumClassDeclaration" time="0.017"/>
  <testcase name="test2Constr()" classname="de.uka.ilkd.key.java.recoderext.TestEnumClassDeclaration" time="0.013"/>
  <testcase name="testSimple()" classname="de.uka.ilkd.key.java.recoderext.TestEnumClassDeclaration" time="0.009"/>
  <system-out><![CDATA[60524      DEBUG Test worker     d.u.i.k.j.r.TestEnumClassDeclaration class B extends java.lang.Enum implements C {

    public static final B b1 =  new B(13);

    public static final B b2 =  new B(42);

    B(int i) {}

    void m() {}

    int j;

    private static final String[] <enumConstantNames> =  null;
                                                         public static B valueOf(String
                                     string) { for (B
                                                e: values()) { if (e.name().equals(string)) return e; } throw new IllegalArgumentException();
    }
                                                                     public static B[] values() { return new B[] { b1, b2 }; }
                                                                                                                                              public java.lang
                       .String name() { return <enumConstantNames>[ordinal()]; }
} 
60542      DEBUG Test worker     d.u.i.k.j.r.TestEnumClassDeclaration class C extends java.lang.Enum {

    public static final C c1 =  new C();

    public static final C c2 =  new C(23);

    C(int i) { this(); }

    C() {
        j
                                                   = 0; }

    int j;

    private static final String[] <enumConstantNames> =  null;
                                                         public static C valueOf(String
                                     string) { for (C
                                                e: values()) { if (e.name().equals(string)) return e; } throw new IllegalArgumentException();
    }
                                                                 public static C[] values() { return new C[] { c1, c2 }; }
                                                                                                                                              public java.lang
                       .String name() { return <enumConstantNames>[ordinal()]; }
} 
60555      DEBUG Test worker     d.u.i.k.j.r.TestEnumClassDeclaration class A extends java.lang.Enum {

    public static final A a1 =  new A();

    public static final A a2 =  new A();

    public static final A a3 =  new A();

    private static final String[] <enumConstantNames> =  null;
                                                             public static A valueOf(String
                                     string) { for (A
                                                e: values()) { if (e.name().equals(string)) return e; } throw new IllegalArgumentException();
    }
                     public static A[] values() { return new A[] { a1, a2, a3 }; }
                                                                                                                                              public java.lang
                       .String name() { return <enumConstantNames>[ordinal()]; }
} 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
