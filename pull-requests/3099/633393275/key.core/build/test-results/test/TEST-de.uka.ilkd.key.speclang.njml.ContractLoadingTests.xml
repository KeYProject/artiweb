<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.speclang.njml.ContractLoadingTests" tests="4" skipped="0" failures="0" errors="0" timestamp="2023-04-05T11:50:01" hostname="fv-az570-116" time="14.598">
  <properties/>
  <testcase name="specMathBigintMathTest()" classname="de.uka.ilkd.key.speclang.njml.ContractLoadingTests" time="4.6"/>
  <testcase name="sumAndMax()" classname="de.uka.ilkd.key.speclang.njml.ContractLoadingTests" time="3.234"/>
  <testcase name="issues1658()" classname="de.uka.ilkd.key.speclang.njml.ContractLoadingTests" time="3.224"/>
  <testcase name="specMathJavaMathTest()" classname="de.uka.ilkd.key.speclang.njml.ContractLoadingTests" time="3.54"/>
  <system-out><![CDATA[858662     INFO  Test worker     d.u.i.k.s.n.ContractLoadingTests self.sumAndMax(a) catch(exc)
pre: (  \forall int i;
     (   (0 <= i & i < a.length)<<SC>> & inInt(i)
      -> 0 <= a[i])
 & ((self.<inv><<impl>> & (!a = null)<<impl>>)<<SC>>))<<SC>>
post:   (\forall int i;
     (   (0 <= i & i < a.length)<<SC>> & inInt(i)
      -> a[i] <= self.max)
& ((  (   a.length >  0
       -> \exists int i;
            ((  (0 <= i
              & i < a.length)<<SC>>
              & inInt(i)
              & self.max = a[i])<<SC>>))
    & ((  self.sum = bsum{int i;}(0, a.length, a[i])
        & ((  self.sum <= a.length * self.max
            & self.<inv><<impl>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>
& (exc = null)<<impl>>
mod:      {(self, SumAndMax::$sum)}
\cup {(self, SumAndMax::$max)}
termination: diamond 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
