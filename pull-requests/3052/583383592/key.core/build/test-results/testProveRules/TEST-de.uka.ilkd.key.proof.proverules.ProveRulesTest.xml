<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.proof.proverules.ProveRulesTest" tests="196" skipped="0" failures="0" errors="0" timestamp="2023-03-04T11:33:28" hostname="fv-az257-511" time="895.59">
  <properties/>
  <testcase name="eqTermCut" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.173"/>
  <testcase name="equivAllRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.911"/>
  <testcase name="irrflConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.798"/>
  <testcase name="irrflConcrete2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.718"/>
  <testcase name="cancel_gtPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.709"/>
  <testcase name="cancel_gtNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.561"/>
  <testcase name="moduloIntIsInInt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.495"/>
  <testcase name="moduloLongIsInLong" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.499"/>
  <testcase name="moduloShortIsInShort" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.504"/>
  <testcase name="moduloByteIsInByte" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.436"/>
  <testcase name="moduloCharIsInChar" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.467"/>
  <testcase name="div_unique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.548"/>
  <testcase name="div_unique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.528"/>
  <testcase name="div_exists" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.746"/>
  <testcase name="div_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.424"/>
  <testcase name="jdiv_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.473"/>
  <testcase name="div_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.487"/>
  <testcase name="divResZero1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.475"/>
  <testcase name="divResZero2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.534"/>
  <testcase name="divResOne1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.505"/>
  <testcase name="divResOne2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.475"/>
  <testcase name="div_cancel1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.465"/>
  <testcase name="div_cancel2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.403"/>
  <testcase name="divAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.511"/>
  <testcase name="divMinus" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.494"/>
  <testcase name="divMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.473"/>
  <testcase name="divLeastDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.409"/>
  <testcase name="divLeastDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.421"/>
  <testcase name="divGreatestDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.411"/>
  <testcase name="divGreatestDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.438"/>
  <testcase name="divIncreasingPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.389"/>
  <testcase name="divIncreasingNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.522"/>
  <testcase name="jdiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.453"/>
  <testcase name="jdivPulloutMinusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.415"/>
  <testcase name="jdivPulloutMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.465"/>
  <testcase name="jdiv_uniquePosPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.406"/>
  <testcase name="jdiv_uniquePosNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.432"/>
  <testcase name="jdiv_uniqueNegPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.43"/>
  <testcase name="jdiv_uniqueNegNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.439"/>
  <testcase name="jdivMultDenom1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.441"/>
  <testcase name="jdivMultDenom2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.395"/>
  <testcase name="mod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.339"/>
  <testcase name="mod_lessDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.448"/>
  <testcase name="jmod_NumPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.373"/>
  <testcase name="jmod_NumNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.399"/>
  <testcase name="jmod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.32"/>
  <testcase name="jmodNumZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.37"/>
  <testcase name="jmod_pulloutminusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.365"/>
  <testcase name="jmod_pulloutminusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.37"/>
  <testcase name="jmodUnique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.597"/>
  <testcase name="jmodUnique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.697"/>
  <testcase name="intDivRem" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.366"/>
  <testcase name="jmodjmod" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.527"/>
  <testcase name="jmodDivisible" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.418"/>
  <testcase name="jmodDivisibleRep" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.389"/>
  <testcase name="jdivAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.735"/>
  <testcase name="jmodAltZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.465"/>
  <testcase name="jmodAddMultDenomZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.404"/>
  <testcase name="polyDiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.428"/>
  <testcase name="polyMod_ltdivDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.421"/>
  <testcase name="bsum_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.303"/>
  <testcase name="bsum_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.388"/>
  <testcase name="bsum_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.479"/>
  <testcase name="bsum_num_of_bounds" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.406"/>
  <testcase name="bsum_num_of_bounds2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.446"/>
  <testcase name="bsum_induction_upper2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.319"/>
  <testcase name="bsum_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.388"/>
  <testcase name="bsum_induction_upper_concrete_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.405"/>
  <testcase name="bsum_induction_upper2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.371"/>
  <testcase name="bsum_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.336"/>
  <testcase name="bsum_induction_lower2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.338"/>
  <testcase name="bsum_induction_lower2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.342"/>
  <testcase name="bsum_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.456"/>
  <testcase name="bsum_upper_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.453"/>
  <testcase name="bsum_lower_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.483"/>
  <testcase name="bsum_positive_lower_bound_element" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.424"/>
  <testcase name="bsum_sub_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.45"/>
  <testcase name="bsum_less_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.433"/>
  <testcase name="bsum_equal_except_one_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.367"/>
  <testcase name="bsum_num_of_is_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.46"/>
  <testcase name="bsum_num_of_is_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.442"/>
  <testcase name="bsum_num_of_is_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.398"/>
  <testcase name="bsum_num_of_is_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.412"/>
  <testcase name="bsum_num_of_lt_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.419"/>
  <testcase name="bsum_num_of_lt_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.442"/>
  <testcase name="bsum_num_of_lt_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.372"/>
  <testcase name="bsum_num_of_lt_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.429"/>
  <testcase name="bsum_num_of_gt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.392"/>
  <testcase name="bsum_num_of_gt0_alt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.405"/>
  <testcase name="bsum_add_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.39"/>
  <testcase name="bprod_all_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.415"/>
  <testcase name="bprod_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.449"/>
  <testcase name="powConcrete0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.367"/>
  <testcase name="powConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.341"/>
  <testcase name="powSplitFactor" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.319"/>
  <testcase name="powAdd" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.392"/>
  <testcase name="powMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.36"/>
  <testcase name="powMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.341"/>
  <testcase name="powMonoConcreteRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.322"/>
  <testcase name="powPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.363"/>
  <testcase name="powPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.393"/>
  <testcase name="powGeq1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.331"/>
  <testcase name="pow2InIntLower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.389"/>
  <testcase name="pow2InIntUpper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.385"/>
  <testcase name="logSelfConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.46"/>
  <testcase name="log1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.434"/>
  <testcase name="logProduct" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.439"/>
  <testcase name="logTimesBaseConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.422"/>
  <testcase name="logProdIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.416"/>
  <testcase name="logProdIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.3"/>
  <testcase name="logPowIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.422"/>
  <testcase name="logPowIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.405"/>
  <testcase name="logPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.369"/>
  <testcase name="logPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.268"/>
  <testcase name="logMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.468"/>
  <testcase name="logMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.333"/>
  <testcase name="powLogLess" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.363"/>
  <testcase name="powLogMore2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.399"/>
  <testcase name="logLessThanPow" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.455"/>
  <testcase name="logLessThanPowConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.329"/>
  <testcase name="logSqueeze" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.262"/>
  <testcase name="ifthenelse_equals" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.319"/>
  <testcase name="ifthenelse_equals_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.314"/>
  <testcase name="ifthenelse_equals_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.315"/>
  <testcase name="disjointWithSingleton1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.395"/>
  <testcase name="disjointWithSingleton2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.362"/>
  <testcase name="disjointArrayRanges" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.427"/>
  <testcase name="disjointArrayRangeAllFields1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.489"/>
  <testcase name="disjointArrayRangeAllFields2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.321"/>
  <testcase name="seqSelfDefinition" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.357"/>
  <testcase name="seqOutsideValue" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.387"/>
  <testcase name="castedGetAny" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.389"/>
  <testcase name="seqGetAlphaCast" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.466"/>
  <testcase name="getOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.463"/>
  <testcase name="getOfSeqSingletonConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.54"/>
  <testcase name="getOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.448"/>
  <testcase name="getOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.455"/>
  <testcase name="getOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.443"/>
  <testcase name="lenOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.472"/>
  <testcase name="lenOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.402"/>
  <testcase name="lenOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.421"/>
  <testcase name="lenOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.416"/>
  <testcase name="lenOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.405"/>
  <testcase name="equalityToSeqGetAndSeqLenLeft" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.373"/>
  <testcase name="equalityToSeqGetAndSeqLenRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.364"/>
  <testcase name="getOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.405"/>
  <testcase name="getOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.411"/>
  <testcase name="getOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.353"/>
  <testcase name="getOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.356"/>
  <testcase name="lenOfSeqEmptyEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.357"/>
  <testcase name="lenOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.41"/>
  <testcase name="lenOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.419"/>
  <testcase name="lenOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.397"/>
  <testcase name="lenOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.373"/>
  <testcase name="getOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.375"/>
  <testcase name="lenOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.366"/>
  <testcase name="seqConcatWithSeqEmpty1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.408"/>
  <testcase name="seqConcatWithSeqEmpty2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.428"/>
  <testcase name="seqReverseOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.465"/>
  <testcase name="subSeqComplete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.442"/>
  <testcase name="subSeqTailR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.451"/>
  <testcase name="subSeqTailL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.425"/>
  <testcase name="subSeqTailEQR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.419"/>
  <testcase name="subSeqTailEQL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.363"/>
  <testcase name="seqDef_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.449"/>
  <testcase name="seqDef_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.456"/>
  <testcase name="seqDef_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.473"/>
  <testcase name="seqDef_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.458"/>
  <testcase name="seqDef_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.467"/>
  <testcase name="seqDef_split_in_three" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.744"/>
  <testcase name="seqDef_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.42"/>
  <testcase name="seqDef_one_summand" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.342"/>
  <testcase name="seqDef_lower_equals_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.405"/>
  <testcase name="seqDefOfSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.491"/>
  <testcase name="seqSelfDefinitionEQ2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.469"/>
  <testcase name="indexOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.486"/>
  <testcase name="indexOfSeqConcatFirst" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.454"/>
  <testcase name="indexOfSeqConcatSecond" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.537"/>
  <testcase name="indexOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.514"/>
  <testcase name="lenOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.488"/>
  <testcase name="getAnyOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.49"/>
  <testcase name="getOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.391"/>
  <testcase name="getAnyOfNPermInv" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.543"/>
  <testcase name="seqNPermRange" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.596"/>
  <testcase name="seqPermTrans" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.812"/>
  <testcase name="seqPermRefl" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.151"/>
  <testcase name="seqPermSplit" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.022"/>
  <testcase name="seqNPermRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.006"/>
  <testcase name="seqPermFromSwap" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.725"/>
  <testcase name="seqPermTransAlt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.414"/>
  <testcase name="seqPermTransAlt1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.466"/>
  <testcase name="seqPermTransAlt2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.38"/>
  <testcase name="seqPermTransAlt3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.449"/>
  <testcase name="schiffl_lemma_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="26.545"/>
  <testcase name="schiffl_thm_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.485"/>
  <testcase name="eqSameSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.453"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/runner/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.2.10/f69d97ef3335c6ab82fc21dfb77ac613f90c1221/logback-classic-1.2.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
]]></system-err>
</testsuite>
