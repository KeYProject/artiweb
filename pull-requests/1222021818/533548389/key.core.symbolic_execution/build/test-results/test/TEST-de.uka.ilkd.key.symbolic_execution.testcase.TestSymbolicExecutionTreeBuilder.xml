<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" tests="186" skipped="1" failures="0" errors="0" timestamp="2023-01-30T17:47:28" hostname="fv-az550-153" time="741.713">
  <properties/>
  <testcase name="testAllNodeTypesTest_JavaProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.998"/>
  <testcase name="testAllNodeTypesTest_JavaProfile_NoOneStepSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="11.741"/>
  <testcase name="testAllNodeTypesTest_SymbolicExecutionProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.042"/>
  <testcase name="testAnotherInstanceContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.13"/>
  <testcase name="testAnotherStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.959"/>
  <testcase name="testArraySumWhileWithBreak()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.49"/>
  <testcase name="testArraySumWhileWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.947"/>
  <testcase name="testArraySumWhileWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.716"/>
  <testcase name="testArraySumWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.494"/>
  <testcase name="testAssumesUserInputTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.106"/>
  <testcase name="testBlockContractAssignableEverything()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.881"/>
  <testcase name="testBlockContractAssignableLocationNotRequested()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.776"/>
  <testcase name="testBlockContractAssignableRequestedLocation()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.811"/>
  <testcase name="testBlockContractParamRemaned()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.863"/>
  <testcase name="testBlockContractPreconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.817"/>
  <testcase name="testBlockContractThisTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.849"/>
  <testcase name="testBlockContractVarRenamedLater()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.785"/>
  <testcase name="testBlockContractWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.136"/>
  <testcase name="testBlockContractWithExceptionPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.144"/>
  <testcase name="testBlockContractWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.787"/>
  <testcase name="testBlockContractWithReturnPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.82"/>
  <testcase name="testBranchPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.991"/>
  <testcase name="testBranchStatementBlockTest_ifNoBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.938"/>
  <testcase name="testBranchStatementBlockTest_min()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.973"/>
  <testcase name="testBranchStatementBlockTest_nestedIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.165"/>
  <testcase name="testBranchStatementBlockTest_onlyElse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.804"/>
  <testcase name="testBranchStatementBlockTest_onlyEmptyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.789"/>
  <testcase name="testBranchStatementBlockTest_onlyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.803"/>
  <testcase name="testBranchStatementBlockTest_recursive()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.034"/>
  <testcase name="testBranchStatementBlockTest_simpleBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.772"/>
  <testcase name="testBranchStatementBlockTest_switchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.576"/>
  <testcase name="testComplexConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="0.0">
    <skipped/>
  </testcase>
  <testcase name="testComplexFlatSteps()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.787"/>
  <testcase name="testComplexIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.007"/>
  <testcase name="testComplexPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.968"/>
  <testcase name="testConstraintsAfterUsedLoopInvariant()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.408"/>
  <testcase name="testConstraintsOfAppliedMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.138"/>
  <testcase name="testDoWhileFlaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.783"/>
  <testcase name="testDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.929"/>
  <testcase name="testElseIfDifferentVariables()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.119"/>
  <testcase name="testElseIfTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.901"/>
  <testcase name="testElseIfTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.916"/>
  <testcase name="testElseIfTest_variablesParameterAttributesChange()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.354"/>
  <testcase name="testEmptyBlockTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.813"/>
  <testcase name="testExceptionalMethodReturnTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.21"/>
  <testcase name="testExceptionalMethodReturnTestWithLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.644"/>
  <testcase name="testFixedRecursiveMethodCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.043"/>
  <testcase name="testForEachTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.1"/>
  <testcase name="testForFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.772"/>
  <testcase name="testForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.954"/>
  <testcase name="testFunctionalDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.069"/>
  <testcase name="testFunctionalForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.066"/>
  <testcase name="testFunctionalIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.028"/>
  <testcase name="testFunctionalWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.119"/>
  <testcase name="testIdenticalTermsDuringProof()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.174"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.844"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.851"/>
  <testcase name="testInstanceContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.87"/>
  <testcase name="testInstanceContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.882"/>
  <testcase name="testInstanceContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.841"/>
  <testcase name="testInstanceContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.838"/>
  <testcase name="testInstanceContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.849"/>
  <testcase name="testInstanceContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.86"/>
  <testcase name="testInstanceContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.914"/>
  <testcase name="testInstanceContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.995"/>
  <testcase name="testInstanceContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.895"/>
  <testcase name="testInstanceContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.879"/>
  <testcase name="testInstanceOfNotInEndlessLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.181"/>
  <testcase name="testJoinTestAfterAssignment()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.777"/>
  <testcase name="testJoinTestAfterBranchCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.795"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.916"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalAndSubgoals()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.861"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.843"/>
  <testcase name="testLabelTest_doubled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.847"/>
  <testcase name="testLabelTest_lost()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.815"/>
  <testcase name="testLoopBodyBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.805"/>
  <testcase name="testLoopInvariantAndOperationContractStrictlyPure()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.024"/>
  <testcase name="testLoopInvariantMethodReturnInDifferentModalities()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.016"/>
  <testcase name="testLoopIteration_LoopStatementCopied()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.853"/>
  <testcase name="testLoopIteration_LoopStatementReused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.864"/>
  <testcase name="testLoopIteration_LoopWithMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.319"/>
  <testcase name="testLoopStatementBlockTest_nestedLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.891"/>
  <testcase name="testLoopStatementBlockTest_simpleLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.849"/>
  <testcase name="testLoopUsageBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.743"/>
  <testcase name="testMethodCallOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.864"/>
  <testcase name="testMethodCallOnObjectWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.118"/>
  <testcase name="testMethodCallParallelTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.161"/>
  <testcase name="testMethodCallReturnTests()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="13.36"/>
  <testcase name="testMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.721"/>
  <testcase name="testMethodFormatTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.086"/>
  <testcase name="testMethodHierarchyCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.941"/>
  <testcase name="testMethodHierarchyCallWithExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.922"/>
  <testcase name="testNestedDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.949"/>
  <testcase name="testNestedForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.973"/>
  <testcase name="testNestedLoopsWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.555"/>
  <testcase name="testNestedWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.033"/>
  <testcase name="testPrettyPrinting_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.886"/>
  <testcase name="testPrettyPrinting_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.875"/>
  <testcase name="testRecursiveFibonacci_LONG_RUNNING_TEST()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="34.242"/>
  <testcase name="testSimpleConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.89"/>
  <testcase name="testSimpleIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.043"/>
  <testcase name="testSimpleIfNoConditionSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.737"/>
  <testcase name="testSimpleMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.835"/>
  <testcase name="testSimpleNullPointerSplitTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.014"/>
  <testcase name="testSimplePruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.97"/>
  <testcase name="testSimpleStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.833"/>
  <testcase name="testStatementKindTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.916"/>
  <testcase name="testStatements()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.797"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.824"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.827"/>
  <testcase name="testStaticContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.871"/>
  <testcase name="testStaticContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.825"/>
  <testcase name="testStaticContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.835"/>
  <testcase name="testStaticContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.808"/>
  <testcase name="testStaticContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.819"/>
  <testcase name="testStaticContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.825"/>
  <testcase name="testStaticContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.908"/>
  <testcase name="testStaticContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.898"/>
  <testcase name="testStaticContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.895"/>
  <testcase name="testStaticContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.829"/>
  <testcase name="testStaticDefaultContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.893"/>
  <testcase name="testStaticInstanceFieldChanged()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.188"/>
  <testcase name="testStaticMethodCall()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.873"/>
  <testcase name="testSwitchCaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.672"/>
  <testcase name="testSwitchCaseTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.887"/>
  <testcase name="testSymbolicExecutionCompletionsTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.337"/>
  <testcase name="testThrowTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.779"/>
  <testcase name="testThrowVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.765"/>
  <testcase name="testTryCatchFinally()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.997"/>
  <testcase name="testUnicode_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.583"/>
  <testcase name="testUnicode_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.555"/>
  <testcase name="testUseLoopInvariantArrayAverage()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.336"/>
  <testcase name="testUseLoopInvariantArraySizeDoWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.147"/>
  <testcase name="testUseLoopInvariantArraySizeWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.055"/>
  <testcase name="testUseLoopInvariantArraySumFor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.172"/>
  <testcase name="testUseLoopInvariantArraySumForEach()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.171"/>
  <testcase name="testUseLoopInvariantArraySumWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.171"/>
  <testcase name="testUseLoopInvariantArraySumWhileInitiallyInvalid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.162"/>
  <testcase name="testUseLoopInvariantLoopSplittingCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.676"/>
  <testcase name="testUseLoopInvariantTwoLoops()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.367"/>
  <testcase name="testUseLoopInvariantWithoutDecreasing()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.106"/>
  <testcase name="testUseOperationContractAllBranchesOpenTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.302"/>
  <testcase name="testUseOperationContractApplyContractTwice()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.806"/>
  <testcase name="testUseOperationContractExceptionalNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.817"/>
  <testcase name="testUseOperationContractFalsePreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.832"/>
  <testcase name="testUseOperationContractFixedNormalPostTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.791"/>
  <testcase name="testUseOperationContractInvalidPreconditionOnObjectTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.838"/>
  <testcase name="testUseOperationContractInvalidPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.861"/>
  <testcase name="testUseOperationContractLightweightOperationContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.885"/>
  <testcase name="testUseOperationContractNoExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.784"/>
  <testcase name="testUseOperationContractNoPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.761"/>
  <testcase name="testUseOperationContractNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.834"/>
  <testcase name="testUseOperationContractNormalAndExceptionalBranchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.073"/>
  <testcase name="testUseOperationContractNormalAndExceptionalTogetherTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.812"/>
  <testcase name="testUseOperationContractQueryTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.78"/>
  <testcase name="testUseOperationContractStatementsInImpliciteConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="13.987"/>
  <testcase name="testUseOperationContractVariableNestedOperationContractUse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.764"/>
  <testcase name="testVariablesArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.602"/>
  <testcase name="testVariablesArrayCreationInstanceTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.9"/>
  <testcase name="testVariablesArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.988"/>
  <testcase name="testVariablesArrayTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.222"/>
  <testcase name="testVariablesEmptyArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.645"/>
  <testcase name="testVariablesInstanceVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="21.346"/>
  <testcase name="testVariablesLocalTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.809"/>
  <testcase name="testVariablesNonSimpleArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="22.78"/>
  <testcase name="testVariablesNonSimpleArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.42"/>
  <testcase name="testVariablesStaticTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.392"/>
  <testcase name="testVariablesUnknownTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.105"/>
  <testcase name="testVerifiedTest_loop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.309"/>
  <testcase name="testVerifiedTest_magic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.809"/>
  <testcase name="testVerifiedTest_magicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.809"/>
  <testcase name="testVerifiedTest_notLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.435"/>
  <testcase name="testVerifiedTest_notMagic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.808"/>
  <testcase name="testVerifiedTest_notMagicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.837"/>
  <testcase name="testVerifyMin()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.383"/>
  <testcase name="testVerifyMinTrueBranch()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.654"/>
  <testcase name="testVerifyNumberNormal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.835"/>
  <testcase name="testVoidWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.362"/>
  <testcase name="testWhileFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.779"/>
  <testcase name="testWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.943"/>
  <testcase name="testWhileWithLoopInvariantInCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.55"/>
  <testcase name="testWhileWithMethodCallAsConditionOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.521"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.263"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.694"/>
  <testcase name="testWhileWithMethodCallAsCondition_preExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.254"/>
  <testcase name="testWhileWithMethodCallAsCondition_preMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.137"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
