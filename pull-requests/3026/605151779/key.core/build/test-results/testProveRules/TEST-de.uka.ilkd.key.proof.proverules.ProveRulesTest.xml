<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.proof.proverules.ProveRulesTest" tests="196" skipped="0" failures="0" errors="0" timestamp="2023-03-18T14:11:49" hostname="fv-az561-435" time="611.978">
  <properties/>
  <testcase name="eqTermCut" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.5"/>
  <testcase name="equivAllRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.449"/>
  <testcase name="irrflConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.216"/>
  <testcase name="irrflConcrete2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.167"/>
  <testcase name="cancel_gtPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.206"/>
  <testcase name="cancel_gtNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.098"/>
  <testcase name="moduloIntIsInInt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.107"/>
  <testcase name="moduloLongIsInLong" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.038"/>
  <testcase name="moduloShortIsInShort" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.085"/>
  <testcase name="moduloByteIsInByte" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.052"/>
  <testcase name="moduloCharIsInChar" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.065"/>
  <testcase name="div_unique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.09"/>
  <testcase name="div_unique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.076"/>
  <testcase name="div_exists" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.275"/>
  <testcase name="div_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.0"/>
  <testcase name="jdiv_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.009"/>
  <testcase name="div_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.034"/>
  <testcase name="divResZero1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.016"/>
  <testcase name="divResZero2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.027"/>
  <testcase name="divResOne1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.004"/>
  <testcase name="divResOne2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.013"/>
  <testcase name="div_cancel1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.034"/>
  <testcase name="div_cancel2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.984"/>
  <testcase name="divAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.017"/>
  <testcase name="divMinus" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.039"/>
  <testcase name="divMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.067"/>
  <testcase name="divLeastDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.02"/>
  <testcase name="divLeastDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.037"/>
  <testcase name="divGreatestDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.993"/>
  <testcase name="divGreatestDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.027"/>
  <testcase name="divIncreasingPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.013"/>
  <testcase name="divIncreasingNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.997"/>
  <testcase name="jdiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.975"/>
  <testcase name="jdivPulloutMinusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.98"/>
  <testcase name="jdivPulloutMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.062"/>
  <testcase name="jdiv_uniquePosPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.992"/>
  <testcase name="jdiv_uniquePosNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.986"/>
  <testcase name="jdiv_uniqueNegPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.012"/>
  <testcase name="jdiv_uniqueNegNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.995"/>
  <testcase name="jdivMultDenom1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.042"/>
  <testcase name="jdivMultDenom2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.969"/>
  <testcase name="mod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.996"/>
  <testcase name="mod_lessDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.97"/>
  <testcase name="jmod_NumPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.974"/>
  <testcase name="jmod_NumNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.034"/>
  <testcase name="jmod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.014"/>
  <testcase name="jmodNumZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.049"/>
  <testcase name="jmod_pulloutminusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.051"/>
  <testcase name="jmod_pulloutminusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.98"/>
  <testcase name="jmodUnique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.148"/>
  <testcase name="jmodUnique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.111"/>
  <testcase name="intDivRem" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.967"/>
  <testcase name="jmodjmod" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.05"/>
  <testcase name="jmodDivisible" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.029"/>
  <testcase name="jmodDivisibleRep" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.972"/>
  <testcase name="jdivAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.182"/>
  <testcase name="jmodAltZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.976"/>
  <testcase name="jmodAddMultDenomZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.995"/>
  <testcase name="polyDiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.986"/>
  <testcase name="polyMod_ltdivDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.977"/>
  <testcase name="bsum_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.989"/>
  <testcase name="bsum_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.975"/>
  <testcase name="bsum_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.025"/>
  <testcase name="bsum_num_of_bounds" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.029"/>
  <testcase name="bsum_num_of_bounds2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.979"/>
  <testcase name="bsum_induction_upper2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.986"/>
  <testcase name="bsum_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.966"/>
  <testcase name="bsum_induction_upper_concrete_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.971"/>
  <testcase name="bsum_induction_upper2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.954"/>
  <testcase name="bsum_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.962"/>
  <testcase name="bsum_induction_lower2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.963"/>
  <testcase name="bsum_induction_lower2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.956"/>
  <testcase name="bsum_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.051"/>
  <testcase name="bsum_upper_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.047"/>
  <testcase name="bsum_lower_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.033"/>
  <testcase name="bsum_positive_lower_bound_element" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.016"/>
  <testcase name="bsum_sub_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.013"/>
  <testcase name="bsum_less_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.03"/>
  <testcase name="bsum_equal_except_one_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.991"/>
  <testcase name="bsum_num_of_is_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.004"/>
  <testcase name="bsum_num_of_is_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.995"/>
  <testcase name="bsum_num_of_is_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.991"/>
  <testcase name="bsum_num_of_is_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.981"/>
  <testcase name="bsum_num_of_lt_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.01"/>
  <testcase name="bsum_num_of_lt_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.988"/>
  <testcase name="bsum_num_of_lt_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.997"/>
  <testcase name="bsum_num_of_lt_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.027"/>
  <testcase name="bsum_num_of_gt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.087"/>
  <testcase name="bsum_num_of_gt0_alt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.061"/>
  <testcase name="bsum_add_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.001"/>
  <testcase name="bprod_all_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.994"/>
  <testcase name="bprod_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.061"/>
  <testcase name="powConcrete0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.992"/>
  <testcase name="powConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.003"/>
  <testcase name="powSplitFactor" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.983"/>
  <testcase name="powAdd" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.986"/>
  <testcase name="powMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.005"/>
  <testcase name="powMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.961"/>
  <testcase name="powMonoConcreteRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.998"/>
  <testcase name="powPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.999"/>
  <testcase name="powPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.006"/>
  <testcase name="powGeq1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.992"/>
  <testcase name="pow2InIntLower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.979"/>
  <testcase name="pow2InIntUpper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.967"/>
  <testcase name="logSelfConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.969"/>
  <testcase name="log1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.004"/>
  <testcase name="logProduct" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.972"/>
  <testcase name="logTimesBaseConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.004"/>
  <testcase name="logProdIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.018"/>
  <testcase name="logProdIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.018"/>
  <testcase name="logPowIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.984"/>
  <testcase name="logPowIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.02"/>
  <testcase name="logPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.011"/>
  <testcase name="logPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.015"/>
  <testcase name="logMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.063"/>
  <testcase name="logMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.013"/>
  <testcase name="powLogLess" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.005"/>
  <testcase name="powLogMore2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.021"/>
  <testcase name="logLessThanPow" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.091"/>
  <testcase name="logLessThanPowConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.981"/>
  <testcase name="logSqueeze" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.007"/>
  <testcase name="ifthenelse_equals" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.976"/>
  <testcase name="ifthenelse_equals_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.987"/>
  <testcase name="ifthenelse_equals_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.977"/>
  <testcase name="disjointWithSingleton1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.967"/>
  <testcase name="disjointWithSingleton2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.973"/>
  <testcase name="disjointArrayRanges" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.962"/>
  <testcase name="disjointArrayRangeAllFields1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.004"/>
  <testcase name="disjointArrayRangeAllFields2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.009"/>
  <testcase name="seqSelfDefinition" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.014"/>
  <testcase name="seqOutsideValue" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.987"/>
  <testcase name="castedGetAny" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.998"/>
  <testcase name="seqGetAlphaCast" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.015"/>
  <testcase name="getOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.984"/>
  <testcase name="getOfSeqSingletonConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.008"/>
  <testcase name="getOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.015"/>
  <testcase name="getOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.024"/>
  <testcase name="getOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.996"/>
  <testcase name="lenOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.978"/>
  <testcase name="lenOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.011"/>
  <testcase name="lenOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.009"/>
  <testcase name="lenOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.992"/>
  <testcase name="lenOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.997"/>
  <testcase name="equalityToSeqGetAndSeqLenLeft" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.997"/>
  <testcase name="equalityToSeqGetAndSeqLenRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.986"/>
  <testcase name="getOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.002"/>
  <testcase name="getOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.017"/>
  <testcase name="getOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.999"/>
  <testcase name="getOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.988"/>
  <testcase name="lenOfSeqEmptyEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.986"/>
  <testcase name="lenOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.99"/>
  <testcase name="lenOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.979"/>
  <testcase name="lenOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.007"/>
  <testcase name="lenOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.007"/>
  <testcase name="getOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.999"/>
  <testcase name="lenOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.997"/>
  <testcase name="seqConcatWithSeqEmpty1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.004"/>
  <testcase name="seqConcatWithSeqEmpty2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.014"/>
  <testcase name="seqReverseOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.005"/>
  <testcase name="subSeqComplete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.001"/>
  <testcase name="subSeqTailR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.018"/>
  <testcase name="subSeqTailL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.028"/>
  <testcase name="subSeqTailEQR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.007"/>
  <testcase name="subSeqTailEQL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.002"/>
  <testcase name="seqDef_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.035"/>
  <testcase name="seqDef_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.034"/>
  <testcase name="seqDef_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.069"/>
  <testcase name="seqDef_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.039"/>
  <testcase name="seqDef_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.057"/>
  <testcase name="seqDef_split_in_three" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.221"/>
  <testcase name="seqDef_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.028"/>
  <testcase name="seqDef_one_summand" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.008"/>
  <testcase name="seqDef_lower_equals_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.99"/>
  <testcase name="seqDefOfSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.034"/>
  <testcase name="seqSelfDefinitionEQ2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.99"/>
  <testcase name="indexOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.0"/>
  <testcase name="indexOfSeqConcatFirst" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.023"/>
  <testcase name="indexOfSeqConcatSecond" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.025"/>
  <testcase name="indexOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.059"/>
  <testcase name="lenOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.014"/>
  <testcase name="getAnyOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.005"/>
  <testcase name="getOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.014"/>
  <testcase name="getAnyOfNPermInv" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.0"/>
  <testcase name="seqNPermRange" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.084"/>
  <testcase name="seqPermTrans" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.09"/>
  <testcase name="seqPermRefl" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.039"/>
  <testcase name="seqPermSplit" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="2.987"/>
  <testcase name="seqNPermRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.392"/>
  <testcase name="seqPermFromSwap" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.154"/>
  <testcase name="seqPermTransAlt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.033"/>
  <testcase name="seqPermTransAlt1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.039"/>
  <testcase name="seqPermTransAlt2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.087"/>
  <testcase name="seqPermTransAlt3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.005"/>
  <testcase name="schiffl_lemma_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="21.253"/>
  <testcase name="schiffl_thm_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.676"/>
  <testcase name="eqSameSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.057"/>
  <system-out><![CDATA[14:11:41,269 |-INFO in ch.qos.logback.classic.LoggerContext[default] - This is logback-classic version 1.4.5
14:11:41,320 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
14:11:41,335 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/home/runner/work/key/key/key.core/build/resources/test/logback.xml]
14:11:41,792 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [STDOUT]
14:11:41,792 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
14:11:41,813 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [file] in [ch.qos.logback.core.ConsoleAppender]
14:11:41,813 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [append] in [ch.qos.logback.core.ConsoleAppender]
14:11:41,814 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
14:11:41,828 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to WARN
14:11:41,838 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [STDOUT] to Logger[ROOT]
14:11:41,839 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@3af17be2 - End of configuration.
14:11:41,839 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@f9879ac - Registering current configuration as safe fallback point

1007       WARN  Test worker     d.u.i.k.s.ProofSettings   No proof-settings could be loaded, using defaults java.io.FileNotFoundException: /home/runner/.key/proof-settings.props (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
