<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.proof.proverules.ProveRulesTest" tests="196" skipped="0" failures="0" errors="0" timestamp="2023-03-20T10:03:01" hostname="fv-az574-349" time="875.66">
  <properties/>
  <testcase name="eqTermCut" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.327"/>
  <testcase name="equivAllRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.015"/>
  <testcase name="irrflConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.757"/>
  <testcase name="irrflConcrete2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.684"/>
  <testcase name="cancel_gtPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.622"/>
  <testcase name="cancel_gtNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.568"/>
  <testcase name="moduloIntIsInInt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.541"/>
  <testcase name="moduloLongIsInLong" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.641"/>
  <testcase name="moduloShortIsInShort" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.494"/>
  <testcase name="moduloByteIsInByte" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.43"/>
  <testcase name="moduloCharIsInChar" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.329"/>
  <testcase name="div_unique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.504"/>
  <testcase name="div_unique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.534"/>
  <testcase name="div_exists" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.888"/>
  <testcase name="div_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.376"/>
  <testcase name="jdiv_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.341"/>
  <testcase name="div_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.465"/>
  <testcase name="divResZero1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.329"/>
  <testcase name="divResZero2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.309"/>
  <testcase name="divResOne1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.331"/>
  <testcase name="divResOne2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.308"/>
  <testcase name="div_cancel1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.404"/>
  <testcase name="div_cancel2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.306"/>
  <testcase name="divAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.317"/>
  <testcase name="divMinus" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.489"/>
  <testcase name="divMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.37"/>
  <testcase name="divLeastDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.35"/>
  <testcase name="divLeastDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.245"/>
  <testcase name="divGreatestDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.313"/>
  <testcase name="divGreatestDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.306"/>
  <testcase name="divIncreasingPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.319"/>
  <testcase name="divIncreasingNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.301"/>
  <testcase name="jdiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.36"/>
  <testcase name="jdivPulloutMinusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.338"/>
  <testcase name="jdivPulloutMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.382"/>
  <testcase name="jdiv_uniquePosPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.352"/>
  <testcase name="jdiv_uniquePosNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.319"/>
  <testcase name="jdiv_uniqueNegPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.254"/>
  <testcase name="jdiv_uniqueNegNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.285"/>
  <testcase name="jdivMultDenom1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.293"/>
  <testcase name="jdivMultDenom2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.353"/>
  <testcase name="mod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.193"/>
  <testcase name="mod_lessDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.231"/>
  <testcase name="jmod_NumPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.207"/>
  <testcase name="jmod_NumNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.369"/>
  <testcase name="jmod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.321"/>
  <testcase name="jmodNumZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.148"/>
  <testcase name="jmod_pulloutminusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.338"/>
  <testcase name="jmod_pulloutminusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.274"/>
  <testcase name="jmodUnique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.671"/>
  <testcase name="jmodUnique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.719"/>
  <testcase name="intDivRem" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.278"/>
  <testcase name="jmodjmod" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.405"/>
  <testcase name="jmodDivisible" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.388"/>
  <testcase name="jmodDivisibleRep" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.277"/>
  <testcase name="jdivAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.662"/>
  <testcase name="jmodAltZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.274"/>
  <testcase name="jmodAddMultDenomZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.35"/>
  <testcase name="polyDiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.321"/>
  <testcase name="polyMod_ltdivDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.317"/>
  <testcase name="bsum_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.202"/>
  <testcase name="bsum_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.252"/>
  <testcase name="bsum_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.254"/>
  <testcase name="bsum_num_of_bounds" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.342"/>
  <testcase name="bsum_num_of_bounds2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.312"/>
  <testcase name="bsum_induction_upper2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.202"/>
  <testcase name="bsum_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.237"/>
  <testcase name="bsum_induction_upper_concrete_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.278"/>
  <testcase name="bsum_induction_upper2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.209"/>
  <testcase name="bsum_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.277"/>
  <testcase name="bsum_induction_lower2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.235"/>
  <testcase name="bsum_induction_lower2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.267"/>
  <testcase name="bsum_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.393"/>
  <testcase name="bsum_upper_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.369"/>
  <testcase name="bsum_lower_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.296"/>
  <testcase name="bsum_positive_lower_bound_element" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.344"/>
  <testcase name="bsum_sub_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.308"/>
  <testcase name="bsum_less_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.41"/>
  <testcase name="bsum_equal_except_one_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.336"/>
  <testcase name="bsum_num_of_is_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.369"/>
  <testcase name="bsum_num_of_is_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.329"/>
  <testcase name="bsum_num_of_is_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.248"/>
  <testcase name="bsum_num_of_is_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.402"/>
  <testcase name="bsum_num_of_lt_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.374"/>
  <testcase name="bsum_num_of_lt_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.364"/>
  <testcase name="bsum_num_of_lt_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.359"/>
  <testcase name="bsum_num_of_lt_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.197"/>
  <testcase name="bsum_num_of_gt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.198"/>
  <testcase name="bsum_num_of_gt0_alt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.163"/>
  <testcase name="bsum_add_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.179"/>
  <testcase name="bprod_all_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.152"/>
  <testcase name="bprod_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.23"/>
  <testcase name="powConcrete0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.254"/>
  <testcase name="powConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.221"/>
  <testcase name="powSplitFactor" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.181"/>
  <testcase name="powAdd" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.138"/>
  <testcase name="powMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.282"/>
  <testcase name="powMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.225"/>
  <testcase name="powMonoConcreteRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.165"/>
  <testcase name="powPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.279"/>
  <testcase name="powPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.22"/>
  <testcase name="powGeq1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.218"/>
  <testcase name="pow2InIntLower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.241"/>
  <testcase name="pow2InIntUpper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.229"/>
  <testcase name="logSelfConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.26"/>
  <testcase name="log1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.387"/>
  <testcase name="logProduct" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.345"/>
  <testcase name="logTimesBaseConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.283"/>
  <testcase name="logProdIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.327"/>
  <testcase name="logProdIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.223"/>
  <testcase name="logPowIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.306"/>
  <testcase name="logPowIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.33"/>
  <testcase name="logPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.337"/>
  <testcase name="logPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.375"/>
  <testcase name="logMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.362"/>
  <testcase name="logMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.195"/>
  <testcase name="powLogLess" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.314"/>
  <testcase name="powLogMore2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.308"/>
  <testcase name="logLessThanPow" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.396"/>
  <testcase name="logLessThanPowConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.364"/>
  <testcase name="logSqueeze" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.288"/>
  <testcase name="ifthenelse_equals" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.245"/>
  <testcase name="ifthenelse_equals_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.154"/>
  <testcase name="ifthenelse_equals_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.212"/>
  <testcase name="disjointWithSingleton1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.383"/>
  <testcase name="disjointWithSingleton2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.384"/>
  <testcase name="disjointArrayRanges" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.404"/>
  <testcase name="disjointArrayRangeAllFields1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.378"/>
  <testcase name="disjointArrayRangeAllFields2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.272"/>
  <testcase name="seqSelfDefinition" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.341"/>
  <testcase name="seqOutsideValue" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.36"/>
  <testcase name="castedGetAny" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.319"/>
  <testcase name="seqGetAlphaCast" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.289"/>
  <testcase name="getOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.231"/>
  <testcase name="getOfSeqSingletonConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.227"/>
  <testcase name="getOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.333"/>
  <testcase name="getOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.275"/>
  <testcase name="getOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.34"/>
  <testcase name="lenOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.241"/>
  <testcase name="lenOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.353"/>
  <testcase name="lenOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.322"/>
  <testcase name="lenOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.199"/>
  <testcase name="lenOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.197"/>
  <testcase name="equalityToSeqGetAndSeqLenLeft" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.193"/>
  <testcase name="equalityToSeqGetAndSeqLenRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.212"/>
  <testcase name="getOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.351"/>
  <testcase name="getOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.275"/>
  <testcase name="getOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.183"/>
  <testcase name="getOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.223"/>
  <testcase name="lenOfSeqEmptyEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.278"/>
  <testcase name="lenOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.341"/>
  <testcase name="lenOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.278"/>
  <testcase name="lenOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.286"/>
  <testcase name="lenOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.315"/>
  <testcase name="getOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.371"/>
  <testcase name="lenOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.331"/>
  <testcase name="seqConcatWithSeqEmpty1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.407"/>
  <testcase name="seqConcatWithSeqEmpty2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.36"/>
  <testcase name="seqReverseOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.379"/>
  <testcase name="subSeqComplete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.336"/>
  <testcase name="subSeqTailR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.315"/>
  <testcase name="subSeqTailL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.225"/>
  <testcase name="subSeqTailEQR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.274"/>
  <testcase name="subSeqTailEQL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.242"/>
  <testcase name="seqDef_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.37"/>
  <testcase name="seqDef_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.326"/>
  <testcase name="seqDef_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.33"/>
  <testcase name="seqDef_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.307"/>
  <testcase name="seqDef_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.307"/>
  <testcase name="seqDef_split_in_three" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.639"/>
  <testcase name="seqDef_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.37"/>
  <testcase name="seqDef_one_summand" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.333"/>
  <testcase name="seqDef_lower_equals_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.263"/>
  <testcase name="seqDefOfSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.237"/>
  <testcase name="seqSelfDefinitionEQ2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.23"/>
  <testcase name="indexOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.183"/>
  <testcase name="indexOfSeqConcatFirst" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.228"/>
  <testcase name="indexOfSeqConcatSecond" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.282"/>
  <testcase name="indexOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.264"/>
  <testcase name="lenOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.259"/>
  <testcase name="getAnyOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.205"/>
  <testcase name="getOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.211"/>
  <testcase name="getAnyOfNPermInv" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.321"/>
  <testcase name="seqNPermRange" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.367"/>
  <testcase name="seqPermTrans" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.552"/>
  <testcase name="seqPermRefl" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.243"/>
  <testcase name="seqPermSplit" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.325"/>
  <testcase name="seqNPermRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.846"/>
  <testcase name="seqPermFromSwap" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.489"/>
  <testcase name="seqPermTransAlt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.298"/>
  <testcase name="seqPermTransAlt1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.257"/>
  <testcase name="seqPermTransAlt2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.321"/>
  <testcase name="seqPermTransAlt3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.334"/>
  <testcase name="schiffl_lemma_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="28.063"/>
  <testcase name="schiffl_thm_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.628"/>
  <testcase name="eqSameSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.203"/>
  <system-out><![CDATA[10:02:48,514 |-INFO in ch.qos.logback.classic.LoggerContext[default] - This is logback-classic version 1.4.5
10:02:48,597 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
10:02:48,625 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/home/runner/work/key/key/key.core/build/resources/test/logback.xml]
10:02:49,417 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [STDOUT]
10:02:49,417 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
10:02:49,433 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [file] in [ch.qos.logback.core.ConsoleAppender]
10:02:49,433 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [append] in [ch.qos.logback.core.ConsoleAppender]
10:02:49,434 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
10:02:49,453 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to WARN
10:02:49,459 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [STDOUT] to Logger[ROOT]
10:02:49,459 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@6f80fafe - End of configuration.
10:02:49,460 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@3af17be2 - Registering current configuration as safe fallback point

1509       WARN  Test worker     d.u.i.k.s.ProofSettings   No proof-settings could be loaded, using defaults java.io.FileNotFoundException: /home/runner/.key/proof-settings.props (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
