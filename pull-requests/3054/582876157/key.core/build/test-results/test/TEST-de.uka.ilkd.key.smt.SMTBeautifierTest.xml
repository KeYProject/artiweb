<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.smt.SMTBeautifierTest" tests="22" skipped="0" failures="0" errors="0" timestamp="2023-03-03T21:24:10" hostname="fv-az445-226" time="0.062">
  <properties/>
  <testcase name="[1] &#10;(declare-fun f (Int) Int)&#10;&#10;, (declare-fun f (Int) Int)&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.001"/>
  <testcase name="[2] &#10;&#10;(assert (forall ((x Int)(x Int)(x Int)(x Int)(x Int)(x Int)(x Int)(x Int)(x Int)(x Int)) (&gt; x 0)))&#10;&#10;, &#10;&#10;(assert&#10;  (forall&#10;    ((x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int))&#10;    (&gt; x 0)))&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[3] &#10;&#10;(assert (forall (! ((x Int)) (=&gt; longName________________ (&gt; x 0)) :pattern ((+ 2 x)))))&#10;&#10;, &#10;&#10;(assert&#10;  (forall&#10;    (! ((x Int)) (=&gt; longName________________ (&gt; x 0)) :pattern ((+ 2 x)))))&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.004"/>
  <testcase name="[4] &#10;&#10;(assert |long name with spaces is not broken when longer than 80 characters even this is a ridiculously long name|)&#10;&#10;, &#10;&#10;(assert&#10;  |long name with spaces is not broken when longer than 80 characters even this is a ridiculously long name|)&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.007"/>
  <testcase name="[5] &#10;&#10;(and true  true true true true true true true true true true true true true true&#10; true true true true true true true true true true true true true true true)&#10;&#10;, &#10;&#10;(and&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true)&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.001"/>
  <testcase name="[6] &#10;&#10;; Now only comments&#10;; but multiple rows of them!&#10;   ; with indentations  (which are lost)&#10;; and long lines too xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxx xxxxxxxxxxX&#10;&#10;, &#10;&#10;; Now only comments&#10;; but multiple rows of them!&#10;; with indentations  (which are lost)&#10;; and long lines too xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxx xxxxxxxxxxX&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.001"/>
  <testcase name="[7] &#10;&#10;(assert (and looooooooooooooooooooooooooooooooooooooooooooong short ; false false commented out&#10;after))&#10;&#10;, &#10;&#10;(assert&#10;  (and&#10;    looooooooooooooooooooooooooooooooooooooooooooong&#10;    short&#10;    ; false false commented out&#10;    after))&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[8] &#10;&#10;(assert (f x ; inline comments break lines&#10;(after 42)))&#10;&#10;, &#10;&#10;(assert&#10;  (f&#10;    x&#10;    ; inline comments break lines&#10;    (after 42)))&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.007"/>
  <testcase name="[9] &#10;&#10;(assert (last is comment) ; end of smt problem declaration&#10;)&#10;&#10;, &#10;&#10;(assert&#10;  (last is comment)&#10;  ; end of smt problem declaration&#10;  )&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[10] &#10;; Problem: New line before ')'&#10;( a b c d&#10;)&#10;&#10;, &#10;; Problem: New line before ')'&#10;(a b c d)&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.001"/>
  <testcase name="[11] &#10;; From a bug:&#10;(assert(not&#10;&#10;&#10;          ; The formula to be proved:&#10;&#10;(=&gt; (and (and (= 6 a_2 ) (= 3 b_3 ) ) (= 2 c_4 ) ) (= c_4 (div a_2 b_3 ) ) )&#10;))          ; End of assert.&#10;&#10;(check-sat)&#10;          ; end of smt problem declaration, &#10;; From a bug:&#10;(assert&#10;  (not&#10;    ; The formula to be proved:&#10;    (=&gt; (and (and (= 6 a_2) (= 3 b_3)) (= 2 c_4)) (= c_4 (div a_2 b_3)))))&#10;; End of assert.&#10;(check-sat)&#10;; end of smt problem declaration" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.001"/>
  <testcase name="[1] &#10;(declare-fun f (Int) Int)&#10;&#10;, (declare-fun f (Int) Int)&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[2] &#10;&#10;(assert (forall ((x Int)(x Int)(x Int)(x Int)(x Int)(x Int)(x Int)(x Int)(x Int)(x Int)) (&gt; x 0)))&#10;&#10;, &#10;&#10;(assert&#10;  (forall&#10;    ((x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int)&#10;      (x Int))&#10;    (&gt; x 0)))&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.003"/>
  <testcase name="[3] &#10;&#10;(assert (forall (! ((x Int)) (=&gt; longName________________ (&gt; x 0)) :pattern ((+ 2 x)))))&#10;&#10;, &#10;&#10;(assert&#10;  (forall&#10;    (! ((x Int)) (=&gt; longName________________ (&gt; x 0)) :pattern ((+ 2 x)))))&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.005"/>
  <testcase name="[4] &#10;&#10;(assert |long name with spaces is not broken when longer than 80 characters even this is a ridiculously long name|)&#10;&#10;, &#10;&#10;(assert&#10;  |long name with spaces is not broken when longer than 80 characters even this is a ridiculously long name|)&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[5] &#10;&#10;(and true  true true true true true true true true true true true true true true&#10; true true true true true true true true true true true true true true true)&#10;&#10;, &#10;&#10;(and&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true&#10;  true)&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[6] &#10;&#10;; Now only comments&#10;; but multiple rows of them!&#10;   ; with indentations  (which are lost)&#10;; and long lines too xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxx xxxxxxxxxxX&#10;&#10;, &#10;&#10;; Now only comments&#10;; but multiple rows of them!&#10;; with indentations  (which are lost)&#10;; and long lines too xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxx xxxxxxxxxxX&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[7] &#10;&#10;(assert (and looooooooooooooooooooooooooooooooooooooooooooong short ; false false commented out&#10;after))&#10;&#10;, &#10;&#10;(assert&#10;  (and&#10;    looooooooooooooooooooooooooooooooooooooooooooong&#10;    short&#10;    ; false false commented out&#10;    after))&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[8] &#10;&#10;(assert (f x ; inline comments break lines&#10;(after 42)))&#10;&#10;, &#10;&#10;(assert&#10;  (f&#10;    x&#10;    ; inline comments break lines&#10;    (after 42)))&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[9] &#10;&#10;(assert (last is comment) ; end of smt problem declaration&#10;)&#10;&#10;, &#10;&#10;(assert&#10;  (last is comment)&#10;  ; end of smt problem declaration&#10;  )&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[10] &#10;; Problem: New line before ')'&#10;( a b c d&#10;)&#10;&#10;, &#10;; Problem: New line before ')'&#10;(a b c d)&#10;&#10;" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <testcase name="[11] &#10;; From a bug:&#10;(assert(not&#10;&#10;&#10;          ; The formula to be proved:&#10;&#10;(=&gt; (and (and (= 6 a_2 ) (= 3 b_3 ) ) (= 2 c_4 ) ) (= c_4 (div a_2 b_3 ) ) )&#10;))          ; End of assert.&#10;&#10;(check-sat)&#10;          ; end of smt problem declaration, &#10;; From a bug:&#10;(assert&#10;  (not&#10;    ; The formula to be proved:&#10;    (=&gt; (and (and (= 6 a_2) (= 3 b_3)) (= 2 c_4)) (= c_4 (div a_2 b_3)))))&#10;; End of assert.&#10;(check-sat)&#10;; end of smt problem declaration" classname="de.uka.ilkd.key.smt.SMTBeautifierTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
