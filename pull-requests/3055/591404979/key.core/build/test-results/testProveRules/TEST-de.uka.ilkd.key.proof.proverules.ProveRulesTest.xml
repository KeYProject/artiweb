<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.proof.proverules.ProveRulesTest" tests="196" skipped="0" failures="0" errors="0" timestamp="2023-03-09T16:05:25" hostname="fv-az168-299" time="814.343">
  <properties/>
  <testcase name="eqTermCut" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.747"/>
  <testcase name="equivAllRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.194"/>
  <testcase name="irrflConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.319"/>
  <testcase name="irrflConcrete2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.293"/>
  <testcase name="cancel_gtPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.501"/>
  <testcase name="cancel_gtNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.608"/>
  <testcase name="moduloIntIsInInt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.53"/>
  <testcase name="moduloLongIsInLong" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.028"/>
  <testcase name="moduloShortIsInShort" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.352"/>
  <testcase name="moduloByteIsInByte" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.033"/>
  <testcase name="moduloCharIsInChar" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.854"/>
  <testcase name="div_unique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.13"/>
  <testcase name="div_unique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.492"/>
  <testcase name="div_exists" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.617"/>
  <testcase name="div_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.933"/>
  <testcase name="jdiv_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.948"/>
  <testcase name="div_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.071"/>
  <testcase name="divResZero1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.992"/>
  <testcase name="divResZero2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.074"/>
  <testcase name="divResOne1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.116"/>
  <testcase name="divResOne2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.178"/>
  <testcase name="div_cancel1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.074"/>
  <testcase name="div_cancel2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.074"/>
  <testcase name="divAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.142"/>
  <testcase name="divMinus" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.211"/>
  <testcase name="divMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.082"/>
  <testcase name="divLeastDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.124"/>
  <testcase name="divLeastDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.312"/>
  <testcase name="divGreatestDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.123"/>
  <testcase name="divGreatestDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.176"/>
  <testcase name="divIncreasingPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.011"/>
  <testcase name="divIncreasingNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.106"/>
  <testcase name="jdiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.878"/>
  <testcase name="jdivPulloutMinusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.986"/>
  <testcase name="jdivPulloutMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.275"/>
  <testcase name="jdiv_uniquePosPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.128"/>
  <testcase name="jdiv_uniquePosNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.937"/>
  <testcase name="jdiv_uniqueNegPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.968"/>
  <testcase name="jdiv_uniqueNegNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.02"/>
  <testcase name="jdivMultDenom1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.002"/>
  <testcase name="jdivMultDenom2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.924"/>
  <testcase name="mod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.161"/>
  <testcase name="mod_lessDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.124"/>
  <testcase name="jmod_NumPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.036"/>
  <testcase name="jmod_NumNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.024"/>
  <testcase name="jmod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.036"/>
  <testcase name="jmodNumZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.975"/>
  <testcase name="jmod_pulloutminusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.06"/>
  <testcase name="jmod_pulloutminusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.89"/>
  <testcase name="jmodUnique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.379"/>
  <testcase name="jmodUnique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.192"/>
  <testcase name="intDivRem" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.914"/>
  <testcase name="jmodjmod" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.097"/>
  <testcase name="jmodDivisible" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.025"/>
  <testcase name="jmodDivisibleRep" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.811"/>
  <testcase name="jdivAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.895"/>
  <testcase name="jmodAltZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.018"/>
  <testcase name="jmodAddMultDenomZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.218"/>
  <testcase name="polyDiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.057"/>
  <testcase name="polyMod_ltdivDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.087"/>
  <testcase name="bsum_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.368"/>
  <testcase name="bsum_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.302"/>
  <testcase name="bsum_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.097"/>
  <testcase name="bsum_num_of_bounds" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.496"/>
  <testcase name="bsum_num_of_bounds2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.471"/>
  <testcase name="bsum_induction_upper2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.728"/>
  <testcase name="bsum_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.208"/>
  <testcase name="bsum_induction_upper_concrete_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.016"/>
  <testcase name="bsum_induction_upper2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.053"/>
  <testcase name="bsum_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.945"/>
  <testcase name="bsum_induction_lower2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.16"/>
  <testcase name="bsum_induction_lower2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.933"/>
  <testcase name="bsum_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.718"/>
  <testcase name="bsum_upper_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.767"/>
  <testcase name="bsum_lower_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.669"/>
  <testcase name="bsum_positive_lower_bound_element" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.683"/>
  <testcase name="bsum_sub_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.613"/>
  <testcase name="bsum_less_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.707"/>
  <testcase name="bsum_equal_except_one_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.673"/>
  <testcase name="bsum_num_of_is_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.81"/>
  <testcase name="bsum_num_of_is_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.687"/>
  <testcase name="bsum_num_of_is_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.61"/>
  <testcase name="bsum_num_of_is_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.69"/>
  <testcase name="bsum_num_of_lt_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.816"/>
  <testcase name="bsum_num_of_lt_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.665"/>
  <testcase name="bsum_num_of_lt_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.757"/>
  <testcase name="bsum_num_of_lt_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.79"/>
  <testcase name="bsum_num_of_gt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.06"/>
  <testcase name="bsum_num_of_gt0_alt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.72"/>
  <testcase name="bsum_add_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.623"/>
  <testcase name="bprod_all_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.733"/>
  <testcase name="bprod_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.848"/>
  <testcase name="powConcrete0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.806"/>
  <testcase name="powConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.948"/>
  <testcase name="powSplitFactor" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.943"/>
  <testcase name="powAdd" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.925"/>
  <testcase name="powMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.814"/>
  <testcase name="powMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.785"/>
  <testcase name="powMonoConcreteRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.938"/>
  <testcase name="powPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.858"/>
  <testcase name="powPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.841"/>
  <testcase name="powGeq1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.955"/>
  <testcase name="pow2InIntLower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.129"/>
  <testcase name="pow2InIntUpper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.208"/>
  <testcase name="logSelfConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.071"/>
  <testcase name="log1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.105"/>
  <testcase name="logProduct" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.133"/>
  <testcase name="logTimesBaseConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.109"/>
  <testcase name="logProdIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.167"/>
  <testcase name="logProdIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.229"/>
  <testcase name="logPowIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.235"/>
  <testcase name="logPowIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.087"/>
  <testcase name="logPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.28"/>
  <testcase name="logPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.171"/>
  <testcase name="logMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.267"/>
  <testcase name="logMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.999"/>
  <testcase name="powLogLess" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.573"/>
  <testcase name="powLogMore2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.332"/>
  <testcase name="logLessThanPow" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.972"/>
  <testcase name="logLessThanPowConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.895"/>
  <testcase name="logSqueeze" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.669"/>
  <testcase name="ifthenelse_equals" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.611"/>
  <testcase name="ifthenelse_equals_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.511"/>
  <testcase name="ifthenelse_equals_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.57"/>
  <testcase name="disjointWithSingleton1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.723"/>
  <testcase name="disjointWithSingleton2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.804"/>
  <testcase name="disjointArrayRanges" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.632"/>
  <testcase name="disjointArrayRangeAllFields1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.576"/>
  <testcase name="disjointArrayRangeAllFields2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.972"/>
  <testcase name="seqSelfDefinition" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.07"/>
  <testcase name="seqOutsideValue" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.208"/>
  <testcase name="castedGetAny" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.495"/>
  <testcase name="seqGetAlphaCast" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.689"/>
  <testcase name="getOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.38"/>
  <testcase name="getOfSeqSingletonConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.466"/>
  <testcase name="getOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.297"/>
  <testcase name="getOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.555"/>
  <testcase name="getOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.255"/>
  <testcase name="lenOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.116"/>
  <testcase name="lenOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.925"/>
  <testcase name="lenOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.83"/>
  <testcase name="lenOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.737"/>
  <testcase name="lenOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.947"/>
  <testcase name="equalityToSeqGetAndSeqLenLeft" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.791"/>
  <testcase name="equalityToSeqGetAndSeqLenRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.761"/>
  <testcase name="getOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.767"/>
  <testcase name="getOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.866"/>
  <testcase name="getOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.083"/>
  <testcase name="getOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.889"/>
  <testcase name="lenOfSeqEmptyEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.779"/>
  <testcase name="lenOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.9"/>
  <testcase name="lenOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.764"/>
  <testcase name="lenOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.708"/>
  <testcase name="lenOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.734"/>
  <testcase name="getOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.809"/>
  <testcase name="lenOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.785"/>
  <testcase name="seqConcatWithSeqEmpty1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.633"/>
  <testcase name="seqConcatWithSeqEmpty2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.572"/>
  <testcase name="seqReverseOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.873"/>
  <testcase name="subSeqComplete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.608"/>
  <testcase name="subSeqTailR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.771"/>
  <testcase name="subSeqTailL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.91"/>
  <testcase name="subSeqTailEQR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.152"/>
  <testcase name="subSeqTailEQL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.189"/>
  <testcase name="seqDef_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.164"/>
  <testcase name="seqDef_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.19"/>
  <testcase name="seqDef_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.154"/>
  <testcase name="seqDef_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.126"/>
  <testcase name="seqDef_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.478"/>
  <testcase name="seqDef_split_in_three" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.677"/>
  <testcase name="seqDef_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.293"/>
  <testcase name="seqDef_one_summand" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.227"/>
  <testcase name="seqDef_lower_equals_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.078"/>
  <testcase name="seqDefOfSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.876"/>
  <testcase name="seqSelfDefinitionEQ2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.061"/>
  <testcase name="indexOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.106"/>
  <testcase name="indexOfSeqConcatFirst" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.833"/>
  <testcase name="indexOfSeqConcatSecond" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.205"/>
  <testcase name="indexOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.035"/>
  <testcase name="lenOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.798"/>
  <testcase name="getAnyOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.779"/>
  <testcase name="getOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.878"/>
  <testcase name="getAnyOfNPermInv" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.831"/>
  <testcase name="seqNPermRange" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.908"/>
  <testcase name="seqPermTrans" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.007"/>
  <testcase name="seqPermRefl" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.026"/>
  <testcase name="seqPermSplit" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="3.983"/>
  <testcase name="seqNPermRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.422"/>
  <testcase name="seqPermFromSwap" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.269"/>
  <testcase name="seqPermTransAlt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.026"/>
  <testcase name="seqPermTransAlt1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.282"/>
  <testcase name="seqPermTransAlt2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.186"/>
  <testcase name="seqPermTransAlt3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.383"/>
  <testcase name="schiffl_lemma_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="26.316"/>
  <testcase name="schiffl_thm_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.15"/>
  <testcase name="eqSameSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.346"/>
  <system-out><![CDATA[16:05:15,151 |-INFO in ch.qos.logback.classic.LoggerContext[default] - This is logback-classic version 1.4.5
16:05:15,177 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
16:05:15,196 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/home/runner/work/key/key/key.core/build/resources/test/logback.xml]
16:05:15,314 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [STDOUT]
16:05:15,315 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
16:05:15,328 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [file] in [ch.qos.logback.core.ConsoleAppender]
16:05:15,328 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [append] in [ch.qos.logback.core.ConsoleAppender]
16:05:15,329 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
16:05:15,347 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to WARN
16:05:15,358 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [STDOUT] to Logger[ROOT]
16:05:15,358 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@60bdf15d - End of configuration.
16:05:15,359 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@47da3952 - Registering current configuration as safe fallback point

651        WARN  Test worker     d.u.i.k.s.ProofSettings   No proof-settings could be loaded, using defaults java.io.FileNotFoundException: /home/runner/.key/proof-settings.props (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
