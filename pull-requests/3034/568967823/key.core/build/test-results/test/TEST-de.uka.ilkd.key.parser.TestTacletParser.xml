<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.parser.TestTacletParser" tests="20" skipped="0" failures="0" errors="0" timestamp="2023-02-23T01:39:58" hostname="fv-az313-288" time="0.042">
  <properties/>
  <testcase name="testAllRight()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <testcase name="testSchemaJava0()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <testcase name="testSchemaJava1()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.009"/>
  <testcase name="testSchemaJava2()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <testcase name="testSchemaJava4()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <testcase name="testSchemaJava6()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <testcase name="testSchemaJava8()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <testcase name="testCut()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testMakeInsertEq()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testAllLeft()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testClose()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testSchemaJava10()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testSchemaJava11()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.003"/>
  <testcase name="testFIdempotent()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testImpRight()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testVarcondNew()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <testcase name="testFreeReplacewithVariables()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <testcase name="testImpLeft()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testContraposition()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.001"/>
  <testcase name="testExConjSplit()" classname="de.uka.ilkd.key.parser.TestTacletParser" time="0.002"/>
  <system-out><![CDATA[286581     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:21: extraneous input '<' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', ')', '{', '@', NOT, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@12,22:22='<',<173>,2:21] (argument_list, call, accessterm, primitive_term, primitive_labeled_term, bracket_term, atom_prefix, strong_arith_term_2, strong_arith_term_1, weak_arith_term, comparison_term, equality_term, term60, conjunction_term, disjunction_term, implication_term, equivalence_term, elementary_update_term, parallel_term, term, taclet, rulesOrAxioms, decls, file) 
286587     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:23: no viable alternative at input '{..' [@14,24:25='..',<144>,2:23] (atom_prefix, strong_arith_term_2, strong_arith_term_1, weak_arith_term, comparison_term, equality_term, term60, conjunction_term, disjunction_term, implication_term, equivalence_term, elementary_update_term, parallel_term, term, argument_list, call, accessterm, primitive_term, primitive_labeled_term, bracket_term, atom_prefix, strong_arith_term_2, strong_arith_term_1, weak_arith_term, comparison_term, equality_term, term60, conjunction_term, disjunction_term, implication_term, equivalence_term, elementary_update_term, parallel_term, term, taclet, rulesOrAxioms, decls, file) 
286588     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:33: mismatched input ';' expecting {',', ')'} [@21,34:34=';',<138>,2:33] (argument_list, call, accessterm, primitive_term, primitive_labeled_term, bracket_term, atom_prefix, strong_arith_term_2, strong_arith_term_1, weak_arith_term, comparison_term, equality_term, term60, conjunction_term, disjunction_term, implication_term, equivalence_term, elementary_update_term, parallel_term, term, taclet, rulesOrAxioms, decls, file) 
286588     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:41: no viable alternative at input '#i;' [@26,42:42=';',<138>,2:41] (option_list, taclet, rulesOrAxioms, decls, file) 
286588     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:43: mismatched input '<' expecting {'(', '{'} [@28,44:44='<',<173>,2:43] (taclet, rulesOrAxioms, decls, file) 
286588     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:47: mismatched input '+' expecting {'(', '{'} [@32,48:48='+',<167>,2:47] (taclet, rulesOrAxioms, decls, file) 
286589     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:52: extraneous input '..' expecting {'\lemma', '}', IDENT, '/*!'} [@37,53:54='..',<144>,2:52] (rulesOrAxioms, decls, file) 
286589     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:56: mismatched input '>' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@40,57:57='>',<168>,2:56] (file) 
286590     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:21: extraneous input '<' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', ')', '{', '@', NOT, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@12,22:22='<',<173>,2:21] (argument_list, call, accessterm, primitive_term, primitive_labeled_term, bracket_term, atom_prefix, strong_arith_term_2, strong_arith_term_1, weak_arith_term, comparison_term, equality_term, term60, conjunction_term, disjunction_term, implication_term, equivalence_term, elementary_update_term, parallel_term, term, taclet, rulesOrAxioms, decls, file) 
286591     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:23: no viable alternative at input '{..' [@14,24:25='..',<144>,2:23] (atom_prefix, strong_arith_term_2, strong_arith_term_1, weak_arith_term, comparison_term, equality_term, term60, conjunction_term, disjunction_term, implication_term, equivalence_term, elementary_update_term, parallel_term, term, argument_list, call, accessterm, primitive_term, primitive_labeled_term, bracket_term, atom_prefix, strong_arith_term_2, strong_arith_term_1, weak_arith_term, comparison_term, equality_term, term60, conjunction_term, disjunction_term, implication_term, equivalence_term, elementary_update_term, parallel_term, term, taclet, rulesOrAxioms, decls, file) 
286591     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:33: mismatched input ';' expecting {',', ')'} [@21,34:34=';',<138>,2:33] (argument_list, call, accessterm, primitive_term, primitive_labeled_term, bracket_term, atom_prefix, strong_arith_term_2, strong_arith_term_1, weak_arith_term, comparison_term, equality_term, term60, conjunction_term, disjunction_term, implication_term, equivalence_term, elementary_update_term, parallel_term, term, taclet, rulesOrAxioms, decls, file) 
286591     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:43: no viable alternative at input '#lab;' [@26,44:44=';',<138>,2:43] (option_list, taclet, rulesOrAxioms, decls, file) 
286591     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:45: mismatched input '<' expecting {'(', '{'} [@28,46:46='<',<173>,2:45] (taclet, rulesOrAxioms, decls, file) 
286591     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:50: mismatched input '+' expecting {'(', '{'} [@32,51:51='+',<167>,2:50] (taclet, rulesOrAxioms, decls, file) 
286591     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:56: extraneous input '..' expecting {'\lemma', '}', IDENT, '/*!'} [@38,57:58='..',<144>,2:56] (rulesOrAxioms, decls, file) 
286591     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] <unknown>:2:60: mismatched input '>' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@41,61:61='>',<168>,2:60] (file) 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
