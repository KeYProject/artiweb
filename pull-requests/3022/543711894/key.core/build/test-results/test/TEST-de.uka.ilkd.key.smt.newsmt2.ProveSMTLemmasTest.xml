<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" tests="25" skipped="0" failures="25" errors="0" timestamp="2023-02-06T16:37:40" hostname="fv-az280-76" time="1.196">
  <properties/>
  <testcase name="[1] seqSub.dl, &#10;    \forall Seq seq;&#10;    \forall int from;&#10;    \forall int to;&#10;    \forall int idx;&#10;        any::seqGet(seqSub(seq, from, to)&lt;&lt;Trigger&gt;&gt;, idx)&#10;      = \if(0 &lt;= idx &amp; idx &lt; (to - from))&#10;        \then(any::seqGet(seq, idx + from))&#10;        \else(seqGetOutside)&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.061">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_seqSub.dl_15166342817956704598.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_seqSub.dl_15166342817956704598.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[2] jmod.dl, &#10;\forall int divNum; \forall int divDenom;&#10;  jmod(divNum,divDenom) =&#10;    divNum + jdiv(divNum,divDenom)*(-1)*divDenom&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.089">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /home/runner/work/key/key/key.core/build/resources/test/de/uka/ilkd/key/smt/newsmt2/SMT_lemma_jmod.dl.proof; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /home/runner/work/key/key/key.core/build/resources/test/de/uka/ilkd/key/smt/newsmt2/SMT_lemma_jmod.dl.proof; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[3] seqGetOutside.dl, &#10;    \forall int i; \forall Seq s; ( i &lt; 0 | i &gt;= seqLen(s) -&gt; any::seqGet(s, i)&lt;&lt;Trigger&gt;&gt; = seqGetOutside )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.035">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /home/runner/work/key/key/key.core/build/resources/test/de/uka/ilkd/key/smt/newsmt2/SMT_lemma_seqGetOutside.dl.proof; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /home/runner/work/key/key/key.core/build/resources/test/de/uka/ilkd/key/smt/newsmt2/SMT_lemma_seqGetOutside.dl.proof; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[4] singleton.dl, &#10;  \forall Object o; \forall Field f; \forall Object o2; \forall Field f2;&#10;    ( elementOf(o,f, singleton(o2,f2))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;&#10;      o = o2 &amp; f = f2 )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.051">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_singleton.dl_12750673786528604748.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_singleton.dl_12750673786528604748.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[5] allFields.dl, &#10;  \forall Object o; \forall Field f; \forall Object o2;&#10;    ( elementOf(o,f, allFields(o2))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;&#10;       o = o2 )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.04">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_allFields.dl_15171640023873992192.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_allFields.dl_15171640023873992192.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[6] create.dl, &#10;  \forall Heap h; \forall Object o; \forall Object o2; \forall Field f;&#10;      any::select(create(h, o), o2, f)&lt;&lt;Trigger&gt;&gt; =&#10;         \if(o = o2 &amp; o != null &amp; f = java.lang.Object::&lt;created&gt;)&#10;         \then(TRUE)&#10;         \else(any::select(h, o2, f))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.046">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_create.dl_18150033845951210764.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_create.dl_18150033845951210764.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[7] seqEmpty.dl, &#10;    seqLen(seqEmpty) = 0&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.045">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_seqEmpty.dl_6240550378446733717.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_seqEmpty.dl_6240550378446733717.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[8] union.dl, &#10;  \forall Object o; \forall Field f; \forall LocSet l1; \forall LocSet l2;&#10;     ( elementOf(o, f, union(l1, l2))&lt;&lt;Trigger&gt;&gt; &lt;-&gt; elementOf(o,f,l1) | elementOf(o,f,l2) )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.035">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_union.dl_4012273366884799890.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_union.dl_4012273366884799890.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[9] seqConcat.dl.2, &#10;    \forall Seq s1; \forall Seq s2; seqLen(seqConcat(s1,s2)&lt;&lt;Trigger&gt;&gt;) = seqLen(s1) + seqLen(s2)&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.059">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_seqConcat.dl.2_4120195193979191126.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_seqConcat.dl.2_4120195193979191126.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[10] wellFormed.dl, &#10;  \forall Heap h; \forall Object o; \forall Field f; (wellFormed(h) -&gt;&#10;      boolean::select(h, (java.lang.Object::select(h, o, f))&lt;&lt;Trigger&gt;&gt;, java.lang.Object::&lt;created&gt;) = TRUE&#10;    | (java.lang.Object::select(h, o, f)) = null)&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.037">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_wellFormed.dl_1612792608759465462.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_wellFormed.dl_1612792608759465462.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[11] jdiv.dl, &#10;\forall int divNum; \forall int divDenom;&#10;  jdiv(divNum,divDenom) =&#10;         \if (divNum &gt;= 0)&#10;         \then (div(divNum,divDenom))&#10;         \else (div(divNum*(-1),divDenom)*(-1))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.036">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /home/runner/work/key/key/key.core/build/resources/test/de/uka/ilkd/key/smt/newsmt2/SMT_lemma_jdiv.dl.proof; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /home/runner/work/key/key/key.core/build/resources/test/de/uka/ilkd/key/smt/newsmt2/SMT_lemma_jdiv.dl.proof; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[12] empty.dl, &#10;  \forall Object o; \forall Field f; ( elementOf(o,f,empty)&lt;&lt;Trigger&gt;&gt; &lt;-&gt; false )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.035">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_empty.dl_16372571515634947948.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_empty.dl_16372571515634947948.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[13] allLocs.dl, &#10;  \forall Object o; \forall Field f; ( elementOf(o,f,allLocs)&lt;&lt;Trigger&gt;&gt; &lt;-&gt; true )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.051">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_allLocs.dl_14812744602484356833.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_allLocs.dl_14812744602484356833.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[14] arrayRange.dl, &#10;  \forall Object o; \forall Object o2; \forall Field f; \forall int lo; \forall int hi;&#10;    (elementOf(o,f, arrayRange(o2, lo, hi))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;&#10;      o = o2 &amp; \exists int iv; (f = arr(iv) &amp; lo &lt;= iv &amp; iv &lt;= hi))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.052">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_arrayRange.dl_18343372275542742584.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_arrayRange.dl_18343372275542742584.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[15] seqConcat.dl, &#10;    \forall int i; \forall Seq s1; \forall Seq s2; ( 0 &lt;= i &amp; i &lt; seqLen(s1) + seqLen(s2) -&gt;&#10;        any::seqGet(seqConcat(s1, s2), i) =&#10;            \if (i &lt; seqLen(s1)) \then (any::seqGet(s1, i)) \else (any::seqGet(s2, i-seqLen(s1))))&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.055">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_seqConcat.dl_10393646817069193496.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_seqConcat.dl_10393646817069193496.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[16] seqLen.dl, &#10;    \forall Seq s; seqLen(s)&lt;&lt;Trigger&gt;&gt; &gt;= 0&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.034">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_seqLen.dl_15769202392345237817.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_seqLen.dl_15769202392345237817.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 146 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 155 more
</failure>
  </testcase>
  <testcase name="[17] length.dl, &#10;    \forall Object o; length(o) &gt;= 0&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.05">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_length.dl_5615599617836323148.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_length.dl_5615599617836323148.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <testcase name="[18] freshLocs.dl, &#10;  \forall Heap h; \forall Object o; \forall Field f;&#10;     ( elementOf(o,f,freshLocs(h))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;&#10;        o != null &amp; !boolean::select(h,o,java.lang.Object::&lt;created&gt;)=TRUE )&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.037">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_freshLocs.dl_8032706891129272859.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_freshLocs.dl_8032706891129272859.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <testcase name="[19] anon.dl, &#10;    \forall Heap h; \forall Object o; \forall Field f; \forall Heap h2; \forall LocSet ls;&#10;      any::select(anon(h, ls, h2), o, f)&lt;&lt;Trigger&gt;&gt; =&#10;         \if(elementOf(o, f, ls) &amp; f != java.lang.Object::&lt;created&gt;&#10;           | elementOf(o, f, freshLocs(h)))&#10;         \then(any::select(h2, o, f))&#10;         \else(any::select(h, o, f))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.048">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_anon.dl_6108690900244946621.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_anon.dl_6108690900244946621.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <testcase name="[20] memset.dl, &#10;    \forall Heap h; \forall LocSet s; \forall any x; \forall Object o; \forall Field f;&#10;      any::select(memset(h, s, x), o, f)&lt;&lt;Trigger&gt;&gt; =&#10;         \if(elementOf(o, f, s) &amp; f != java.lang.Object::&lt;created&gt;)&#10;         \then(x)&#10;         \else(any::select(h, o, f))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.041">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_memset.dl_12155270136437411896.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_memset.dl_12155270136437411896.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <testcase name="[21] store.dl, &#10;    \forall Heap h; \forall Object o; \forall Field f; \forall Object o2; \forall Field f2; \forall any v;&#10;      any::select(store(h,o,f,v), o2, f2)&lt;&lt;Trigger&gt;&gt; =&#10;         \if(o = o2 &amp; f = f2 &amp; f != java.lang.Object::&lt;created&gt;)&#10;         \then(v)&#10;         \else(any::select(h, o2, f2))&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.033">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_store.dl_15479550830407670266.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_store.dl_15479550830407670266.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <testcase name="[22] seqSub.dl.2, &#10;    \forall Seq seq;&#10;    \forall int from;&#10;    \forall int to;&#10;        seqLen(seqSub(seq, from, to)&lt;&lt;Trigger&gt;&gt;)&#10;      = \if(from &lt; to)\then(to - from)\else(0)&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.053">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_seqSub.dl.2_3071516213806582352.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_seqSub.dl.2_3071516213806582352.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <testcase name="[23] seqSingleton.dl, &#10;    \forall any x; any::seqGet(seqSingleton(x)&lt;&lt;Trigger&gt;&gt;, 0) = x&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.036">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_seqSingleton.dl_5448551109706413575.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_seqSingleton.dl_5448551109706413575.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <testcase name="[24] seqSingleton.dl.2, &#10;    \forall any x; seqLen(seqSingleton(x)&lt;&lt;Trigger&gt;&gt;) = 1&#10;&#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.05">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_seqSingleton.dl.2_11183863175383133273.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_seqSingleton.dl.2_11183863175383133273.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <testcase name="[25] null.dl, &#10;     \forall any x; ((Null::instance(x))&lt;&lt;Trigger&gt;&gt; = TRUE -&gt; x = null) &#10;" classname="de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest" time="0.04">
    <failure message="line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10; (file: /tmp/SMT_lemma_null.dl_6913695261430160907.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 135:44 mismatched input ')' expecting {'(', '{'}&#10;line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 141:41 mismatched input ')' expecting {'(', '{'}&#10;line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 148:35 mismatched input '=' expecting {'(', '{'}&#10;line 150:38 mismatched input '}' expecting {'(', '{'}&#10;line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 155:35 mismatched input '=' expecting {'(', '{'}&#10;line 157:38 mismatched input '}' expecting {'(', '{'}&#10;line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 163:30 mismatched input '=' expecting {'(', '{'}&#10;line 165:38 mismatched input '}' expecting {'(', '{'}&#10;line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 171:30 mismatched input '=' expecting {'(', '{'}&#10;line 173:38 mismatched input '}' expecting {'(', '{'}&#10;line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 179:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 181:42 mismatched input '}' expecting {'(', '{'}&#10;line 182:39 mismatched input '}' expecting {'(', '{'}&#10;line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 188:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 190:42 mismatched input '}' expecting {'(', '{'}&#10;line 191:39 mismatched input '}' expecting {'(', '{'}&#10;line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 198:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 200:42 mismatched input '}' expecting {'(', '{'}&#10;line 201:39 mismatched input '}' expecting {'(', '{'}&#10;line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 208:32 mismatched input '&amp;' expecting {'(', '{'}&#10;line 210:42 mismatched input '}' expecting {'(', '{'}&#10;line 211:39 mismatched input '}' expecting {'(', '{'}&#10;line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 218:31 mismatched input ')' expecting {'(', '{'}&#10;line 220:44 mismatched input ')' expecting {'(', '{'}&#10;line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 225:31 mismatched input ')' expecting {'(', '{'}&#10;line 227:44 mismatched input ')' expecting {'(', '{'}&#10;line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 233:31 mismatched input ')' expecting {'(', '{'}&#10;line 237:42 mismatched input '}' expecting {'(', '{'}&#10;line 238:34 mismatched input '}' expecting {'(', '{'}&#10;line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 239:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 240:25 mismatched input ')' expecting {'(', '{'}&#10;line 240:56 mismatched input ')' expecting {'(', '{'}&#10;line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 245:31 mismatched input ')' expecting {'(', '{'}&#10;line 248:45 mismatched input '}' expecting {'(', '{'}&#10;line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 249:38 mismatched input ')' expecting {'(', '{'}&#10;line 250:42 mismatched input '}' expecting {'(', '{'}&#10;line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 251:33 mismatched input '-&gt;' expecting {'(', '{'}&#10;line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}&#10;line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 255:31 mismatched input ')' expecting {'(', '{'}&#10;line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}&#10;line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}&#10;)" type="de.uka.ilkd.key.proof.io.ProblemLoaderException">line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
 (file: /tmp/SMT_lemma_null.dl_6913695261430160907.key; caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}
)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:221)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:251)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:224)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:184)
	at app//de.uka.ilkd.key.control.KeYEnvironment.load(KeYEnvironment.java:261)
	at app//de.uka.ilkd.key.smt.newsmt2.ProveSMTLemmasTest.testSMTLemmaSoundness(ProveSMTLemmasTest.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at java.base@11.0.18/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)
	at java.base@11.0.18/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base@11.0.18/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base@11.0.18/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@11.0.18/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)
	at app//org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.18/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.18/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.18/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.18/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: de.uka.ilkd.key.proof.init.ProofInputException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:210)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:177)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readIncludes(ProblemInitializer.java:188)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.readEnvInput(ProblemInitializer.java:325)
	at app//de.uka.ilkd.key.proof.init.ProblemInitializer.prepare(ProblemInitializer.java:449)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.createInitConfig(AbstractProblemLoader.java:518)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.loadEnvironment(AbstractProblemLoader.java:288)
	at app//de.uka.ilkd.key.proof.io.AbstractProblemLoader.load(AbstractProblemLoader.java:252)
	at app//de.uka.ilkd.key.control.AbstractUserInterfaceControl.load(AbstractUserInterfaceControl.java:209)
	... 145 more
Caused by: de.uka.ilkd.key.util.parsing.SyntaxErrorReporter$ParserException: line 135:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 135:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 135:44 mismatched input ')' expecting {'(', '{'}
line 141:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 141:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 141:41 mismatched input ')' expecting {'(', '{'}
line 148:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 148:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 148:35 mismatched input '=' expecting {'(', '{'}
line 150:38 mismatched input '}' expecting {'(', '{'}
line 155:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 155:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 155:35 mismatched input '=' expecting {'(', '{'}
line 157:38 mismatched input '}' expecting {'(', '{'}
line 163:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 163:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 163:30 mismatched input '=' expecting {'(', '{'}
line 165:38 mismatched input '}' expecting {'(', '{'}
line 171:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 171:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 171:30 mismatched input '=' expecting {'(', '{'}
line 173:38 mismatched input '}' expecting {'(', '{'}
line 179:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 179:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 179:32 mismatched input '&amp;' expecting {'(', '{'}
line 181:42 mismatched input '}' expecting {'(', '{'}
line 182:39 mismatched input '}' expecting {'(', '{'}
line 188:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 188:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 188:32 mismatched input '&amp;' expecting {'(', '{'}
line 190:42 mismatched input '}' expecting {'(', '{'}
line 191:39 mismatched input '}' expecting {'(', '{'}
line 198:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 198:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 198:32 mismatched input '&amp;' expecting {'(', '{'}
line 200:42 mismatched input '}' expecting {'(', '{'}
line 201:39 mismatched input '}' expecting {'(', '{'}
line 208:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 208:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 208:32 mismatched input '&amp;' expecting {'(', '{'}
line 210:42 mismatched input '}' expecting {'(', '{'}
line 211:39 mismatched input '}' expecting {'(', '{'}
line 218:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 218:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 218:31 mismatched input ')' expecting {'(', '{'}
line 220:44 mismatched input ')' expecting {'(', '{'}
line 225:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 225:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 225:31 mismatched input ')' expecting {'(', '{'}
line 227:44 mismatched input ')' expecting {'(', '{'}
line 233:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 233:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 233:31 mismatched input ')' expecting {'(', '{'}
line 237:42 mismatched input '}' expecting {'(', '{'}
line 238:34 mismatched input '}' expecting {'(', '{'}
line 239:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 239:33 mismatched input '-&gt;' expecting {'(', '{'}
line 240:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 240:25 mismatched input ')' expecting {'(', '{'}
line 240:56 mismatched input ')' expecting {'(', '{'}
line 245:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 245:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 245:31 mismatched input ')' expecting {'(', '{'}
line 248:45 mismatched input '}' expecting {'(', '{'}
line 249:8 extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'}
line 249:38 mismatched input ')' expecting {'(', '{'}
line 250:42 mismatched input '}' expecting {'(', '{'}
line 251:28 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 251:33 mismatched input '-&gt;' expecting {'(', '{'}
line 255:14 mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL}
line 255:27 extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'}
line 255:31 mismatched input ')' expecting {'(', '{'}
line 258:52 extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'}
line 258:54 mismatched input 'then' expecting {&lt;EOF&gt;, '\problem', '\chooseContract', '\proofObligation', '\proof'}

	at app//de.uka.ilkd.key.util.parsing.SyntaxErrorReporter.throwException(SyntaxErrorReporter.java:89)
	at app//de.uka.ilkd.key.nparser.ParsingFacade.parseFile(ParsingFacade.java:125)
	at app//de.uka.ilkd.key.proof.io.KeYFile.getParseContext(KeYFile.java:160)
	at app//de.uka.ilkd.key.proof.io.KeYFile.readIncludes(KeYFile.java:206)
	... 154 more
</failure>
  </testcase>
  <system-out><![CDATA[303240     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303240     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303240     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303241     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303241     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303241     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303241     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303241     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303241     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303241     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303242     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303242     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303242     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303242     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303242     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303242     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303242     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303242     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303243     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303244     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303244     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303244     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303244     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303244     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303244     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303244     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303244     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303245     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303246     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303246     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303246     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303246     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303246     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303246     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303246     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303246     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303247     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303248     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303249     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303249     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303249     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303249     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303338     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303339     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303339     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303339     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303339     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303339     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303340     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303340     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303340     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303340     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303340     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303340     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303340     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303340     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303341     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303341     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303341     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303341     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303341     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303341     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303341     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303341     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303342     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303342     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303342     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303342     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303342     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303342     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303342     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303342     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303377     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303377     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303377     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303377     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303378     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303378     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303378     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303378     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303378     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303378     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303378     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303378     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303379     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303379     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303379     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303379     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303379     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303379     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303379     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303379     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303380     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303380     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303380     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303380     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303380     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303380     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303380     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303380     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303381     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303382     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303382     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303382     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303382     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303382     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303382     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303382     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303382     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303413     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303414     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303414     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303414     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303415     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303415     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303415     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303422     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303423     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303423     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303423     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303423     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303423     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303423     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303423     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303423     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303424     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303424     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303424     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303424     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303424     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303424     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303424     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303424     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303425     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303426     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303426     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303426     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303426     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303434     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303434     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303435     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303435     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303435     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303435     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303435     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303435     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303435     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303435     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303436     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303437     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303438     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303471     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303471     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303471     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303471     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303471     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303472     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303472     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303472     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303472     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303472     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303472     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303472     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303472     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303473     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303473     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303473     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303473     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303473     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303473     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303473     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303473     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303474     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303474     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303474     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303474     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303474     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303474     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303474     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303474     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303475     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303476     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303477     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303477     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303477     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303477     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303477     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303477     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303477     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303477     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303478     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303479     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303480     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303506     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303506     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303506     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303507     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303507     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303507     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303507     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303507     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303507     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303507     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303508     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303509     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303510     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303510     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303510     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303510     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303510     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303510     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303510     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303510     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303511     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303511     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303511     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303511     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303511     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303511     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303511     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303511     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303512     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303513     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303514     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303514     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303514     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303514     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303514     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303514     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303514     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303515     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303515     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303515     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303515     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303526     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303564     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303564     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303565     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303565     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303565     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303565     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303565     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303565     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303565     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303566     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303566     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303566     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303566     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303566     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303566     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303567     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303568     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303568     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303568     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303568     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303568     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303568     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303568     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303568     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303569     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303569     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303569     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303569     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303569     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303569     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303569     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303569     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303570     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303570     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303570     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303570     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303570     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303570     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303570     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303570     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303571     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303572     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303573     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303573     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303573     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303573     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303573     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303573     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303573     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303573     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303601     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303601     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303601     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303601     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303602     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303602     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303602     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303602     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303602     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303602     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303602     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303602     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303603     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303603     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303603     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303603     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303603     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303603     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303603     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303603     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303604     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303604     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303604     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303604     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303604     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303604     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303604     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303604     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303605     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303606     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303606     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303606     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303606     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303606     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303606     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303606     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303606     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303607     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303608     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303608     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303608     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303608     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303608     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303608     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303608     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303609     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303610     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303610     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303610     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303610     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303661     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303662     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303662     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303662     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303662     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303663     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303663     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303663     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303663     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303663     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303663     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303664     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303664     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303664     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303664     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303664     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303664     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303664     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303664     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303665     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303666     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303666     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303666     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303666     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303666     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303666     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303666     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303666     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303667     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303668     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303668     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303668     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303668     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303668     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303668     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303668     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303668     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303669     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303670     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303670     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303670     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303670     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303670     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303670     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303670     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303670     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303671     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303671     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303671     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303696     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303697     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303697     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303697     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303697     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303697     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303697     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303697     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303698     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303698     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303698     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303698     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303698     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303698     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303698     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303698     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303699     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303700     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303700     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303700     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303700     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303700     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303700     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303700     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303700     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303701     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303704     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303704     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303704     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303704     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303704     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303704     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303704     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303705     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303706     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303706     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303706     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303706     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303706     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303706     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303706     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303706     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303707     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303707     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303707     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303707     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303707     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303707     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303707     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303707     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303747     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303748     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303748     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303748     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303748     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303748     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303748     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303748     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303748     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303749     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303749     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303749     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303749     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303749     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303749     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303749     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303749     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303750     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303750     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303750     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303750     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303750     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303750     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303750     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303751     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303752     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303752     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303752     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303752     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303752     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303752     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303752     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303752     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303753     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303753     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303753     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303753     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303753     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303753     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303753     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303753     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303754     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303754     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303755     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303755     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303755     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303755     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303755     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303755     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303755     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303755     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303756     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303756     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303756     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303756     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303756     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303756     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303756     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303756     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303757     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303757     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303757     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303757     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303757     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303757     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303757     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303785     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303785     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303785     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303786     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303786     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303786     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303786     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303786     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303786     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303786     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303787     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303788     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303788     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303788     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303788     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303788     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303788     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303788     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303788     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303789     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303790     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303790     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303790     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303790     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303790     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303790     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303790     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303790     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303791     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303792     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303793     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303794     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303794     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303794     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303833     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303833     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303834     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303834     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303834     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303834     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303834     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303834     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303835     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303836     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303836     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303836     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303836     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303836     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303836     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303836     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303836     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303837     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303837     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303837     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303837     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303837     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303837     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303837     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303837     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303838     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303838     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303838     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303838     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303838     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303838     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303838     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303838     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303839     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303840     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303841     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303842     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303842     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303842     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303842     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303842     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303842     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303886     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303889     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303889     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303889     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303889     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303889     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303889     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303889     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303890     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303890     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303890     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303890     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303890     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303890     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303890     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303891     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303891     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303891     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303891     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303891     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303891     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303891     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303891     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303892     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303893     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303894     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303895     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303896     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303897     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303897     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303897     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303897     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303897     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303897     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303943     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303946     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303946     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303947     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303947     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303947     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303947     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303947     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303947     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303947     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303947     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303948     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303948     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303948     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303948     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303948     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303948     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303948     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303948     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303949     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303950     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303950     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303950     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303950     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303950     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303950     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303950     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303950     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303951     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303952     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303952     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303952     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303952     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303952     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303952     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303952     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303952     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303953     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303954     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303955     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303955     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
303983     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303984     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
303984     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
303984     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303984     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
303984     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
303984     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303984     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
303984     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
303985     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
303985     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303985     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
303985     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
303985     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
303985     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303985     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
303985     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
303986     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
303986     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303986     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
303986     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
303986     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
303986     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303986     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
303986     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303987     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
303988     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
303988     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
303988     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
303988     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303988     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
303988     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
303988     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
303988     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
303989     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
303990     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
303991     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
303992     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
303992     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
303992     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
303992     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
303992     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304024     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304026     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304027     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304027     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304027     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304027     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304027     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304027     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304027     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304027     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304028     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304028     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304028     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304028     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304028     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304028     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304028     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304028     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304029     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304029     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304029     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304029     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304029     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304029     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304030     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304030     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304030     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304030     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304030     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304030     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304030     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304030     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304031     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304038     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304038     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304039     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304039     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304039     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304039     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304039     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304039     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304039     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304039     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304040     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304041     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304042     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304043     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304043     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304043     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304043     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304070     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304071     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304071     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304071     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304071     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304071     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304071     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304071     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304071     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304072     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304072     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304072     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304072     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304072     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304072     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304072     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304072     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304073     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304074     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304075     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304075     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304075     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304075     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304075     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304075     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304075     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304075     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304076     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304077     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304078     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304079     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304079     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304079     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304106     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304106     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304106     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304106     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304106     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304107     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304107     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304107     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304107     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304107     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304107     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304107     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304107     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304108     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304109     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304109     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304109     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304109     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304109     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304109     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304109     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304109     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304110     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304110     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304110     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304110     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304110     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304110     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304110     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304110     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304111     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304112     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304113     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304114     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304114     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304114     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304114     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304114     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304114     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304114     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304114     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304166     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304167     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304167     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304167     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304167     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304167     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304167     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304167     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304168     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304169     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304169     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304169     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304169     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304169     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304169     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304169     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304169     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304170     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304171     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304172     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304172     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304172     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304172     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304172     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304172     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304172     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304172     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304173     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304174     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304174     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304174     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304174     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304174     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304174     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304174     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304174     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304175     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304175     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304175     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304175     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304175     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304200     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304200     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304201     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304201     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304201     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304201     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304201     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304201     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304201     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304201     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304202     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304202     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304202     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304202     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304202     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304202     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304202     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304202     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304203     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304204     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304204     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304204     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304204     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304204     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304204     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304204     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304204     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304205     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304206     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304207     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304208     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304209     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304209     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304209     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304253     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304253     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304253     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304253     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304254     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304254     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304254     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304254     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304254     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304254     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304254     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304254     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304255     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304255     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304255     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304255     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304255     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304255     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304255     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304255     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304256     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304257     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304258     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304259     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304260     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304261     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304290     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304290     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304291     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304291     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304291     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304291     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304291     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304291     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304291     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304291     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304292     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304292     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304292     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304292     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304292     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304292     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304292     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304292     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304293     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304294     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304294     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304294     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304294     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304294     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304294     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304294     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304294     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304295     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304296     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304297     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304298     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304299     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304299     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304299     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304343     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304344     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304345     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304346     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304347     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304348     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304349     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304350     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304351     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304352     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
304383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@745,3563:3573='\ifExintVar',<188>,135:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@748,3576:3576='(',<146>,135:27] (rulesOrAxioms, decls, file) 
304383     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:135:44: mismatched input ')' expecting {'(', '{'} [@754,3593:3593=')',<147>,135:44] (taclet, rulesOrAxioms, decls, file) 
304384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@780,3716:3726='\ifExintVar',<188>,141:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@783,3729:3729='(',<146>,141:27] (rulesOrAxioms, decls, file) 
304384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:141:41: mismatched input ')' expecting {'(', '{'} [@789,3743:3743=')',<147>,141:41] (taclet, rulesOrAxioms, decls, file) 
304384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@819,3896:3906='\ifExintVar',<188>,148:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@822,3909:3909='(',<146>,148:27] (rulesOrAxioms, decls, file) 
304384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:148:35: mismatched input '=' expecting {'(', '{'} [@825,3917:3917='=',<159>,148:35] (taclet, rulesOrAxioms, decls, file) 
304384     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:150:38: mismatched input '}' expecting {'(', '{'} [@859,4023:4023='}',<149>,150:38] (taclet, rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@877,4109:4119='\ifExintVar',<188>,155:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@880,4122:4122='(',<146>,155:27] (rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:155:35: mismatched input '=' expecting {'(', '{'} [@883,4130:4130='=',<159>,155:35] (taclet, rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:157:38: mismatched input '}' expecting {'(', '{'} [@917,4230:4230='}',<149>,157:38] (taclet, rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@939,4350:4360='\ifExintVar',<188>,163:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@942,4363:4363='(',<146>,163:27] (rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:163:30: mismatched input '=' expecting {'(', '{'} [@945,4366:4366='=',<159>,163:30] (taclet, rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:165:38: mismatched input '}' expecting {'(', '{'} [@979,4477:4477='}',<149>,165:38] (taclet, rulesOrAxioms, decls, file) 
304385     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1001,4604:4614='\ifExintVar',<188>,171:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1004,4617:4617='(',<146>,171:27] (rulesOrAxioms, decls, file) 
304386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:171:30: mismatched input '=' expecting {'(', '{'} [@1007,4620:4620='=',<159>,171:30] (taclet, rulesOrAxioms, decls, file) 
304386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:173:38: mismatched input '}' expecting {'(', '{'} [@1041,4725:4725='}',<149>,173:38] (taclet, rulesOrAxioms, decls, file) 
304386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1063,4848:4858='\ifExintVar',<188>,179:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1066,4861:4861='(',<146>,179:27] (rulesOrAxioms, decls, file) 
304386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:179:32: mismatched input '&' expecting {'(', '{'} [@1069,4866:4866='&',<156>,179:32] (taclet, rulesOrAxioms, decls, file) 
304386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:181:42: mismatched input '}' expecting {'(', '{'} [@1109,4985:4985='}',<149>,181:42] (taclet, rulesOrAxioms, decls, file) 
304386     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:182:39: mismatched input '}' expecting {'(', '{'} [@1122,5030:5030='}',<149>,182:39] (taclet, rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1146,5149:5159='\ifExintVar',<188>,188:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1149,5162:5162='(',<146>,188:27] (rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:188:32: mismatched input '&' expecting {'(', '{'} [@1152,5167:5167='&',<156>,188:32] (taclet, rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:190:42: mismatched input '}' expecting {'(', '{'} [@1192,5280:5280='}',<149>,190:42] (taclet, rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:191:39: mismatched input '}' expecting {'(', '{'} [@1205,5325:5325='}',<149>,191:39] (taclet, rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1233,5475:5485='\ifExintVar',<188>,198:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1236,5488:5488='(',<146>,198:27] (rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:198:32: mismatched input '&' expecting {'(', '{'} [@1239,5493:5493='&',<156>,198:32] (taclet, rulesOrAxioms, decls, file) 
304387     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:200:42: mismatched input '}' expecting {'(', '{'} [@1279,5612:5612='}',<149>,200:42] (taclet, rulesOrAxioms, decls, file) 
304388     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:201:39: mismatched input '}' expecting {'(', '{'} [@1292,5657:5657='}',<149>,201:39] (taclet, rulesOrAxioms, decls, file) 
304388     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1320,5817:5827='\ifExintVar',<188>,208:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304388     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1323,5830:5830='(',<146>,208:27] (rulesOrAxioms, decls, file) 
304388     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:208:32: mismatched input '&' expecting {'(', '{'} [@1326,5835:5835='&',<156>,208:32] (taclet, rulesOrAxioms, decls, file) 
304388     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:210:42: mismatched input '}' expecting {'(', '{'} [@1366,5948:5948='}',<149>,210:42] (taclet, rulesOrAxioms, decls, file) 
304388     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:211:39: mismatched input '}' expecting {'(', '{'} [@1379,5993:5993='}',<149>,211:39] (taclet, rulesOrAxioms, decls, file) 
304388     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1407,6146:6156='\ifExintVar',<188>,218:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304388     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1410,6159:6159='(',<146>,218:27] (rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:218:31: mismatched input ')' expecting {'(', '{'} [@1412,6163:6163=')',<147>,218:31] (taclet, rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:220:44: mismatched input ')' expecting {'(', '{'} [@1444,6275:6275=')',<147>,220:44] (taclet, rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1471,6389:6399='\ifExintVar',<188>,225:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1474,6402:6402='(',<146>,225:27] (rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:225:31: mismatched input ')' expecting {'(', '{'} [@1476,6406:6406=')',<147>,225:31] (taclet, rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:227:44: mismatched input ')' expecting {'(', '{'} [@1508,6509:6509=')',<147>,227:44] (taclet, rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1539,6656:6666='\ifExintVar',<188>,233:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1542,6669:6669='(',<146>,233:27] (rulesOrAxioms, decls, file) 
304389     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:233:31: mismatched input ')' expecting {'(', '{'} [@1544,6673:6673=')',<147>,233:31] (taclet, rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:237:42: mismatched input '}' expecting {'(', '{'} [@1586,6850:6850='}',<149>,237:42] (taclet, rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:238:34: mismatched input '}' expecting {'(', '{'} [@1599,6891:6891='}',<149>,238:34] (taclet, rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1608,6925:6925='(',<146>,239:28] (rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:239:33: mismatched input '->' expecting {'(', '{'} [@1611,6930:6931='->',<158>,239:33] (taclet, rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1626,6979:6990='\replacewith',<105>,240:8] (rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:25: mismatched input ')' expecting {'(', '{'} [@1629,6996:6996=')',<147>,240:25] (taclet, rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:240:56: mismatched input ')' expecting {'(', '{'} [@1642,7027:7027=')',<147>,240:56] (taclet, rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1658,7109:7119='\ifExintVar',<188>,245:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304390     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1661,7122:7122='(',<146>,245:27] (rulesOrAxioms, decls, file) 
304391     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:245:31: mismatched input ')' expecting {'(', '{'} [@1663,7126:7126=')',<147>,245:31] (taclet, rulesOrAxioms, decls, file) 
304391     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:248:45: mismatched input '}' expecting {'(', '{'} [@1696,7268:7268='}',<149>,248:45] (taclet, rulesOrAxioms, decls, file) 
304391     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:8: extraneous input '\replacewith' expecting {'\lemma', '}', IDENT, '/*!'} [@1701,7284:7295='\replacewith',<105>,249:8] (rulesOrAxioms, decls, file) 
304391     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:249:38: mismatched input ')' expecting {'(', '{'} [@1708,7314:7314=')',<147>,249:38] (taclet, rulesOrAxioms, decls, file) 
304391     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:250:42: mismatched input '}' expecting {'(', '{'} [@1731,7381:7381='}',<149>,250:42] (taclet, rulesOrAxioms, decls, file) 
304391     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:28: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1741,7416:7416='(',<146>,251:28] (rulesOrAxioms, decls, file) 
304391     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:251:33: mismatched input '->' expecting {'(', '{'} [@1744,7421:7422='->',<158>,251:33] (taclet, rulesOrAxioms, decls, file) 
304391     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:14: mismatched input '\ifExintVar' expecting {MODALITY, FORALL, EXISTS, '\if', '\ifEx', 'true', 'false', '(', '{', '@', NOT, SEQARROW, '-', STRING_LITERAL, CHAR_LITERAL, BIN_LITERAL, HEX_LITERAL, IDENT, INT_LITERAL, FLOAT_LITERAL, DOUBLE_LITERAL, REAL_LITERAL} [@1765,7506:7516='\ifExintVar',<188>,255:14] (termorseq, taclet, rulesOrAxioms, decls, file) 
304392     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:27: extraneous input '(' expecting {'\lemma', '}', IDENT, '/*!'} [@1768,7519:7519='(',<146>,255:27] (rulesOrAxioms, decls, file) 
304392     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:255:31: mismatched input ')' expecting {'(', '{'} [@1770,7523:7523=')',<147>,255:31] (taclet, rulesOrAxioms, decls, file) 
304392     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:52: extraneous input '0' expecting {'\lemma', '}', IDENT, '/*!'} [@1809,7667:7667='0',<184>,258:52] (rulesOrAxioms, decls, file) 
304392     WARN  Test worker     d.u.i.k.n.KeYParser       [syntax-error] file:/home/runner/work/key/key/key.core/build/resources/main/de/uka/ilkd/key/proof/rules/ifThenElseRules.key:258:54: mismatched input 'then' expecting {<EOF>, '\problem', '\chooseContract', '\proofObligation', '\proof'} [@1811,7669:7672='then',<183>,258:54] (file) 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
