<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" tests="14" skipped="0" failures="0" errors="0" timestamp="2023-06-09T14:24:55" hostname="fv-az553-785" time="0.684">
  <properties/>
  <testcase name="[1] 1+1" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.043"/>
  <testcase name="[2] 1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.092"/>
  <testcase name="[3] \result" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.042"/>
  <testcase name="[4] this" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.041"/>
  <testcase name="[5] (\forall int i; i + i == 2)" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.048"/>
  <testcase name="[6] (\exists int i; i%2 == 2)" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.05"/>
  <testcase name="[7] (\exists int i; 0 &lt; i &lt; 2; i%2 == 2)" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.045"/>
  <testcase name="[8] 1 &lt; 2 &lt; 1+1+1" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.042"/>
  <testcase name="[9] 1+2*3" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.042"/>
  <testcase name="[10] (\infinite_union int i; \nothing)" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.048"/>
  <testcase name="[11] 1.f &lt; 2.f &lt; 3.f" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.045"/>
  <testcase name="[12] 1.f + 2.f" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.045"/>
  <testcase name="[13] 1. + 2" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.044"/>
  <testcase name="[14] 1f + 2d" classname="de.uka.ilkd.key.speclang.njml.ExpressionTranslatorTest" time="0.045"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[144781     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest add(Z(1(#)),Z(1(#)))(type: (type, sort): (\bigint,int)) 
144874     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(add(Z(1(#)),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#))),Z(1(#)))(type: (type, sort): (\bigint,int)) 
144921     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest result(type: KeYJavaType:null,any) 
144968     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest self(type: KeYJavaType:null,any) 
145015     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest all{i:int}(imp(inInt(i),equals(add(i,i),Z(2(#)))))(type: null) 
145062     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest exists{i:int}(and(inInt(i),equals(jmod(i,Z(2(#))),Z(2(#))))<<SC>>)(type: null) 
145113     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest exists{i:int}(and(and(and(lt(Z(0(#)),i),lt(i,Z(2(#)))),inInt(i)),equals(jmod(i,Z(2(#))),Z(2(#))))<<SC>>)(type: null) 
145146     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest and(lt(Z(1(#)),Z(2(#))),lt(Z(2(#)),add(add(Z(1(#)),Z(1(#))),Z(1(#)))))(type: null) 
145193     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest add(Z(1(#)),mul(Z(2(#)),Z(3(#))))(type: (type, sort): (\bigint,int)) 
145240     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest infiniteUnion{i:int}(if-then-else(inInt(i),empty,empty))(type: (type, sort): (\locset,LocSet)) 
145287     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest and(ltFloat(FP(6(1(2(3(5(3(5(6(0(1(#))))))))))),FP(4(2(8(1(4(7(3(7(0(1(#)))))))))))),ltFloat(FP(4(2(8(1(4(7(3(7(0(1(#))))))))))),FP(8(2(1(6(3(9(7(7(0(1(#)))))))))))))(type: null) 
145334     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest addFloat(FP(6(1(2(3(5(3(5(6(0(1(#))))))))))),FP(4(2(8(1(4(7(3(7(0(1(#))))))))))))(type: (type, sort): (float,float)) 
145381     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest addDouble(DFP(8(0(4(7(1(0(0(0(8(8(1(4(2(8(1(7(0(6(4(#)))))))))))))))))))),double::cast(Z(2(#))))(type: (type, sort): (double,double)) 
145427     DEBUG Test worker     d.u.i.k.s.n.ExpressionTranslatorTest addFloat(FP(6(1(2(3(5(3(5(6(0(1(#))))))))))),float::cast(Z(2(#))))(type: (type, sort): (float,float)) 
]]></system-err>
</testsuite>
