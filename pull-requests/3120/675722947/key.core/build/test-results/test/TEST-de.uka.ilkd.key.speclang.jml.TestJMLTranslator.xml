<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" tests="25" skipped="0" failures="0" errors="0" timestamp="2023-05-02T13:45:00" hostname="fv-az553-779" time="3.469">
  <properties/>
  <testcase name="testSimpleQuery()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="3.324"/>
  <testcase name="testTrueTerm()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.001"/>
  <testcase name="testOld()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.003"/>
  <testcase name="testHexLiteral()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.003"/>
  <testcase name="testForEx()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.009"/>
  <testcase name="testResultVar()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.002"/>
  <testcase name="testSumParsing()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.013"/>
  <testcase name="testBsumInt()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.008"/>
  <testcase name="testNonNullElements()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.004"/>
  <testcase name="testInfiniteUnion()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.012"/>
  <testcase name="testComplexExists()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.008"/>
  <testcase name="testLogicalExpression()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.007"/>
  <testcase name="testParenExpression()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.002"/>
  <testcase name="testComplexQueryResolving1()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.008"/>
  <testcase name="testComplexQueryResolving2()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.005"/>
  <testcase name="testComplexQueryResolving3()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.006"/>
  <testcase name="testCorrectImplicitThisResolution()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.007"/>
  <testcase name="testInfiniteUnion2()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.008"/>
  <testcase name="testForAll()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.004"/>
  <testcase name="testPrimitiveField()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.001"/>
  <testcase name="testSelfVar()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.001"/>
  <testcase name="testIsInitialized()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.001"/>
  <testcase name="testBsumBigInt()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.003"/>
  <testcase name="testSubtypeExpression()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.019"/>
  <testcase name="testStaticQueryResolving()" classname="de.uka.ilkd.key.speclang.jml.TestJMLTranslator" time="0.004"/>
  <system-out><![CDATA[825133     DEBUG Test worker     d.u.i.k.s.t.SLExceptionFactory JML translator warning: !!! Deprecation Warnung: You used \infinite_union in the functional syntax \infinite_union(...).
	This is deprecated and won't be valid in future versions of KeY.
	Please use \infinite_union as a binder instead: (\infinite_union var type; guard; store-ref-expr). 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
