<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.proof.proverules.ProveRulesTest" tests="196" skipped="0" failures="0" errors="0" timestamp="2023-03-13T01:32:19" hostname="fv-az574-287" time="941.107">
  <properties/>
  <testcase name="eqTermCut" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.596"/>
  <testcase name="equivAllRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.122"/>
  <testcase name="irrflConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.119"/>
  <testcase name="irrflConcrete2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.966"/>
  <testcase name="cancel_gtPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.946"/>
  <testcase name="cancel_gtNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.931"/>
  <testcase name="moduloIntIsInInt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.844"/>
  <testcase name="moduloLongIsInLong" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.776"/>
  <testcase name="moduloShortIsInShort" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.585"/>
  <testcase name="moduloByteIsInByte" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.638"/>
  <testcase name="moduloCharIsInChar" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.721"/>
  <testcase name="div_unique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.777"/>
  <testcase name="div_unique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.99"/>
  <testcase name="div_exists" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.132"/>
  <testcase name="div_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.842"/>
  <testcase name="jdiv_one" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.906"/>
  <testcase name="div_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.905"/>
  <testcase name="divResZero1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.971"/>
  <testcase name="divResZero2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.892"/>
  <testcase name="divResOne1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.846"/>
  <testcase name="divResOne2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.861"/>
  <testcase name="div_cancel1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.784"/>
  <testcase name="div_cancel2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.706"/>
  <testcase name="divAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.685"/>
  <testcase name="divMinus" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.821"/>
  <testcase name="divMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.622"/>
  <testcase name="divLeastDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.61"/>
  <testcase name="divLeastDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.593"/>
  <testcase name="divGreatestDPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.568"/>
  <testcase name="divGreatestDNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.547"/>
  <testcase name="divIncreasingPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.576"/>
  <testcase name="divIncreasingNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.818"/>
  <testcase name="jdiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.737"/>
  <testcase name="jdivPulloutMinusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.821"/>
  <testcase name="jdivPulloutMinusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.984"/>
  <testcase name="jdiv_uniquePosPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.955"/>
  <testcase name="jdiv_uniquePosNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.878"/>
  <testcase name="jdiv_uniqueNegPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.842"/>
  <testcase name="jdiv_uniqueNegNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.879"/>
  <testcase name="jdivMultDenom1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.019"/>
  <testcase name="jdivMultDenom2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.8"/>
  <testcase name="mod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.708"/>
  <testcase name="mod_lessDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.687"/>
  <testcase name="jmod_NumPos" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.887"/>
  <testcase name="jmod_NumNeg" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.936"/>
  <testcase name="jmod_geZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.918"/>
  <testcase name="jmodNumZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.724"/>
  <testcase name="jmod_pulloutminusNum" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.921"/>
  <testcase name="jmod_pulloutminusDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.88"/>
  <testcase name="jmodUnique1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.094"/>
  <testcase name="jmodUnique2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.134"/>
  <testcase name="intDivRem" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.859"/>
  <testcase name="jmodjmod" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.847"/>
  <testcase name="jmodDivisible" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.875"/>
  <testcase name="jmodDivisibleRep" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.841"/>
  <testcase name="jdivAddMultDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.165"/>
  <testcase name="jmodAltZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.791"/>
  <testcase name="jmodAddMultDenomZero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.62"/>
  <testcase name="polyDiv_zero" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.674"/>
  <testcase name="polyMod_ltdivDenom" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.767"/>
  <testcase name="bsum_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.651"/>
  <testcase name="bsum_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.821"/>
  <testcase name="bsum_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.873"/>
  <testcase name="bsum_num_of_bounds" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.011"/>
  <testcase name="bsum_num_of_bounds2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.926"/>
  <testcase name="bsum_induction_upper2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.858"/>
  <testcase name="bsum_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.737"/>
  <testcase name="bsum_induction_upper_concrete_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.762"/>
  <testcase name="bsum_induction_upper2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.738"/>
  <testcase name="bsum_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.809"/>
  <testcase name="bsum_induction_lower2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.861"/>
  <testcase name="bsum_induction_lower2_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.775"/>
  <testcase name="bsum_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.826"/>
  <testcase name="bsum_upper_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.861"/>
  <testcase name="bsum_lower_bound" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.786"/>
  <testcase name="bsum_positive_lower_bound_element" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.775"/>
  <testcase name="bsum_sub_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.709"/>
  <testcase name="bsum_less_same_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.715"/>
  <testcase name="bsum_equal_except_one_index" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.681"/>
  <testcase name="bsum_num_of_is_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.599"/>
  <testcase name="bsum_num_of_is_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.466"/>
  <testcase name="bsum_num_of_is_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.486"/>
  <testcase name="bsum_num_of_is_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.574"/>
  <testcase name="bsum_num_of_lt_max" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.704"/>
  <testcase name="bsum_num_of_lt_max2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.671"/>
  <testcase name="bsum_num_of_lt_max3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.769"/>
  <testcase name="bsum_num_of_lt_max4" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.795"/>
  <testcase name="bsum_num_of_gt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.851"/>
  <testcase name="bsum_num_of_gt0_alt" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.766"/>
  <testcase name="bsum_add_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.779"/>
  <testcase name="bprod_all_positive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.835"/>
  <testcase name="bprod_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.866"/>
  <testcase name="powConcrete0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.777"/>
  <testcase name="powConcrete1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.72"/>
  <testcase name="powSplitFactor" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.653"/>
  <testcase name="powAdd" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.887"/>
  <testcase name="powMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.884"/>
  <testcase name="powMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.914"/>
  <testcase name="powMonoConcreteRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.799"/>
  <testcase name="powPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.703"/>
  <testcase name="powPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.602"/>
  <testcase name="powGeq1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.75"/>
  <testcase name="pow2InIntLower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.545"/>
  <testcase name="pow2InIntUpper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.58"/>
  <testcase name="logSelfConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.415"/>
  <testcase name="log1Concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.244"/>
  <testcase name="logProduct" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.252"/>
  <testcase name="logTimesBaseConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.273"/>
  <testcase name="logProdIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.298"/>
  <testcase name="logProdIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.317"/>
  <testcase name="logPowIdentity" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.509"/>
  <testcase name="logPowIdentityConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.487"/>
  <testcase name="logPositive" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.324"/>
  <testcase name="logPositiveConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.519"/>
  <testcase name="logMono" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.683"/>
  <testcase name="logMonoConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.634"/>
  <testcase name="powLogLess" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.606"/>
  <testcase name="powLogMore2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.672"/>
  <testcase name="logLessThanPow" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.606"/>
  <testcase name="logLessThanPowConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.529"/>
  <testcase name="logSqueeze" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.643"/>
  <testcase name="ifthenelse_equals" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.604"/>
  <testcase name="ifthenelse_equals_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.677"/>
  <testcase name="ifthenelse_equals_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.565"/>
  <testcase name="disjointWithSingleton1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.33"/>
  <testcase name="disjointWithSingleton2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.373"/>
  <testcase name="disjointArrayRanges" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.378"/>
  <testcase name="disjointArrayRangeAllFields1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.298"/>
  <testcase name="disjointArrayRangeAllFields2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.254"/>
  <testcase name="seqSelfDefinition" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.297"/>
  <testcase name="seqOutsideValue" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.258"/>
  <testcase name="castedGetAny" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.31"/>
  <testcase name="seqGetAlphaCast" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.244"/>
  <testcase name="getOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.322"/>
  <testcase name="getOfSeqSingletonConcrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.685"/>
  <testcase name="getOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.718"/>
  <testcase name="getOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.737"/>
  <testcase name="getOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.919"/>
  <testcase name="lenOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.934"/>
  <testcase name="lenOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.909"/>
  <testcase name="lenOfSeqConcat" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.893"/>
  <testcase name="lenOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.974"/>
  <testcase name="lenOfSeqReverse" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.88"/>
  <testcase name="equalityToSeqGetAndSeqLenLeft" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.639"/>
  <testcase name="equalityToSeqGetAndSeqLenRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.76"/>
  <testcase name="getOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.637"/>
  <testcase name="getOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.432"/>
  <testcase name="getOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.3"/>
  <testcase name="getOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.282"/>
  <testcase name="lenOfSeqEmptyEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.241"/>
  <testcase name="lenOfSeqSingletonEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.252"/>
  <testcase name="lenOfSeqConcatEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.266"/>
  <testcase name="lenOfSeqSubEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.404"/>
  <testcase name="lenOfSeqReverseEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.315"/>
  <testcase name="getOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.429"/>
  <testcase name="lenOfSeqDefEQ" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.355"/>
  <testcase name="seqConcatWithSeqEmpty1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.356"/>
  <testcase name="seqConcatWithSeqEmpty2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.276"/>
  <testcase name="seqReverseOfSeqEmpty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.325"/>
  <testcase name="subSeqComplete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.331"/>
  <testcase name="subSeqTailR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.327"/>
  <testcase name="subSeqTailL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.321"/>
  <testcase name="subSeqTailEQR" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.388"/>
  <testcase name="subSeqTailEQL" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.238"/>
  <testcase name="seqDef_split" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.493"/>
  <testcase name="seqDef_induction_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.354"/>
  <testcase name="seqDef_induction_upper_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.483"/>
  <testcase name="seqDef_induction_lower" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.735"/>
  <testcase name="seqDef_induction_lower_concrete" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.609"/>
  <testcase name="seqDef_split_in_three" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.744"/>
  <testcase name="seqDef_empty" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.639"/>
  <testcase name="seqDef_one_summand" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.667"/>
  <testcase name="seqDef_lower_equals_upper" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.57"/>
  <testcase name="seqDefOfSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.682"/>
  <testcase name="seqSelfDefinitionEQ2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.878"/>
  <testcase name="indexOfSeqSingleton" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.895"/>
  <testcase name="indexOfSeqConcatFirst" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.779"/>
  <testcase name="indexOfSeqConcatSecond" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.907"/>
  <testcase name="indexOfSeqSub" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.896"/>
  <testcase name="lenOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.953"/>
  <testcase name="getAnyOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.828"/>
  <testcase name="getOfArray2seq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.777"/>
  <testcase name="getAnyOfNPermInv" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.647"/>
  <testcase name="seqNPermRange" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.685"/>
  <testcase name="seqPermTrans" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.446"/>
  <testcase name="seqPermRefl" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.621"/>
  <testcase name="seqPermSplit" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.437"/>
  <testcase name="seqNPermRight" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.981"/>
  <testcase name="seqPermFromSwap" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.592"/>
  <testcase name="seqPermTransAlt0" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.39"/>
  <testcase name="seqPermTransAlt1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.286"/>
  <testcase name="seqPermTransAlt2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.316"/>
  <testcase name="seqPermTransAlt3" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.469"/>
  <testcase name="schiffl_lemma_2" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="27.817"/>
  <testcase name="schiffl_thm_1" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="5.316"/>
  <testcase name="eqSameSeq" classname="de.uka.ilkd.key.proof.proverules.ProveRulesTest" time="4.526"/>
  <system-out><![CDATA[01:32:07,747 |-INFO in ch.qos.logback.classic.LoggerContext[default] - This is logback-classic version 1.4.5
01:32:07,770 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
01:32:07,784 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/home/runner/work/key/key/key.core/build/resources/test/logback.xml]
01:32:08,203 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [STDOUT]
01:32:08,203 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
01:32:08,219 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [file] in [ch.qos.logback.core.ConsoleAppender]
01:32:08,219 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [append] in [ch.qos.logback.core.ConsoleAppender]
01:32:08,221 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
01:32:08,243 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to WARN
01:32:08,250 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [STDOUT] to Logger[ROOT]
01:32:08,251 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@7c22d4f - End of configuration.
01:32:08,251 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@5f59185e - Registering current configuration as safe fallback point

1120       WARN  Test worker     d.u.i.k.s.ProofSettings   No proof-settings could be loaded, using defaults java.io.FileNotFoundException: /home/runner/.key/proof-settings.props (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
