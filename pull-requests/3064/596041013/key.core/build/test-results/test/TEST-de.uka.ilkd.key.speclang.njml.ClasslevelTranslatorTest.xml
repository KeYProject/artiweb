<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" tests="184" skipped="0" failures="0" errors="0" timestamp="2023-03-13T12:32:38" hostname="fv-az449-12" time="1.224">
  <properties/>
  <testcase name="// from jml ref manual&#10; /* disabled @   old \bigint sum =&#10;      @&#9;&#9;(\sum int j; 0 &lt;= j &amp;&amp; j &lt; a.length; (\bigint)a[j]);&#10;      @   requires Long.MIN_VALUE &lt;= sum &amp;&amp; sum &lt;= Long.MAX_VALUE;&#10;      @   assignable \nothing;&#10;      @   ensures \result == sum;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.0"/>
  <testcase name="// from jml ref manual, disabled&#10;//  @ ghost int i = 0;&#10;//  @ ghost int zero = 0, j, k = i+3;&#10;//  @ ghost float[] a = {1, 2, 3};&#10;//  @ ghost Object o;&#10;//  @ final ghost non_null Object nno = new Object();" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="// from jml ref manual&#10;/*@ protected behavior&#10;  @   requires P;&#10;  @   diverges false;&#10;  @   assignable X;&#10;  @   when \not_specified;&#10;  @   working_space \not_specified;&#10;  @   duration \not_specified;&#10;  @   ensures Q;&#10;  @   signals_only Exception;&#10;  @   signals (Exception) R;&#10;  @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="// from jml ref manual&#10;     /** A specification that can't be satisfied. */&#10;      /*@  public normal_behavior&#10;       @    requires z &lt;= 99;&#10;       @    assignable \nothing;&#10;       @    ensures \result &gt; z;&#10;       @ also&#10;       @  public exceptional_behavior&#10;       @    requires z &lt; 0;&#10;       @    assignable \nothing;&#10;       @    signals (IllegalArgumentException) true;&#10;       @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="// from jml ref manual&#10;          /*@  public exceptional_behavior&#10;            @     requires z &lt; 99;&#10;            @     assignable \nothing;&#10;            @     signals_only IllegalArgumentException;&#10;            @ also&#10;            @   public exceptional_behavior&#10;            @     requires z &gt; 0;&#10;            @     assignable \nothing;&#10;            @     signals_only NullPointerException;&#10;            @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ normal_behavior&#10;      @ assignable footprint;&#10;      @ ensures size() == \old(size()) + 1;&#10;      @ ensures get(size() - 1) == o;&#10;      @ ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; size() - 1; get(i) == \old(get(i)));&#10;      @ ensures \new_elems_fresh(footprint);&#10;      @ diverges true;&#10;      @*/&#10;      /*@nullable@*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.008"/>
  <testcase name="/*@ normal_behavior&#10;            @ requires 0 &lt;= i &amp;&amp; i &lt; size();&#10;            @ assignable \nothing;&#10;            @ accessible footprint;&#10;            @ ensures \result == get(i);&#10;            @*/&#10;          /*@nullable@*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ accessible \inv: footprint;&#10;      @ invariant items != null;&#10;      @ invariant 0 &lt;= count &amp;&amp; count &lt;= items.length;&#10;      @ invariant \typeof(items) == \type(Object[]);&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ model \locset footprint;&#10;      @ accessible footprint: footprint;&#10;      @ represents footprint = count, items, items[*];&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ normal_behavior&#10;      @ assignable \nothing;&#10;      @ ensures size() == 0;&#10;      @ ensures \fresh(footprint);&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ model_behavior&#10;      @ ensures x&gt;0 ==&gt; \result;&#10;      @ model boolean add_pre(int x);&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ helper model boolean preStart(Object contextThread) {&#10;              return \dl_writePermissionObject(contextThread, \permission(this.buffer.inp));&#10;            } @*/&#10;        /*@ helper model boolean postJoin(Object contextThread) {&#10;              return \dl_writePermissionObject(contextThread, \permission(this.buffer.inp));&#10;            } @*/&#10;        /*@ helper model boolean stateInv() {&#10;              return (buffer != null &amp;&amp; \dl_readPermission(\permission(this.buffer)));&#10;            } @*/&#10;        /*@ helper model boolean initPost() {&#10;              return \dl_writePermission(\permission(this.buffer));&#10;            } @*/&#10;        /*@ helper model \locset workingPermissions() { return \singleton(this.buffer.inp); } @*/&#10;        /*@ helper model \locset staticPermissions() { return \singleton(this.buffer); } @*/&#10;        /*@ helper model two_state boolean startTransfer() {&#10;              return \permission(this.buffer.inp) ==&#10;                     \dl_transferPermission(\dl_FALSE(), \dl_currentThread(), this, 0, \old(\permission(this.buffer.inp)));&#10;            } @*/&#10;        /*@ helper model two_state boolean joinTransfer() {&#10;              return \permission(this.buffer.inp) ==&#10;                     \dl_returnPermission(this, \dl_currentThread(), \old(\permission(this.buffer.inp)));&#10;            } @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.024"/>
  <testcase name="//@ public ghost \seq seq;&#10;    //@ public ghost \locset repr;&#10;    /*@ private invariant \subset(this.*, repr) &amp;&amp; 1 &lt;= seq.length &amp;&amp; seq[0] == head;&#10;      @ private invariant next == null ==&gt; seq.length == 1;&#10;      @ private invariant next != null ==&gt; \subset(next.*, repr)&#10;      @                                    &amp;&amp; \subset(next.repr, repr)&#10;      @                                    &amp;&amp; \disjoint(this.*, next.repr)&#10;      @                                    &amp;&amp; seq[1..seq.length] == next.seq&#10;      @                                    &amp;&amp; \invariant_for(next);&#10;      @*/&#10;    //@ accessible \inv: repr \measured_by seq.length;&#10;    /*@ public normal_behaviour&#10;      @   requires tail == null || \invariant_for(tail);&#10;      @   ensures \invariant_for(\result);&#10;      @   ensures tail == null ==&gt; \result.seq == \seq_singleton(x);&#10;      @   ensures tail != null ==&gt; \result.seq == \seq_concat(\seq_singleton(x), tail.seq);&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.043"/>
  <testcase name="/*@&#10;         public behavior&#10;           requires JCSystem.npe != null;&#10;           requires JCSystem.aioobe != null;&#10;           requires&lt;savedHeap&gt; JCSystem.isTransient(dest) != JCSystem.NOT_A_TRANSIENT_OBJECT ==&gt; !\transactionUpdated(dest);&#10;           ensures \result == destOffset + length;&#10;           ensures (\forall short i; i&gt;=0 &amp;&amp; i&lt;length; dest[destOffset + i] == \old(src[srcOffset + i]));&#10;           ensures&lt;savedHeap&gt; (\forall short i; i&gt;=0 &amp;&amp; i&lt;length; \backup(dest[destOffset + i]) ==&#10;                 ((JCSystem.isTransient(dest) == JCSystem.NOT_A_TRANSIENT_OBJECT &amp;&amp; \backup(\transactionUpdated(dest))) ?&#10;                    \old(\backup(dest[destOffset + i]))&#10;                  : \old(src[srcOffset + i]))&#10;              );&#10;           signals (NullPointerException npe) npe == JCSystem.npe &amp;&amp; (src == null || dest == null);&#10;           signals (ArrayIndexOutOfBoundsException aioobe) aioobe == JCSystem.aioobe &amp;&amp; (length &lt; 0 ||&#10;               srcOffset &lt; 0 || destOffset &lt; 0 ||&#10;               srcOffset + length &gt; src.length || destOffset + length &gt; dest.length);&#10;           signals_only NullPointerException, ArrayIndexOutOfBoundsException;&#10;           assignable&lt;heap&gt;&lt;savedHeap&gt; dest[destOffset..destOffset+length-1];&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.101"/>
  <testcase name="/*@ public normal_behavior&#10;      @   assignable \nothing;&#10;      @   assignable&lt;permissions&gt; \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @   ensures message == null &amp;&amp; cause == null;&#10;     @   assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @   ensures message == arg0 &amp;&amp; cause == null;&#10;     @   assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(byte[]);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result[*] \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(String);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \dl_strContent(\result) \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(String);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \dl_strContent(\result) \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result.length == \dl_strContent(this).length;&#10;     @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.length; \dl_inChar(\result[i]));&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(char[]);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result[*] \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.009"/>
  <testcase name="/*@ public exceptional_behavior&#10;      @   requires src == null || dest == null;&#10;      @   signals_only NullPointerException;&#10;      @   assignable \nothing;&#10;      @ also&#10;      @ public exceptional_behavior&#10;      @   requires src instanceof int[] &amp;&amp; dest instanceof int[];&#10;      @   requires src != null &amp;&amp; dest != null;&#10;      @   requires (srcPos &lt; 0 || destPos &lt; 0 || length &lt; 0&#10;      @                  || srcPos + length &gt; ((int[])src).length&#10;      @                  || destPos + length &gt; ((int[])dest).length);&#10;      @    assignable \nothing;&#10;      @    signals_only ArrayIndexOutOfBoundsException;&#10;      @ also&#10;      @ public normal_behavior&#10;      @   requires src instanceof int[] &amp;&amp; dest instanceof int[];&#10;      @   requires src != null &amp;&amp; dest != null;&#10;      @   requires srcPos &gt;= 0 &amp;&amp; destPos &gt;= 0;&#10;      @   requires length &gt;= 0;&#10;      @   requires srcPos + length &lt;= ((int[])src).length&#10;      @         &amp;&amp; destPos + length &lt;= ((int[])dest).length;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; length;&#10;      @             ((int[])dest)[destPos + i] == \old(((int[])src)[srcPos + i]));&#10;      @   assignable ((int[])dest)[destPos .. destPos + length - 1];&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.091"/>
  <testcase name="/*@ public behavior&#10;      @ ensures false;&#10;      @ signals_only \nothing;&#10;      @ diverges true;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="//@ protected nullable ghost String message = null;&#10;//@ protected nullable ghost Throwable cause = null;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == null &amp;&amp; cause == null;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == arg0 &amp;&amp; cause == null;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == arg0 &amp;&amp; cause == arg1;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == null &amp;&amp; cause == arg0;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @    ensures \result == message;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @    ensures \result == cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires cause == null;&#10;     @    ensures \result == this &amp;&amp; cause == arg0;&#10;     @    assignable cause;&#10;     @ helper // needs to be helper because called in constructor&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="//@ public instance ghost \seq seq;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == seq.length;&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq.length;&#10;     @ */" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.033"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == (size() == 0);&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq.length;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures seq == \seq_concat(\old(seq), \seq_singleton(arg0));&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures seq == \seq_concat(\old(seq), arg0.seq);&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0.seq;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == (\exists \bigint i; 0 &lt;= i &amp;&amp; i &lt; seq.length; ((String)seq[i]) == arg0);&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires arg0 == 0;&#10;     @ ensures seq == \seq_concat(\seq_singleton(arg0), \old(seq));&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires 0 &lt;= arg0 &amp;&amp; arg0 &lt; seq.length;&#10;     @ ensures ((Object)seq[arg0]) == \result;&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result.index == 0;&#10;     @ ensures \result.seq == seq;&#10;     @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;     @ ensures \result instanceof ListIteratorImpl;&#10;     @ assignable \nothing;&#10;     @ determines \result.seq \by seq;&#10;     @ determines \result.index \by \nothing;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="//@ public instance ghost \seq seq;&#10;    //@ public instance ghost \bigint index;&#10;    //@ public instance invariant 0 &lt;= index &amp;&amp; index &lt;= seq.length;&#10;    /*@ public normal_behavior&#10;      @ ensures \result == true &lt;==&gt; index &lt; seq.length;&#10;      @ assignable \strictly_nothing;&#10;      @ determines \result \by seq.length, index;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public behavior&#10;      @ requires index &lt; seq.length;&#10;      @ ensures \result == ((Object)seq[\old(index)]);&#10;      @ ensures index == \old(index) + 1;&#10;      @ assignable index;&#10;      @ signals_only java.lang.RuntimeException;&#10;      @ determines \result \by seq, index;&#10;      @ determines index \by \itself;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="//@ public instance ghost \seq key_seq;&#10;    //@ public instance ghost \seq value_seq;&#10;    //@ public instance invariant key_seq.length == value_seq.length;&#10;    //@ public instance invariant (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; key_seq.length; ((Object)key_seq[i]) != null);&#10;    //@ public instance invariant (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; value_seq.length; ((Object)value_seq[i]) != null);&#10;    /*@ public normal_behavior&#10;      @ ensures \result.seq == key_seq;&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.009"/>
  <testcase name="//@ public final ghost \bigint value;&#10;   //@ public static invariant java.math.BigInteger.ZERO.value == (\bigint) 0;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires true;&#10;     @ ensures (\result &lt;= 0) &lt;==&gt; (this.value - param0.value &lt;= 0);&#10;     @ ensures (\result &gt;= 0) &lt;==&gt; (this.value - param0.value &gt;= 0);&#10;     @ assignable \strictly_nothing;&#10;     @ determines \result \by this.value, param0.value;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires true;&#10;     @ ensures \result.value == this.value % param0.value;&#10;     @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*) &amp;&amp; \typeof(\result) == \type(BigInteger);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result.value \by this.value, param0.value;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.007"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures seq.length == 0;&#10;      @ ensures \fresh(this) &amp;&amp; \fresh(this.*);&#10;      @ determines seq \by \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures seq == c.seq;&#10;      @ ensures \fresh(this) &amp;&amp; \fresh(this.*) &amp;&amp; \typeof(this) == \type(ArrayList);&#10;      @ determines this, seq \by c.seq \new_objects this;&#10;      @*/&#10;/*@ public normal_behavior&#10;&#9;  @ ensures \invariant_for(\result);&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.seq.length; ((String)\result.seq[i]) != null);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.seq.length; ((String)\result.seq[i]) != null);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public behavior&#10;     @ requires true;&#10;     @ ensures true;&#10;     @ assignable \everything;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures key_seq.length == 0;&#10;      @ ensures value_seq.length == 0;&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;&#9;  @ ensures seq == param0.seq;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;      @ requires true;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ normal_behaviour&#10;      @   requires (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; 0 &lt;= a[i]);&#10;      @   assignable sum, max;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i] &lt;= max);&#10;      @   ensures (a.length &gt; 0&#10;      @           ==&gt; (\exists int i; 0 &lt;= i &amp;&amp; i &lt; a.length; max == a[i]));&#10;      @   ensures sum == (\sum int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i]);&#10;      @   ensures sum &lt;= a.length * max;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.022"/>
  <testcase name="/*@ normal_behaviour&#10;      @   requires (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; 0 &lt;= a[i]);&#10;      @   assignable sum, max;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i] &lt;= max);&#10;      @   ensures (a.length &gt; 0&#10;      @           ==&gt; (\exists int i; 0 &lt;= i &amp;&amp; i &lt; a.length; max == a[i]));&#10;      @   ensures sum == (\sum int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i]);&#10;      @   ensures sum &lt;= a.length * max;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.011"/>
  <testcase name="/*@ normal_behaviour&#10;      @   requires (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; 0 &lt;= a[i]);&#10;      @   assignable sum, max;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i] &lt;= max);&#10;      @   ensures (a.length &gt; 0&#10;      @           ==&gt; (\exists int i; 0 &lt;= i &amp;&amp; i &lt; a.length; max == a[i]));&#10;      @   ensures sum == (\sum int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i]);&#10;      @   ensures sum &lt;= a.length * max;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.011"/>
  <testcase name="/*@ public normal_behavior&#10;     @   ensures message == null &amp;&amp; cause == null;&#10;     @   assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @   ensures message == arg0 &amp;&amp; cause == null;&#10;     @   assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;      @   assignable \nothing;&#10;      @   assignable&lt;permissions&gt; \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(byte[]);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result[*] \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(String);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \dl_strContent(\result) \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(String);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \dl_strContent(\result) \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result.length == \dl_strContent(this).length;&#10;     @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.length; \dl_inChar(\result[i]));&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(char[]);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result[*] \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.007"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(byte[]);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result[*] \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(String);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \dl_strContent(\result) \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(String);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \dl_strContent(\result) \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result.length == \dl_strContent(this).length;&#10;     @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.length; \dl_inChar(\result[i]));&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(char[]);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result[*] \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.007"/>
  <testcase name="/*@ public exceptional_behavior&#10;      @   requires src == null || dest == null;&#10;      @   signals_only NullPointerException;&#10;      @   assignable \nothing;&#10;      @ also&#10;      @ public exceptional_behavior&#10;      @   requires src instanceof int[] &amp;&amp; dest instanceof int[];&#10;      @   requires src != null &amp;&amp; dest != null;&#10;      @   requires (srcPos &lt; 0 || destPos &lt; 0 || length &lt; 0&#10;      @                  || srcPos + length &gt; ((int[])src).length&#10;      @                  || destPos + length &gt; ((int[])dest).length);&#10;      @    assignable \nothing;&#10;      @    signals_only ArrayIndexOutOfBoundsException;&#10;      @ also&#10;      @ public normal_behavior&#10;      @   requires src instanceof int[] &amp;&amp; dest instanceof int[];&#10;      @   requires src != null &amp;&amp; dest != null;&#10;      @   requires srcPos &gt;= 0 &amp;&amp; destPos &gt;= 0;&#10;      @   requires length &gt;= 0;&#10;      @   requires srcPos + length &lt;= ((int[])src).length&#10;      @         &amp;&amp; destPos + length &lt;= ((int[])dest).length;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; length;&#10;      @             ((int[])dest)[destPos + i] == \old(((int[])src)[srcPos + i]));&#10;      @   assignable ((int[])dest)[destPos .. destPos + length - 1];&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.086"/>
  <testcase name="/*@ public behavior&#10;      @ ensures false;&#10;      @ signals_only \nothing;&#10;      @ diverges true;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public exceptional_behavior&#10;      @   requires src == null || dest == null;&#10;      @   signals_only NullPointerException;&#10;      @   assignable \nothing;&#10;      @ also&#10;      @ public exceptional_behavior&#10;      @   requires src instanceof int[] &amp;&amp; dest instanceof int[];&#10;      @   requires src != null &amp;&amp; dest != null;&#10;      @   requires (srcPos &lt; 0 || destPos &lt; 0 || length &lt; 0&#10;      @                  || srcPos + length &gt; ((int[])src).length&#10;      @                  || destPos + length &gt; ((int[])dest).length);&#10;      @    assignable \nothing;&#10;      @    signals_only ArrayIndexOutOfBoundsException;&#10;      @ also&#10;      @ public normal_behavior&#10;      @   requires src instanceof int[] &amp;&amp; dest instanceof int[];&#10;      @   requires src != null &amp;&amp; dest != null;&#10;      @   requires srcPos &gt;= 0 &amp;&amp; destPos &gt;= 0;&#10;      @   requires length &gt;= 0;&#10;      @   requires srcPos + length &lt;= ((int[])src).length&#10;      @         &amp;&amp; destPos + length &lt;= ((int[])dest).length;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; length;&#10;      @             ((int[])dest)[destPos + i] == \old(((int[])src)[srcPos + i]));&#10;      @   assignable ((int[])dest)[destPos .. destPos + length - 1];&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.086"/>
  <testcase name="/*@ public behavior&#10;      @ ensures false;&#10;      @ signals_only \nothing;&#10;      @ diverges true;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == null &amp;&amp; cause == null;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == arg0 &amp;&amp; cause == null;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == arg0 &amp;&amp; cause == arg1;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == null &amp;&amp; cause == arg0;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @    ensures \result == message;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @    ensures \result == cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires cause == null;&#10;     @    ensures \result == this &amp;&amp; cause == arg0;&#10;     @    assignable cause;&#10;     @ helper // needs to be helper because called in constructor&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @    ensures \result == message;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @    ensures \result == cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires cause == null;&#10;     @    ensures \result == this &amp;&amp; cause == arg0;&#10;     @    assignable cause;&#10;     @ helper // needs to be helper because called in constructor&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="//@ protected nullable ghost String message = null;&#10;   //@ protected nullable ghost Throwable cause = null;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == null &amp;&amp; cause == null;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == arg0 &amp;&amp; cause == null;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="//@ public final ghost \bigint value;&#10;//@ public static invariant java.math.BigInteger.ZERO.value == (\bigint) 0;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires true;&#10;     @ ensures (\result &lt;= 0) &lt;==&gt; (this.value - param0.value &lt;= 0);&#10;     @ ensures (\result &gt;= 0) &lt;==&gt; (this.value - param0.value &gt;= 0);&#10;     @ assignable \strictly_nothing;&#10;     @ determines \result \by this.value, param0.value;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires true;&#10;     @ ensures \result.value == this.value % param0.value;&#10;     @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*) &amp;&amp; \typeof(\result) == \type(BigInteger);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result.value \by this.value, param0.value;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.007"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires true;&#10;     @ ensures (\result &lt;= 0) &lt;==&gt; (this.value - param0.value &lt;= 0);&#10;     @ ensures (\result &gt;= 0) &lt;==&gt; (this.value - param0.value &gt;= 0);&#10;     @ assignable \strictly_nothing;&#10;     @ determines \result \by this.value, param0.value;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires true;&#10;     @ ensures \result.value == this.value % param0.value;&#10;     @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*) &amp;&amp; \typeof(\result) == \type(BigInteger);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result.value \by this.value, param0.value;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures seq.length == 0;&#10;      @ ensures \fresh(this) &amp;&amp; \fresh(this.*);&#10;      @ determines seq \by \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures seq == c.seq;&#10;      @ ensures \fresh(this) &amp;&amp; \fresh(this.*) &amp;&amp; \typeof(this) == \type(ArrayList);&#10;      @ determines this, seq \by c.seq \new_objects this;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures seq.length == 0;&#10;      @ ensures \fresh(this) &amp;&amp; \fresh(this.*);&#10;      @ determines seq \by \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures seq == c.seq;&#10;      @ ensures \fresh(this) &amp;&amp; \fresh(this.*) &amp;&amp; \typeof(this) == \type(ArrayList);&#10;      @ determines this, seq \by c.seq \new_objects this;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;&#9;  @ ensures \invariant_for(\result);&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.seq.length; ((String)\result.seq[i]) != null);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.seq.length; ((String)\result.seq[i]) != null);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public normal_behavior&#10;&#9;  @ ensures \invariant_for(\result);&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.seq.length; ((String)\result.seq[i]) != null);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.seq.length; ((String)\result.seq[i]) != null);&#10;      @ assignable \nothing;&#10;      @*/&#10;//@ public instance ghost \seq seq;&#10;   /*@ public normal_behavior&#10;     @ ensures \result == seq.length;&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq.length;&#10;     @ */" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.009"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == (size() == 0);&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq.length;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures seq == \seq_concat(\old(seq), \seq_singleton(arg0));&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures seq == \seq_concat(\old(seq), arg0.seq);&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0.seq;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == (\exists \bigint i; 0 &lt;= i &amp;&amp; i &lt; seq.length; ((String)seq[i]) == arg0);&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="//@ public instance ghost \seq seq;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.0"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == seq.length;&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq.length;&#10;     @ */" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == (size() == 0);&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq.length;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures seq == \seq_concat(\old(seq), \seq_singleton(arg0));&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures seq == \seq_concat(\old(seq), arg0.seq);&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0.seq;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == (\exists \bigint i; 0 &lt;= i &amp;&amp; i &lt; seq.length; ((String)seq[i]) == arg0);&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public behavior&#10;     @ requires true;&#10;     @ ensures true;&#10;     @ assignable \everything;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public behavior&#10;     @ requires true;&#10;     @ ensures true;&#10;     @ assignable \everything;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures key_seq.length == 0;&#10;      @ ensures value_seq.length == 0;&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures key_seq.length == 0;&#10;      @ ensures value_seq.length == 0;&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires arg0 == 0;&#10;     @ ensures seq == \seq_concat(\seq_singleton(arg0), \old(seq));&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires 0 &lt;= arg0 &amp;&amp; arg0 &lt; seq.length;&#10;     @ ensures ((Object)seq[arg0]) == \result;&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result.index == 0;&#10;     @ ensures \result.seq == seq;&#10;     @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;     @ ensures \result instanceof ListIteratorImpl;&#10;     @ assignable \nothing;&#10;     @ determines \result.seq \by seq;&#10;     @ determines \result.index \by \nothing;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires arg0 == 0;&#10;     @ ensures seq == \seq_concat(\seq_singleton(arg0), \old(seq));&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires 0 &lt;= arg0 &amp;&amp; arg0 &lt; seq.length;&#10;     @ ensures ((Object)seq[arg0]) == \result;&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result.index == 0;&#10;     @ ensures \result.seq == seq;&#10;     @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;     @ ensures \result instanceof ListIteratorImpl;&#10;     @ assignable \nothing;&#10;     @ determines \result.seq \by seq;&#10;     @ determines \result.index \by \nothing;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="//@ public instance ghost \seq seq;&#10;    //@ public instance ghost \bigint index;&#10;    //@ public instance invariant 0 &lt;= index &amp;&amp; index &lt;= seq.length;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \result == true &lt;==&gt; index &lt; seq.length;&#10;      @ assignable \strictly_nothing;&#10;      @ determines \result \by seq.length, index;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public behavior&#10;      @ requires index &lt; seq.length;&#10;      @ ensures \result == ((Object)seq[\old(index)]);&#10;      @ ensures index == \old(index) + 1;&#10;      @ assignable index;&#10;      @ signals_only java.lang.RuntimeException;&#10;      @ determines \result \by seq, index;&#10;      @ determines index \by \itself;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.009"/>
  <testcase name="//@ public instance ghost \seq seq;&#10;//@ public instance ghost \bigint index;&#10;//@ public instance invariant 0 &lt;= index &amp;&amp; index &lt;= seq.length;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \result == true &lt;==&gt; index &lt; seq.length;&#10;      @ assignable \strictly_nothing;&#10;      @ determines \result \by seq.length, index;&#10;      @*/&#10;/*@ public behavior&#10;      @ requires index &lt; seq.length;&#10;      @ ensures \result == ((Object)seq[\old(index)]);&#10;      @ ensures index == \old(index) + 1;&#10;      @ assignable index;&#10;      @ signals_only java.lang.RuntimeException;&#10;      @ determines \result \by seq, index;&#10;      @ determines index \by \itself;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.008"/>
  <testcase name="//@ public instance ghost \seq key_seq;&#10;    //@ public instance ghost \seq value_seq;&#10;    //@ public instance invariant key_seq.length == value_seq.length;&#10;    //@ public instance invariant (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; key_seq.length; ((Object)key_seq[i]) != null);&#10;    //@ public instance invariant (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; value_seq.length; ((Object)value_seq[i]) != null);&#10;    /*@ public normal_behavior&#10;      @ ensures \result.seq == key_seq;&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.008"/>
  <testcase name="//@ public instance ghost \seq key_seq;&#10;//@ public instance ghost \seq value_seq;&#10;//@ public instance invariant key_seq.length == value_seq.length;&#10;//@ public instance invariant (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; key_seq.length; ((Object)key_seq[i]) != null);&#10;//@ public instance invariant (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; value_seq.length; ((Object)value_seq[i]) != null);" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="/*@ public normal_behavior&#10;  @ ensures \result.seq == key_seq;&#10;  @ ensures \fresh(\result);&#10;  @ assignable \nothing;&#10;  @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;      @   assignable \nothing;&#10;      @   assignable&lt;permissions&gt; \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @   ensures message == null &amp;&amp; cause == null;&#10;     @   assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @   ensures message == arg0 &amp;&amp; cause == null;&#10;     @   assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(byte[]);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result[*] \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(String);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \dl_strContent(\result) \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(String);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \dl_strContent(\result) \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result.length == \dl_strContent(this).length;&#10;     @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.length; \dl_inChar(\result[i]));&#10;     @ ensures \fresh(\result) &amp;&amp; \typeof(\result) == \type(char[]);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result[*] \by \dl_strContent(this);&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.007"/>
  <testcase name="/*@ public exceptional_behavior&#10;      @   requires src == null || dest == null;&#10;      @   signals_only NullPointerException;&#10;      @   assignable \nothing;&#10;      @ also&#10;      @ public exceptional_behavior&#10;      @   requires src instanceof int[] &amp;&amp; dest instanceof int[];&#10;      @   requires src != null &amp;&amp; dest != null;&#10;      @   requires (srcPos &lt; 0 || destPos &lt; 0 || length &lt; 0&#10;      @                  || srcPos + length &gt; ((int[])src).length&#10;      @                  || destPos + length &gt; ((int[])dest).length);&#10;      @    assignable \nothing;&#10;      @    signals_only ArrayIndexOutOfBoundsException;&#10;      @ also&#10;      @ public normal_behavior&#10;      @   requires src instanceof int[] &amp;&amp; dest instanceof int[];&#10;      @   requires src != null &amp;&amp; dest != null;&#10;      @   requires srcPos &gt;= 0 &amp;&amp; destPos &gt;= 0;&#10;      @   requires length &gt;= 0;&#10;      @   requires srcPos + length &lt;= ((int[])src).length&#10;      @         &amp;&amp; destPos + length &lt;= ((int[])dest).length;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; length;&#10;      @             ((int[])dest)[destPos + i] == \old(((int[])src)[srcPos + i]));&#10;      @   assignable ((int[])dest)[destPos .. destPos + length - 1];&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.086"/>
  <testcase name="/*@ public behavior&#10;      @ ensures false;&#10;      @ signals_only \nothing;&#10;      @ diverges true;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="//@ protected nullable ghost String message = null;&#10;   //@ protected nullable ghost Throwable cause = null;&#10;   /*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == null &amp;&amp; cause == null;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == arg0 &amp;&amp; cause == null;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == arg0 &amp;&amp; cause == arg1;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires true;&#10;     @    ensures message == null &amp;&amp; cause == arg0;&#10;     @    assignable message, cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @    ensures \result == message;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @    ensures \result == cause;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;     @    requires cause == null;&#10;     @    ensures \result == this &amp;&amp; cause == arg0;&#10;     @    assignable cause;&#10;     @ helper // needs to be helper because called in constructor&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="// public void printStackTrace(java.io.PrintStream arg0);&#10;// public void printStackTrace(java.io.PrintWriter arg0);" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.0"/>
  <testcase name="// public java.lang.StackTraceElement[] getStackTrace();&#10;// public void setStackTrace(java.lang.StackTraceElement[] arg0);" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.0"/>
  <testcase name="//@ public instance ghost \seq seq;&#10;   /*@ public normal_behavior&#10;     @ ensures \result == seq.length;&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq.length;&#10;     @ */" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == (size() == 0);&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq.length;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures seq == \seq_concat(\old(seq), \seq_singleton(arg0));&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures seq == \seq_concat(\old(seq), arg0.seq);&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0.seq;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result == (\exists \bigint i; 0 &lt;= i &amp;&amp; i &lt; seq.length; ((String)seq[i]) == arg0);&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires arg0 == 0;&#10;     @ ensures seq == \seq_concat(\seq_singleton(arg0), \old(seq));&#10;     @ assignable seq;&#10;     @ determines seq \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires 0 &lt;= arg0 &amp;&amp; arg0 &lt; seq.length;&#10;     @ ensures ((Object)seq[arg0]) == \result;&#10;     @ assignable \nothing;&#10;     @ determines \result \by seq, arg0;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;     @ ensures \result.index == 0;&#10;     @ ensures \result.seq == seq;&#10;     @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;     @ ensures \result instanceof ListIteratorImpl;&#10;     @ assignable \nothing;&#10;     @ determines \result.seq \by seq;&#10;     @ determines \result.index \by \nothing;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.006"/>
  <testcase name="//@ public instance ghost \seq seq;&#10;    //@ public instance ghost \bigint index;&#10;    //@ public instance invariant 0 &lt;= index &amp;&amp; index &lt;= seq.length;&#10;    /*@ public normal_behavior&#10;      @ ensures \result == true &lt;==&gt; index &lt; seq.length;&#10;      @ assignable \strictly_nothing;&#10;      @ determines \result \by seq.length, index;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public behavior&#10;      @ requires index &lt; seq.length;&#10;      @ ensures \result == ((Object)seq[\old(index)]);&#10;      @ ensures index == \old(index) + 1;&#10;      @ assignable index;&#10;      @ signals_only java.lang.RuntimeException;&#10;      @ determines \result \by seq, index;&#10;      @ determines index \by \itself;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="//@ public instance ghost \seq key_seq;&#10;//@ public instance ghost \seq value_seq;&#10;//@ public instance invariant key_seq.length == value_seq.length;&#10;//@ public instance invariant (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; key_seq.length; ((Object)key_seq[i]) != null);&#10;//@ public instance invariant (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; value_seq.length; ((Object)value_seq[i]) != null);&#10;/*@ public normal_behavior&#10;  @ ensures \result.seq == key_seq;&#10;  @ ensures \fresh(\result);&#10;  @ assignable \nothing;&#10;  @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.009"/>
  <testcase name="// public void print(float f);&#10;// public void print(double d);" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.0"/>
  <testcase name="// public void println(float x);&#10;// public void println(double x);" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="//@ public final ghost \bigint value;&#10;//@ public static invariant java.math.BigInteger.ZERO.value == (\bigint) 0;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires true;&#10;     @ ensures (\result &lt;= 0) &lt;==&gt; (this.value - param0.value &lt;= 0);&#10;     @ ensures (\result &gt;= 0) &lt;==&gt; (this.value - param0.value &gt;= 0);&#10;     @ assignable \strictly_nothing;&#10;     @ determines \result \by this.value, param0.value;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public normal_behavior&#10;     @ requires true;&#10;     @ ensures \result.value == this.value % param0.value;&#10;     @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*) &amp;&amp; \typeof(\result) == \type(BigInteger);&#10;     @ assignable \nothing;&#10;     @ determines \result \by \nothing \new_objects \result;&#10;     @ determines \result.value \by this.value, param0.value;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.007"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures seq.length == 0;&#10;      @ ensures \fresh(this) &amp;&amp; \fresh(this.*);&#10;      @ determines seq \by \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures seq == c.seq;&#10;      @ ensures \fresh(this) &amp;&amp; \fresh(this.*) &amp;&amp; \typeof(this) == \type(ArrayList);&#10;      @ determines this, seq \by c.seq \new_objects this;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="/*@ public normal_behavior&#10;&#9;  @ ensures \invariant_for(\result);&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures \fresh(\result);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.seq.length; ((String)\result.seq[i]) != null);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures \fresh(\result) &amp;&amp; \fresh(\result.*);&#10;      @ ensures \invariant_for(\result);&#10;      @ ensures (\forall \bigint i; 0 &lt;= i &amp;&amp; i &lt; \result.seq.length; ((String)\result.seq[i]) != null);&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.005"/>
  <testcase name="/*@ public behavior&#10;     @ requires true;&#10;     @ ensures true;&#10;     @ assignable \everything;&#10;     @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;      @ ensures key_seq.length == 0;&#10;      @ ensures value_seq.length == 0;&#10;      @ assignable \nothing;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.003"/>
  <testcase name="/*@ public normal_behavior&#10;  @ ensures seq == param0.seq;&#10;  @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ public normal_behavior&#10;      @ requires true;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.0"/>
  <testcase name="/*@ normal_behaviour&#10;      @   requires (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; 0 &lt;= a[i]);&#10;      @   assignable sum, max;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i] &lt;= max);&#10;      @   ensures (a.length &gt; 0&#10;      @           ==&gt; (\exists int i; 0 &lt;= i &amp;&amp; i &lt; a.length; max == a[i]));&#10;      @   ensures sum == (\sum int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i]);&#10;      @   ensures sum &lt;= a.length * max;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.01"/>
  <testcase name="/*@ normal_behaviour&#10;      @   requires (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; 0 &lt;= a[i]);&#10;      @   assignable sum, max;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i] &lt;= max);&#10;      @   ensures (a.length &gt; 0&#10;      @           ==&gt; (\exists int i; 0 &lt;= i &amp;&amp; i &lt; a.length; max == a[i]));&#10;      @   ensures sum == (\sum int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i]);&#10;      @   ensures sum &lt;= a.length * max;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.011"/>
  <testcase name="/*@ normal_behaviour&#10;      @   requires (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; 0 &lt;= a[i]);&#10;      @   assignable sum, max;&#10;      @   ensures (\forall int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i] &lt;= max);&#10;      @   ensures (a.length &gt; 0&#10;      @           ==&gt; (\exists int i; 0 &lt;= i &amp;&amp; i &lt; a.length; max == a[i]));&#10;      @   ensures sum == (\sum int i; 0 &lt;= i &amp;&amp; i &lt; a.length; a[i]);&#10;      @   ensures sum &lt;= a.length * max;&#10;      @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.011"/>
  <testcase name="//@ model \locset footprint;&#10;//@ accessible footprint: footprint;&#10;//@ accessible \inv: footprint;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.004"/>
  <testcase name="//@ accessible \inv: footprint;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="//@ model \locset footprint;&#10;//@ accessible footprint: footprint;&#10;//@ requires x &gt; 0;&#10;//@ requires \disjoint(footprint,\singleton(x));&#10;//@ ensures x &gt; 0;" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.01"/>
  <testcase name="model int f(int x) {&#10; return x+1;&#10;}" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@&#10;  @ model int f(int x) {&#10;  @  return x+1;&#10;  @ }&#10;*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.001"/>
  <testcase name="/*@ model_behaviour&#10;  @   requires true;&#10;  @ model int f(int x) {&#10;  @   return x+1;&#10;  @ }&#10;  @*/" classname="de.uka.ilkd.key.speclang.njml.ClasslevelTranslatorTest" time="0.002"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
