<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" tests="186" skipped="1" failures="0" errors="0" timestamp="2023-02-02T14:45:38" hostname="fv-az565-672" time="805.643">
  <properties/>
  <testcase name="testAllNodeTypesTest_JavaProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.938"/>
  <testcase name="testAllNodeTypesTest_JavaProfile_NoOneStepSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.703"/>
  <testcase name="testAllNodeTypesTest_SymbolicExecutionProfile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.267"/>
  <testcase name="testAnotherInstanceContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.341"/>
  <testcase name="testAnotherStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.352"/>
  <testcase name="testArraySumWhileWithBreak()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.855"/>
  <testcase name="testArraySumWhileWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.333"/>
  <testcase name="testArraySumWhileWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.984"/>
  <testcase name="testArraySumWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.763"/>
  <testcase name="testAssumesUserInputTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.427"/>
  <testcase name="testBlockContractAssignableEverything()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.092"/>
  <testcase name="testBlockContractAssignableLocationNotRequested()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.089"/>
  <testcase name="testBlockContractAssignableRequestedLocation()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.081"/>
  <testcase name="testBlockContractParamRemaned()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.081"/>
  <testcase name="testBlockContractPreconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.065"/>
  <testcase name="testBlockContractThisTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.135"/>
  <testcase name="testBlockContractVarRenamedLater()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.017"/>
  <testcase name="testBlockContractWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.411"/>
  <testcase name="testBlockContractWithExceptionPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.418"/>
  <testcase name="testBlockContractWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.04"/>
  <testcase name="testBlockContractWithReturnPostconditionNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.066"/>
  <testcase name="testBranchPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.196"/>
  <testcase name="testBranchStatementBlockTest_ifNoBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.183"/>
  <testcase name="testBranchStatementBlockTest_min()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.189"/>
  <testcase name="testBranchStatementBlockTest_nestedIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.461"/>
  <testcase name="testBranchStatementBlockTest_onlyElse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.032"/>
  <testcase name="testBranchStatementBlockTest_onlyEmptyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.001"/>
  <testcase name="testBranchStatementBlockTest_onlyThen()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.058"/>
  <testcase name="testBranchStatementBlockTest_recursive()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.321"/>
  <testcase name="testBranchStatementBlockTest_simpleBlock()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.004"/>
  <testcase name="testBranchStatementBlockTest_switchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.91"/>
  <testcase name="testComplexConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="0.0">
    <skipped/>
  </testcase>
  <testcase name="testComplexFlatSteps()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.989"/>
  <testcase name="testComplexIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.232"/>
  <testcase name="testComplexPruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.182"/>
  <testcase name="testConstraintsAfterUsedLoopInvariant()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="9.121"/>
  <testcase name="testConstraintsOfAppliedMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="9.07"/>
  <testcase name="testDoWhileFlaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.043"/>
  <testcase name="testDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.165"/>
  <testcase name="testElseIfDifferentVariables()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.408"/>
  <testcase name="testElseIfTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.212"/>
  <testcase name="testElseIfTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.386"/>
  <testcase name="testElseIfTest_variablesParameterAttributesChange()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.917"/>
  <testcase name="testEmptyBlockTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.021"/>
  <testcase name="testExceptionalMethodReturnTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.458"/>
  <testcase name="testExceptionalMethodReturnTestWithLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.036"/>
  <testcase name="testFixedRecursiveMethodCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.277"/>
  <testcase name="testForEachTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.379"/>
  <testcase name="testForFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.028"/>
  <testcase name="testForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.227"/>
  <testcase name="testFunctionalDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.314"/>
  <testcase name="testFunctionalForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.346"/>
  <testcase name="testFunctionalIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.249"/>
  <testcase name="testFunctionalWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.36"/>
  <testcase name="testIdenticalTermsDuringProof()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.499"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.087"/>
  <testcase name="testInstanceContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.097"/>
  <testcase name="testInstanceContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.1"/>
  <testcase name="testInstanceContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.074"/>
  <testcase name="testInstanceContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.066"/>
  <testcase name="testInstanceContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.066"/>
  <testcase name="testInstanceContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.093"/>
  <testcase name="testInstanceContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.098"/>
  <testcase name="testInstanceContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.199"/>
  <testcase name="testInstanceContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.177"/>
  <testcase name="testInstanceContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.14"/>
  <testcase name="testInstanceContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.117"/>
  <testcase name="testInstanceOfNotInEndlessLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.405"/>
  <testcase name="testJoinTestAfterAssignment()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.031"/>
  <testcase name="testJoinTestAfterBranchCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.043"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.0"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalAndSubgoals()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.024"/>
  <testcase name="testJoinTestAfterBranchConditionWithWeakeningGoalNotVerified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.02"/>
  <testcase name="testLabelTest_doubled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.004"/>
  <testcase name="testLabelTest_lost()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.023"/>
  <testcase name="testLoopBodyBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.999"/>
  <testcase name="testLoopInvariantAndOperationContractStrictlyPure()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.266"/>
  <testcase name="testLoopInvariantMethodReturnInDifferentModalities()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.285"/>
  <testcase name="testLoopIteration_LoopStatementCopied()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.146"/>
  <testcase name="testLoopIteration_LoopStatementReused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.128"/>
  <testcase name="testLoopIteration_LoopWithMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.658"/>
  <testcase name="testLoopStatementBlockTest_nestedLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.105"/>
  <testcase name="testLoopStatementBlockTest_simpleLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.147"/>
  <testcase name="testLoopUsageBranchClosed()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.009"/>
  <testcase name="testMethodCallOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.142"/>
  <testcase name="testMethodCallOnObjectWithException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.514"/>
  <testcase name="testMethodCallParallelTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.483"/>
  <testcase name="testMethodCallReturnTests()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="14.259"/>
  <testcase name="testMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.056"/>
  <testcase name="testMethodFormatTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.362"/>
  <testcase name="testMethodHierarchyCallTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.157"/>
  <testcase name="testMethodHierarchyCallWithExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.151"/>
  <testcase name="testNestedDoWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.196"/>
  <testcase name="testNestedForTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.201"/>
  <testcase name="testNestedLoopsWithContinue()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.866"/>
  <testcase name="testNestedWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.299"/>
  <testcase name="testPrettyPrinting_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.419"/>
  <testcase name="testPrettyPrinting_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.403"/>
  <testcase name="testRecursiveFibonacci_LONG_RUNNING_TEST()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="39.157"/>
  <testcase name="testSimpleConstructorTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.117"/>
  <testcase name="testSimpleIf()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.259"/>
  <testcase name="testSimpleIfNoConditionSimplification()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.054"/>
  <testcase name="testSimpleMethodCallStack()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.093"/>
  <testcase name="testSimpleNullPointerSplitTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.234"/>
  <testcase name="testSimplePruning()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.195"/>
  <testcase name="testSimpleStaticContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.051"/>
  <testcase name="testStatementKindTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.145"/>
  <testcase name="testStatements()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.0"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnspecifiedUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.038"/>
  <testcase name="testStaticContractTest_mainBooleanResultUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.055"/>
  <testcase name="testStaticContractTest_mainConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.064"/>
  <testcase name="testStaticContractTest_mainExceptinal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.042"/>
  <testcase name="testStaticContractTest_mainExceptinalUnused()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.04"/>
  <testcase name="testStaticContractTest_mainExceptinalVoid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.045"/>
  <testcase name="testStaticContractTest_mainExceptionalConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.049"/>
  <testcase name="testStaticContractTest_mainNoArgs()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.079"/>
  <testcase name="testStaticContractTest_mainOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.137"/>
  <testcase name="testStaticContractTest_mainResult()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.142"/>
  <testcase name="testStaticContractTest_mainResultNotSpecified()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.157"/>
  <testcase name="testStaticContractTest_mainVoidMethod()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.103"/>
  <testcase name="testStaticDefaultContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.141"/>
  <testcase name="testStaticInstanceFieldChanged()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="12.874"/>
  <testcase name="testStaticMethodCall()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.108"/>
  <testcase name="testSwitchCaseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.986"/>
  <testcase name="testSwitchCaseTest_mergedBranchConditions()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.149"/>
  <testcase name="testSymbolicExecutionCompletionsTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.573"/>
  <testcase name="testThrowTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.985"/>
  <testcase name="testThrowVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.018"/>
  <testcase name="testTryCatchFinally()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.218"/>
  <testcase name="testUnicode_Disabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.069"/>
  <testcase name="testUnicode_Enabled()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.111"/>
  <testcase name="testUseLoopInvariantArrayAverage()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.635"/>
  <testcase name="testUseLoopInvariantArraySizeDoWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.427"/>
  <testcase name="testUseLoopInvariantArraySizeWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.282"/>
  <testcase name="testUseLoopInvariantArraySumFor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.416"/>
  <testcase name="testUseLoopInvariantArraySumForEach()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.409"/>
  <testcase name="testUseLoopInvariantArraySumWhile()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.382"/>
  <testcase name="testUseLoopInvariantArraySumWhileInitiallyInvalid()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.433"/>
  <testcase name="testUseLoopInvariantLoopSplittingCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.009"/>
  <testcase name="testUseLoopInvariantTwoLoops()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.654"/>
  <testcase name="testUseLoopInvariantWithoutDecreasing()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.415"/>
  <testcase name="testUseOperationContractAllBranchesOpenTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.618"/>
  <testcase name="testUseOperationContractApplyContractTwice()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.057"/>
  <testcase name="testUseOperationContractExceptionalNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.077"/>
  <testcase name="testUseOperationContractFalsePreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.078"/>
  <testcase name="testUseOperationContractFixedNormalPostTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.056"/>
  <testcase name="testUseOperationContractInvalidPreconditionOnObjectTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.073"/>
  <testcase name="testUseOperationContractInvalidPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.126"/>
  <testcase name="testUseOperationContractLightweightOperationContractTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.119"/>
  <testcase name="testUseOperationContractNoExceptionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.039"/>
  <testcase name="testUseOperationContractNoPreconditionTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.042"/>
  <testcase name="testUseOperationContractNoPreconditionWithNullCheckTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.06"/>
  <testcase name="testUseOperationContractNormalAndExceptionalBranchTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.304"/>
  <testcase name="testUseOperationContractNormalAndExceptionalTogetherTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.058"/>
  <testcase name="testUseOperationContractQueryTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.028"/>
  <testcase name="testUseOperationContractStatementsInImpliciteConstructor()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="15.192"/>
  <testcase name="testUseOperationContractVariableNestedOperationContractUse()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.007"/>
  <testcase name="testVariablesArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.01"/>
  <testcase name="testVariablesArrayCreationInstanceTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.363"/>
  <testcase name="testVariablesArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.451"/>
  <testcase name="testVariablesArrayTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.463"/>
  <testcase name="testVariablesEmptyArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.002"/>
  <testcase name="testVariablesInstanceVariableTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="23.662"/>
  <testcase name="testVariablesLocalTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.297"/>
  <testcase name="testVariablesNonSimpleArrayAssignmentTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="24.047"/>
  <testcase name="testVariablesNonSimpleArrayCreationTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="7.924"/>
  <testcase name="testVariablesStaticTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="4.802"/>
  <testcase name="testVariablesUnknownTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="13.013"/>
  <testcase name="testVerifiedTest_loop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.697"/>
  <testcase name="testVerifiedTest_magic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.082"/>
  <testcase name="testVerifiedTest_magicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.056"/>
  <testcase name="testVerifiedTest_notLoop()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.727"/>
  <testcase name="testVerifiedTest_notMagic()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.084"/>
  <testcase name="testVerifiedTest_notMagicException()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.091"/>
  <testcase name="testVerifyMin()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="6.043"/>
  <testcase name="testVerifyMinTrueBranch()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="2.926"/>
  <testcase name="testVerifyNumberNormal()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.135"/>
  <testcase name="testVoidWhileWithReturn()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.626"/>
  <testcase name="testWhileFalseTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.036"/>
  <testcase name="testWhileTest()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.216"/>
  <testcase name="testWhileWithLoopInvariantInCondition()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.823"/>
  <testcase name="testWhileWithMethodCallAsConditionOnObject()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="8.269"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.463"/>
  <testcase name="testWhileWithMethodCallAsCondition_NoPreMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="5.115"/>
  <testcase name="testWhileWithMethodCallAsCondition_preExpandMethods()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.484"/>
  <testcase name="testWhileWithMethodCallAsCondition_preMethodContract()" classname="de.uka.ilkd.key.symbolic_execution.testcase.TestSymbolicExecutionTreeBuilder" time="3.365"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
